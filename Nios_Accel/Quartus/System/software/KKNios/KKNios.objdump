
KKNios.elf:     file format elf32-littlenios2
KKNios.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x001401bc

Program Header:
    LOAD off    0x00001000 vaddr 0x00140000 paddr 0x00140000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags r-x
    LOAD off    0x00001020 vaddr 0x00140020 paddr 0x00140020 align 2**12
         filesz 0x00012ec8 memsz 0x0001302c flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000000  00140000  00140000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  00140020  00140020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010d00  001401bc  001401bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000540  00150ebc  00150ebc  00011ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  001513fc  001513fc  000123fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  00152ee8  00152ee8  00013ee8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0015304c  0015304c  00013ee8  2**0
                  CONTENTS
  7 .comment      00000039  00000000  00000000  00013ee8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000dd8  00000000  00000000  00013f28  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025b87  00000000  00000000  00014d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009b7b  00000000  00000000  0003a887  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000bb07  00000000  00000000  00044402  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002480  00000000  00000000  0004ff0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003502  00000000  00000000  0005238c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00019645  00000000  00000000  0005588e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0006eed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001798  00000000  00000000  0006eef8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007398d  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  00073990  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007399a  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007399b  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0007399c  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  000739a5  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  000739ae  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  000739b7  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000049  00000000  00000000  000739c1  2**0
                  CONTENTS, READONLY
 26 .jdi          00003fa3  00000000  00000000  00073a0a  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00051c18  00000000  00000000  000779ad  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00140000 l    d  .entry	00000000 .entry
00140020 l    d  .exceptions	00000000 .exceptions
001401bc l    d  .text	00000000 .text
00150ebc l    d  .rodata	00000000 .rodata
001513fc l    d  .rwdata	00000000 .rwdata
00152ee8 l    d  .bss	00000000 .bss
0015304c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../KKNios_bsp//obj/HAL/src/crt0.o
00140200 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00140094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0015114a l     O .rodata	00000010 zeroes.4155
0015115a l     O .rodata	00000010 blanks.4154
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0014466c l     F .text	00000204 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00146120 l     F .text	00000008 __fp_lock
00146128 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
001513fc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00151840 l     O .rwdata	00000020 lc_ctype_charset
00151820 l     O .rwdata	00000020 lc_message_charset
00151860 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0015118c l     O .rodata	0000000c p05.2652
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00149540 l     F .text	000000fc __sprint_r.part.0
001512c0 l     O .rodata	00000010 blanks.4099
001512b0 l     O .rodata	00000010 zeroes.4100
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0014be50 l     F .text	00000070 udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0014e460 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0014e578 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0014e5a4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0014e6a0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_lseek.c
0014e790 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0014e968 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00152ed8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0014ebb8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0014ecf4 l     F .text	00000038 alt_dev_reg
00151e48 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0014f018 l     F .text	000001fc altera_avalon_jtag_uart_irq
0014f214 l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0014f82c l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 perf_print_formatted_report.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0014fce4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00150154 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0015028c l     F .text	00000050 alt_get_errno
001502dc l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_exit.c
001423c0 g     F .text	0000001c putchar
00148a50 g     F .text	00000074 _mprec_log10
00148b3c g     F .text	00000088 __any_on
0014afb8 g     F .text	00000064 _isatty_r
00151198 g     O .rodata	00000028 __mprec_tinytens
0014e8b0 g     F .text	00000078 alt_main
001423dc g     F .text	000000b8 _puts_r
00152f4c g     O .bss	00000100 alt_irq
0014b01c g     F .text	0000006c _lseek_r
0014d0b4 g     F .text	00000084 .hidden __eqdf2
00140414 g     F .text	00000064 kk_getdetelem
0015304c g       *ABS*	00000000 __alt_heap_start
0014237c g     F .text	0000003c printf
0014b0f4 g     F .text	0000009c _wcrtomb_r
00149438 g     F .text	0000005c __sseek
001461b8 g     F .text	0000019c __sinit
00150814 g     F .text	00000024 alt_get_cpu_freq
0014a8e8 g     F .text	00000180 __swbuf_r
00146ec8 g     F .text	00000070 _setlocale_r
0014613c g     F .text	00000064 __sfmoreglue
0014e948 g     F .text	00000020 __malloc_unlock
001411bc g     F .text	0000040c .hidden __divsf3
00152f14 g     O .bss	00000004 altera_avalon_timer_ts_freq
001479fc g     F .text	0000013c memmove
0014f928 g     F .text	0000027c perf_print_formatted_report
001461a0 g     F .text	00000018 _cleanup
00147c4c g     F .text	000000a8 _Balloc
00141ebc g     F .text	00000070 .hidden __fixsfsi
0014d138 g     F .text	000000d8 .hidden __gtdf2
00150698 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00140000 g     F .entry	00000000 __reset
00140204 g     F .text	0000004c to_float
0014af50 g     F .text	00000068 _fstat_r
00152f00 g     O .bss	00000004 errno
001493b4 g     F .text	00000008 __seofread
00152f08 g     O .bss	00000004 alt_argv
0015aea8 g       *ABS*	00000000 _gp
001419f4 g     F .text	000004c8 .hidden __subsf3
00151cc8 g     O .rwdata	00000180 alt_fd_list
001423b8 g     F .text	00000008 _putchar_r
00150838 g     F .text	00000090 alt_find_dev
00142244 g     F .text	0000010c memcpy
00140338 g     F .text	00000028 kk_isrunning
001403b0 g     F .text	00000064 kk_getintelem
00146130 g     F .text	0000000c _cleanup_r
0014e2f0 g     F .text	000000d0 .hidden __floatsidf
00150214 g     F .text	00000078 alt_io_redirect
0014d210 g     F .text	000000ec .hidden __ltdf2
00140250 g     F .text	00000058 to_bit
00150ebc g       *ABS*	00000000 __DTOR_END__
00142494 g     F .text	00000014 puts
00149294 g     F .text	00000068 __fpclassifyd
001489b0 g     F .text	000000a0 __ratio
0014a8c4 g     F .text	00000024 __vfiprintf_internal
0014f40c g     F .text	00000208 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00142350 g     F .text	0000002c _printf_r
0014bf54 g     F .text	00000008 .hidden __udivsi3
0014e6f0 g     F .text	000000a0 isatty
001511e8 g     O .rodata	000000c8 __mprec_tens
00146f38 g     F .text	0000000c __locale_charset
00152efc g     O .bss	00000004 __malloc_top_pad
001507b8 g     F .text	0000003c perf_get_num_starts
00152eb0 g     O .rwdata	00000004 __mb_cur_max
00146f68 g     F .text	0000000c _localeconv_r
0014804c g     F .text	0000003c __i2b
001468bc g     F .text	000004ac __sfvwrite_r
001492fc g     F .text	00000064 _sbrk_r
00140360 g     F .text	00000028 kk_getcounter
0014b088 g     F .text	0000006c _read_r
00152ed0 g     O .rwdata	00000004 alt_max_fd
0014ac18 g     F .text	00000128 _fclose_r
001460f0 g     F .text	00000030 fflush
00152ef8 g     O .bss	00000004 __malloc_max_sbrked_mem
0014209c g     F .text	000000fc .hidden __extendsfdf2
0014bf64 g     F .text	0000087c .hidden __adddf3
0014877c g     F .text	000000f0 __b2d
0014b8b8 g     F .text	00000598 .hidden __umoddi3
0014e7e0 g     F .text	000000d0 lseek
00152ea8 g     O .rwdata	00000004 _global_impure_ptr
00148d30 g     F .text	00000564 _realloc_r
0015304c g       *ABS*	00000000 __bss_end
00150064 g     F .text	000000f0 alt_iic_isr_register
00150594 g     F .text	00000104 alt_tick
0014b2f4 g     F .text	000005c4 .hidden __udivdi3
0014ad54 g     F .text	00000184 _fputwc_r
001511c0 g     O .rodata	00000028 __mprec_bigtens
00147e30 g     F .text	00000104 __s2b
0014e3c0 g     F .text	000000a0 .hidden __floatunsidf
0014850c g     F .text	00000060 __mcmp
00146480 g     F .text	00000018 __fp_lock_all
00150018 g     F .text	0000004c alt_ic_irq_enabled
001504fc g     F .text	00000098 alt_alarm_stop
00152f18 g     O .bss	00000004 alt_irq_active
001400ec g     F .exceptions	000000d0 alt_irq_handler
00151ca0 g     O .rwdata	00000028 alt_dev_null
00147f34 g     F .text	00000068 __hi0bits
0014e270 g     F .text	00000080 .hidden __fixdfsi
001406b4 g     F .text	000000f8 calculate_error
00152ec8 g     O .rwdata	00000008 alt_dev_list
0014ec08 g     F .text	000000ec write
00148bc4 g     F .text	000000a0 _putc_r
0014e5f4 g     F .text	000000ac fstat
0014d210 g     F .text	000000ec .hidden __ledf2
00148274 g     F .text	00000148 __pow5mult
00149654 g     F .text	00001270 ___vfiprintf_internal_r
00152ef0 g     O .bss	00000004 __nlocale_changed
0014bf5c g     F .text	00000008 .hidden __umodsi3
0015304c g       *ABS*	00000000 end
0014ef58 g     F .text	000000c0 altera_avalon_jtag_uart_init
00150ebc g       *ABS*	00000000 __CTOR_LIST__
00180000 g       *ABS*	00000000 __alt_stack_pointer
0014f8a0 g     F .text	00000088 alt_avalon_timer_sc_init
00142198 g     F .text	000000ac .hidden __clzsi2
0014f614 g     F .text	00000218 altera_avalon_jtag_uart_write
00146470 g     F .text	00000004 __sfp_lock_acquire
00147914 g     F .text	000000e8 memchr
00142534 g     F .text	00001fdc ___vfprintf_internal_r
001465ec g     F .text	000002d0 _free_r
00146f44 g     F .text	00000010 __locale_mb_cur_max
00150c74 g     F .text	000001a4 __call_exitprocs
00152eec g     O .bss	00000004 __mlocale_changed
00152eb4 g     O .rwdata	00000004 __malloc_sbrk_base
001401bc g     F .text	00000048 _start
00152f1c g     O .bss	00000004 _alt_tick_rate
00150e18 g     F .text	00000070 .hidden __floatundidf
001483bc g     F .text	00000150 __lshift
00152f20 g     O .bss	00000004 _alt_nticks
0014e9b8 g     F .text	000000f0 read
0014ed60 g     F .text	00000094 alt_sys_init
00141f2c g     F .text	00000170 .hidden __floatsisf
00150b58 g     F .text	0000011c __register_exitproc
00148088 g     F .text	000001ec __multiply
0014f2b8 g     F .text	00000068 altera_avalon_jtag_uart_close
00152f24 g     O .bss	00000028 __malloc_current_mallinfo
0014886c g     F .text	00000144 __d2b
0014edf4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
001509dc g     F .text	000000b4 alt_get_fd
0014aaf0 g     F .text	00000064 _close_r
001506b8 g     F .text	000000b4 perf_get_section_time
00150adc g     F .text	0000007c memcmp
0014eeb4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0015304c g       *ABS*	00000000 __alt_stack_base
0014ef04 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00144534 g     F .text	00000138 __swsetup_r
0014c7e0 g     F .text	000008d4 .hidden __divdf3
00140310 g     F .text	00000028 kk_start
00146354 g     F .text	0000011c __sfp
00148ac4 g     F .text	00000078 __copybits
0015076c g     F .text	0000004c perf_get_total_time
00151898 g     O .rwdata	00000408 __malloc_av_
0014647c g     F .text	00000004 __sinit_lock_release
0014d2fc g     F .text	000006ec .hidden __muldf3
00149360 g     F .text	00000054 __sread
001508c8 g     F .text	00000114 alt_find_file
0014fd34 g     F .text	000000a0 alt_dev_llist_insert
0014e928 g     F .text	00000020 __malloc_lock
0014eb08 g     F .text	000000b0 sbrk
00145eac g     F .text	00000244 _fflush_r
0014ab54 g     F .text	000000c4 _calloc_r
00152ee8 g       *ABS*	00000000 __bss_start
00147b38 g     F .text	00000114 memset
00140c58 g     F .text	000000ac main
00152f0c g     O .bss	00000004 alt_envp
00152ef4 g     O .bss	00000004 __malloc_max_total_mem
0014ee54 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0014aa68 g     F .text	0000001c __swbuf
00149494 g     F .text	00000008 __sclose
00180000 g       *ABS*	00000000 __alt_heap_limit
0014ad40 g     F .text	00000014 fclose
00144870 g     F .text	0000163c _dtoa_r
00147150 g     F .text	000007c4 _malloc_r
0014b268 g     F .text	00000030 __ascii_wctomb
00152ed4 g     O .rwdata	00000004 alt_errno
001407ac g     F .text	000004ac the_algorithm
00140538 g     F .text	0000017c multiply_matrix
00146d68 g     F .text	000000a8 _fwalk
00148c64 g     F .text	000000cc putc
0014bec0 g     F .text	00000048 .hidden __divsi3
001464b0 g     F .text	0000013c _malloc_trim_r
00150ebc g       *ABS*	00000000 __CTOR_END__
001415c8 g     F .text	0000042c .hidden __mulsf3
0014949c g     F .text	000000a4 strcmp
00150ebc g       *ABS*	00000000 __DTOR_LIST__
0014d0b4 g     F .text	00000084 .hidden __nedf2
0014ed2c g     F .text	00000034 alt_irq_init
0014eaa8 g     F .text	00000060 alt_release_fd
00151004 g     O .rodata	00000100 .hidden __clz_tab
00152ee8 g     O .bss	00000004 _PathLocale
001402a8 g     F .text	00000068 kk_putelem
00150a90 g     F .text	00000014 atexit
0014aa84 g     F .text	0000006c _write_r
00146f74 g     F .text	0000001c setlocale
00152eac g     O .rwdata	00000004 _impure_ptr
00152f04 g     O .bss	00000004 alt_argc
00152f10 g     O .bss	00000004 altera_avalon_timer_ts_base
0014fe30 g     F .text	0000005c _do_dtors
00146f60 g     F .text	00000008 __locale_cjk_lang
00140020 g       .exceptions	00000000 alt_irq_entry
0014871c g     F .text	00000060 __ulp
00146498 g     F .text	00000018 __fp_unlock_all
00152ec0 g     O .rwdata	00000008 alt_fs_list
00146f90 g     F .text	0000000c localeconv
00140000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0014fe8c g     F .text	00000050 alt_ic_isr_register
00152ee8 g       *ABS*	00000000 _edata
0015304c g       *ABS*	00000000 _end
0014f320 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0014ff78 g     F .text	000000a0 alt_ic_irq_disable
001493bc g     F .text	0000007c __swrite
00152eb8 g     O .rwdata	00000004 __malloc_trim_threshold
001507f4 g     F .text	00000020 alt_get_performance_counter_base
00146f54 g     F .text	0000000c __locale_msgcharset
00150aa4 g     F .text	00000038 exit
00146e10 g     F .text	000000b8 _fwalk_reent
0014856c g     F .text	000001b0 __mdiff
0014bf08 g     F .text	0000004c .hidden __modsi3
00180000 g       *ABS*	00000000 __alt_data_end
00140020 g     F .exceptions	00000000 alt_exception
00146474 g     F .text	00000004 __sfp_lock_release
00140388 g     F .text	00000028 kk_divzero
00150e88 g     F .text	00000034 _exit
0014fba4 g     F .text	00000140 alt_alarm_start
00146f9c g     F .text	000001b4 __smakebuf_r
001424a8 g     F .text	0000008c strlen
001503a8 g     F .text	00000154 open
0014d138 g     F .text	000000d8 .hidden __gedf2
00152ebc g     O .rwdata	00000004 __wctomb
0014963c g     F .text	00000018 __sprint_r
00152edc g     O .rwdata	00000004 alt_priority_mask
0014fedc g     F .text	0000009c alt_ic_irq_enable
00144510 g     F .text	00000024 __vfprintf_internal
0014b298 g     F .text	0000005c _wctomb_r
0014d9e8 g     F .text	00000888 .hidden __subdf3
00147f9c g     F .text	000000b0 __lo0bits
00152ee0 g     O .rwdata	00000008 alt_alarm_list
0014fdd4 g     F .text	0000005c _do_ctors
0014b190 g     F .text	000000d8 wcrtomb
0014e4b0 g     F .text	000000c8 close
00140d04 g     F .text	000004b8 .hidden __addsf3
00140478 g     F .text	000000c0 print_matrix
0014aed8 g     F .text	00000078 fputwc
00000000  w      *UND*	00000000 free
00146478 g     F .text	00000004 __sinit_lock_acquire
00147d1c g     F .text	00000114 __multadd
00147cf4 g     F .text	00000028 _Bfree



Disassembly of section .exceptions:

00140020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  140020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  140024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  140028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  14002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  140030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  140034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  140038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  14003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  140040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  140044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  140048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  14004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  140050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  140054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  140058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  14005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  140060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  140064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  140068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  14006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  140070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  140074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  140078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  14007c:	10000326 	beq	r2,zero,14008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  140080:	20000226 	beq	r4,zero,14008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  140084:	01400ec0 	call	1400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  140088:	00000306 	br	140098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  14008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  140090:	e8bfff17 	ldw	r2,-4(ea)

00140094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  140094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  140098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  14009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  1400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  1400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  1400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  1400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  1400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  1400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  1400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  1400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  1400c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  1400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  1400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  1400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  1400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  1400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  1400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  1400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  1400e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  1400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  1400e8:	ef80083a 	eret

001400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  1400ec:	defff904 	addi	sp,sp,-28
  1400f0:	dfc00615 	stw	ra,24(sp)
  1400f4:	df000515 	stw	fp,20(sp)
  1400f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  1400fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  140100:	0005313a 	rdctl	r2,ipending
  140104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  140108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  14010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  140110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  140114:	00800044 	movi	r2,1
  140118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  14011c:	e0fffb17 	ldw	r3,-20(fp)
  140120:	e0bffc17 	ldw	r2,-16(fp)
  140124:	1884703a 	and	r2,r3,r2
  140128:	10001726 	beq	r2,zero,140188 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  14012c:	00c00574 	movhi	r3,21
  140130:	18cbd304 	addi	r3,r3,12108
  140134:	e0bffd17 	ldw	r2,-12(fp)
  140138:	100490fa 	slli	r2,r2,3
  14013c:	1885883a 	add	r2,r3,r2
  140140:	10800017 	ldw	r2,0(r2)
  140144:	01000574 	movhi	r4,21
  140148:	210bd304 	addi	r4,r4,12108
  14014c:	e0fffd17 	ldw	r3,-12(fp)
  140150:	180690fa 	slli	r3,r3,3
  140154:	20c7883a 	add	r3,r4,r3
  140158:	18c00104 	addi	r3,r3,4
  14015c:	18c00017 	ldw	r3,0(r3)
  140160:	1809883a 	mov	r4,r3
  140164:	103ee83a 	callr	r2
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  140168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  14016c:	0005313a 	rdctl	r2,ipending
  140170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  140174:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
  140178:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  14017c:	e0bffb17 	ldw	r2,-20(fp)
  140180:	103fe31e 	bne	r2,zero,140110 <alt_irq_handler+0x24>
  140184:	00000706 	br	1401a4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
  140188:	e0bffc17 	ldw	r2,-16(fp)
  14018c:	1085883a 	add	r2,r2,r2
  140190:	e0bffc15 	stw	r2,-16(fp)
      i++;
  140194:	e0bffd17 	ldw	r2,-12(fp)
  140198:	10800044 	addi	r2,r2,1
  14019c:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  1401a0:	003fde06 	br	14011c <alt_irq_handler+0x30>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  1401a4:	0001883a 	nop
}
  1401a8:	e037883a 	mov	sp,fp
  1401ac:	dfc00117 	ldw	ra,4(sp)
  1401b0:	df000017 	ldw	fp,0(sp)
  1401b4:	dec00204 	addi	sp,sp,8
  1401b8:	f800283a 	ret

Disassembly of section .text:

001401bc <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  1401bc:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  1401c0:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  1401c4:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  1401c8:	00bffd16 	blt	zero,r2,1401c0 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  1401cc:	06c00634 	movhi	sp,24
    ori sp, sp, %lo(__alt_stack_pointer)
  1401d0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  1401d4:	06800574 	movhi	gp,21
    ori gp, gp, %lo(_gp)
  1401d8:	d6abaa14 	ori	gp,gp,44712
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  1401dc:	00800574 	movhi	r2,21
    ori r2, r2, %lo(__bss_start)
  1401e0:	108bba14 	ori	r2,r2,12008

    movhi r3, %hi(__bss_end)
  1401e4:	00c00574 	movhi	r3,21
    ori r3, r3, %lo(__bss_end)
  1401e8:	18cc1314 	ori	r3,r3,12364

    beq r2, r3, 1f
  1401ec:	10c00326 	beq	r2,r3,1401fc <_start+0x40>

0:
    stw zero, (r2)
  1401f0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  1401f4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  1401f8:	10fffd36 	bltu	r2,r3,1401f0 <_start+0x34>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  1401fc:	014e8b00 	call	14e8b0 <alt_main>

00140200 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  140200:	003fff06 	br	140200 <alt_after_alt_main>

00140204 <to_float>:
 *
 * @param elem Fixedpoint element.
 *
 * @return Float element.
 */
float to_float(int elem) {
  140204:	defffd04 	addi	sp,sp,-12
  140208:	dfc00215 	stw	ra,8(sp)
  14020c:	df000115 	stw	fp,4(sp)
  140210:	df000104 	addi	fp,sp,4
  140214:	e13fff15 	stw	r4,-4(fp)
	return elem / (float) FRAC;
  140218:	e13fff17 	ldw	r4,-4(fp)
  14021c:	0141f2c0 	call	141f2c <__floatsisf>
  140220:	1007883a 	mov	r3,r2
  140224:	1809883a 	mov	r4,r3
  140228:	0151e034 	movhi	r5,18304
  14022c:	01411bc0 	call	1411bc <__divsf3>
  140230:	1009883a 	mov	r4,r2
  140234:	2007883a 	mov	r3,r4
  140238:	1805883a 	mov	r2,r3
}
  14023c:	e037883a 	mov	sp,fp
  140240:	dfc00117 	ldw	ra,4(sp)
  140244:	df000017 	ldw	fp,0(sp)
  140248:	dec00204 	addi	sp,sp,8
  14024c:	f800283a 	ret

00140250 <to_bit>:
 *
 * @param elem Float element.
 *
 * @return Fixedpoint element.
 */
int to_bit(float elem) {
  140250:	defffc04 	addi	sp,sp,-16
  140254:	dfc00315 	stw	ra,12(sp)
  140258:	df000215 	stw	fp,8(sp)
  14025c:	df000204 	addi	fp,sp,8
  140260:	e13fff15 	stw	r4,-4(fp)
	int e = elem * FRAC;
  140264:	e13fff17 	ldw	r4,-4(fp)
  140268:	0151e034 	movhi	r5,18304
  14026c:	01415c80 	call	1415c8 <__mulsf3>
  140270:	1007883a 	mov	r3,r2
  140274:	1805883a 	mov	r2,r3
  140278:	1009883a 	mov	r4,r2
  14027c:	0141ebc0 	call	141ebc <__fixsfsi>
  140280:	e0bffe15 	stw	r2,-8(fp)
	return ((e & 0x80000000) >> (32 - (FRAC_BIT + INT_BIT))) | e;
  140284:	e0bffe17 	ldw	r2,-8(fp)
  140288:	10e0002c 	andhi	r3,r2,32768
  14028c:	e0bffe17 	ldw	r2,-8(fp)
  140290:	1884b03a 	or	r2,r3,r2
}
  140294:	e037883a 	mov	sp,fp
  140298:	dfc00117 	ldw	ra,4(sp)
  14029c:	df000017 	ldw	fp,0(sp)
  1402a0:	dec00204 	addi	sp,sp,8
  1402a4:	f800283a 	ret

001402a8 <kk_putelem>:
 *
 * @param elem Float element.
 * @param i Line index.
 * @param j Column index.
 */
void kk_putelem(float elem, int i, int j) {
  1402a8:	defffa04 	addi	sp,sp,-24
  1402ac:	dfc00515 	stw	ra,20(sp)
  1402b0:	df000415 	stw	fp,16(sp)
  1402b4:	dc000315 	stw	r16,12(sp)
  1402b8:	df000404 	addi	fp,sp,16
  1402bc:	e13ffc15 	stw	r4,-16(fp)
  1402c0:	e17ffd15 	stw	r5,-12(fp)
  1402c4:	e1bffe15 	stw	r6,-8(fp)
	IOWR_32DIRECT(KK_ACCEL_BASE, (((i << 8) & 0xff00) | (j & 0xff)) << 2, to_bit(elem));
  1402c8:	e0bffd17 	ldw	r2,-12(fp)
  1402cc:	1004923a 	slli	r2,r2,8
  1402d0:	10ffffcc 	andi	r3,r2,65535
  1402d4:	e0bffe17 	ldw	r2,-8(fp)
  1402d8:	10803fcc 	andi	r2,r2,255
  1402dc:	1884b03a 	or	r2,r3,r2
  1402e0:	1085883a 	add	r2,r2,r2
  1402e4:	1085883a 	add	r2,r2,r2
  1402e8:	1021883a 	mov	r16,r2
  1402ec:	e13ffc17 	ldw	r4,-16(fp)
  1402f0:	01402500 	call	140250 <to_bit>
  1402f4:	80800035 	stwio	r2,0(r16)
}
  1402f8:	e6ffff04 	addi	sp,fp,-4
  1402fc:	dfc00217 	ldw	ra,8(sp)
  140300:	df000117 	ldw	fp,4(sp)
  140304:	dc000017 	ldw	r16,0(sp)
  140308:	dec00304 	addi	sp,sp,12
  14030c:	f800283a 	ret

00140310 <kk_start>:

/**
 * @brief Start iterations.
 */
void kk_start(void) {
  140310:	deffff04 	addi	sp,sp,-4
  140314:	df000015 	stw	fp,0(sp)
  140318:	d839883a 	mov	fp,sp
	IOWR_32DIRECT(KK_ACCEL_BASE, 0x10000 << 2, 0);
  14031c:	0007883a 	mov	r3,zero
  140320:	00800134 	movhi	r2,4
  140324:	10c00035 	stwio	r3,0(r2)
}
  140328:	e037883a 	mov	sp,fp
  14032c:	df000017 	ldw	fp,0(sp)
  140330:	dec00104 	addi	sp,sp,4
  140334:	f800283a 	ret

00140338 <kk_isrunning>:
/**
 * @brief Check if system is still running.
 *
 * @return 1 if system is still running, 0 otherwise.
 */
char kk_isrunning(void) {
  140338:	deffff04 	addi	sp,sp,-4
  14033c:	df000015 	stw	fp,0(sp)
  140340:	d839883a 	mov	fp,sp
	return IORD_32DIRECT(KK_ACCEL_BASE, 0x10001 << 2);
  140344:	00800134 	movhi	r2,4
  140348:	10800104 	addi	r2,r2,4
  14034c:	10800037 	ldwio	r2,0(r2)
}
  140350:	e037883a 	mov	sp,fp
  140354:	df000017 	ldw	fp,0(sp)
  140358:	dec00104 	addi	sp,sp,4
  14035c:	f800283a 	ret

00140360 <kk_getcounter>:
/**
 * @brief Return cycles counter.
 *
 * @return Cycles counter.
 */
unsigned int kk_getcounter(void) {
  140360:	deffff04 	addi	sp,sp,-4
  140364:	df000015 	stw	fp,0(sp)
  140368:	d839883a 	mov	fp,sp
	return IORD_32DIRECT(KK_ACCEL_BASE, 0x10002 << 2);
  14036c:	00800134 	movhi	r2,4
  140370:	10800204 	addi	r2,r2,8
  140374:	10800037 	ldwio	r2,0(r2)
}
  140378:	e037883a 	mov	sp,fp
  14037c:	df000017 	ldw	fp,0(sp)
  140380:	dec00104 	addi	sp,sp,4
  140384:	f800283a 	ret

00140388 <kk_divzero>:
/**
 * @brief Return division by zero flag.
 *
 * @return 1 if any division by zero occurred, 0 otherwise.
 */
char kk_divzero(void) {
  140388:	deffff04 	addi	sp,sp,-4
  14038c:	df000015 	stw	fp,0(sp)
  140390:	d839883a 	mov	fp,sp
	return IORD_32DIRECT(KK_ACCEL_BASE, 0x10003 << 2);
  140394:	00800134 	movhi	r2,4
  140398:	10800304 	addi	r2,r2,12
  14039c:	10800037 	ldwio	r2,0(r2)
}
  1403a0:	e037883a 	mov	sp,fp
  1403a4:	df000017 	ldw	fp,0(sp)
  1403a8:	dec00104 	addi	sp,sp,4
  1403ac:	f800283a 	ret

001403b0 <kk_getintelem>:
 * @param i Line index.
 * @param j Column index.
 *
 * @return Intermediate matrix element as float.
 */
float kk_getintelem(int i, int j) {
  1403b0:	defffc04 	addi	sp,sp,-16
  1403b4:	dfc00315 	stw	ra,12(sp)
  1403b8:	df000215 	stw	fp,8(sp)
  1403bc:	df000204 	addi	fp,sp,8
  1403c0:	e13ffe15 	stw	r4,-8(fp)
  1403c4:	e17fff15 	stw	r5,-4(fp)
	return to_float(IORD_32DIRECT(KK_ACCEL_BASE, (0x20000 | ((i << 8) & 0xff00) | (j & 0xff)) << 2));
  1403c8:	e0bffe17 	ldw	r2,-8(fp)
  1403cc:	1004923a 	slli	r2,r2,8
  1403d0:	10bfffcc 	andi	r2,r2,65535
  1403d4:	10c000b4 	orhi	r3,r2,2
  1403d8:	e0bfff17 	ldw	r2,-4(fp)
  1403dc:	10803fcc 	andi	r2,r2,255
  1403e0:	1884b03a 	or	r2,r3,r2
  1403e4:	1085883a 	add	r2,r2,r2
  1403e8:	1085883a 	add	r2,r2,r2
  1403ec:	10800037 	ldwio	r2,0(r2)
  1403f0:	1009883a 	mov	r4,r2
  1403f4:	01402040 	call	140204 <to_float>
  1403f8:	1007883a 	mov	r3,r2
  1403fc:	1805883a 	mov	r2,r3
}
  140400:	e037883a 	mov	sp,fp
  140404:	dfc00117 	ldw	ra,4(sp)
  140408:	df000017 	ldw	fp,0(sp)
  14040c:	dec00204 	addi	sp,sp,8
  140410:	f800283a 	ret

00140414 <kk_getdetelem>:
 * @param i Line index.
 * @param j Column index.
 *
 * @return Determinant matrix element as float.
 */
float kk_getdetelem(int i, int j) {
  140414:	defffc04 	addi	sp,sp,-16
  140418:	dfc00315 	stw	ra,12(sp)
  14041c:	df000215 	stw	fp,8(sp)
  140420:	df000204 	addi	fp,sp,8
  140424:	e13ffe15 	stw	r4,-8(fp)
  140428:	e17fff15 	stw	r5,-4(fp)
	return to_float(IORD_32DIRECT(KK_ACCEL_BASE, (0x30000 | ((i << 8) & 0xff00) | (j & 0xff)) << 2));
  14042c:	e0bffe17 	ldw	r2,-8(fp)
  140430:	1004923a 	slli	r2,r2,8
  140434:	10bfffcc 	andi	r2,r2,65535
  140438:	10c000f4 	orhi	r3,r2,3
  14043c:	e0bfff17 	ldw	r2,-4(fp)
  140440:	10803fcc 	andi	r2,r2,255
  140444:	1884b03a 	or	r2,r3,r2
  140448:	1085883a 	add	r2,r2,r2
  14044c:	1085883a 	add	r2,r2,r2
  140450:	10800037 	ldwio	r2,0(r2)
  140454:	1009883a 	mov	r4,r2
  140458:	01402040 	call	140204 <to_float>
  14045c:	1007883a 	mov	r3,r2
  140460:	1805883a 	mov	r2,r3
}
  140464:	e037883a 	mov	sp,fp
  140468:	dfc00117 	ldw	ra,4(sp)
  14046c:	df000017 	ldw	fp,0(sp)
  140470:	dec00204 	addi	sp,sp,8
  140474:	f800283a 	ret

00140478 <print_matrix>:
/**
 * @brief Print a matrix.
 *
 * @param matrix N-by-N matrix.
 */
void print_matrix(float matrix[N][N]) {
  140478:	defffb04 	addi	sp,sp,-20
  14047c:	dfc00415 	stw	ra,16(sp)
  140480:	df000315 	stw	fp,12(sp)
  140484:	df000304 	addi	fp,sp,12
  140488:	e13fff15 	stw	r4,-4(fp)
	int i, j;
	for(i = 0; i < N; i++) {
  14048c:	e03ffd15 	stw	zero,-12(fp)
  140490:	00001f06 	br	140510 <print_matrix+0x98>
		for(j = 0; j < N; j++) {
  140494:	e03ffe15 	stw	zero,-8(fp)
  140498:	00001506 	br	1404f0 <print_matrix+0x78>
			printf("\t %.2f", matrix[i][j]);
  14049c:	e0bffd17 	ldw	r2,-12(fp)
  1404a0:	1004913a 	slli	r2,r2,4
  1404a4:	e0ffff17 	ldw	r3,-4(fp)
  1404a8:	1887883a 	add	r3,r3,r2
  1404ac:	e0bffe17 	ldw	r2,-8(fp)
  1404b0:	1085883a 	add	r2,r2,r2
  1404b4:	1085883a 	add	r2,r2,r2
  1404b8:	1887883a 	add	r3,r3,r2
  1404bc:	18800017 	ldw	r2,0(r3)
  1404c0:	1009883a 	mov	r4,r2
  1404c4:	014209c0 	call	14209c <__extendsfdf2>
  1404c8:	100d883a 	mov	r6,r2
  1404cc:	180f883a 	mov	r7,r3
  1404d0:	01000574 	movhi	r4,21
  1404d4:	2103af04 	addi	r4,r4,3772
  1404d8:	300b883a 	mov	r5,r6
  1404dc:	380d883a 	mov	r6,r7
  1404e0:	014237c0 	call	14237c <printf>
 * @param matrix N-by-N matrix.
 */
void print_matrix(float matrix[N][N]) {
	int i, j;
	for(i = 0; i < N; i++) {
		for(j = 0; j < N; j++) {
  1404e4:	e0bffe17 	ldw	r2,-8(fp)
  1404e8:	10800044 	addi	r2,r2,1
  1404ec:	e0bffe15 	stw	r2,-8(fp)
  1404f0:	e0bffe17 	ldw	r2,-8(fp)
  1404f4:	10800110 	cmplti	r2,r2,4
  1404f8:	103fe81e 	bne	r2,zero,14049c <print_matrix+0x24>
			printf("\t %.2f", matrix[i][j]);
		}
		printf("\n");
  1404fc:	01000284 	movi	r4,10
  140500:	01423c00 	call	1423c0 <putchar>
 *
 * @param matrix N-by-N matrix.
 */
void print_matrix(float matrix[N][N]) {
	int i, j;
	for(i = 0; i < N; i++) {
  140504:	e0bffd17 	ldw	r2,-12(fp)
  140508:	10800044 	addi	r2,r2,1
  14050c:	e0bffd15 	stw	r2,-12(fp)
  140510:	e0bffd17 	ldw	r2,-12(fp)
  140514:	10800110 	cmplti	r2,r2,4
  140518:	103fde1e 	bne	r2,zero,140494 <print_matrix+0x1c>
		for(j = 0; j < N; j++) {
			printf("\t %.2f", matrix[i][j]);
		}
		printf("\n");
	}
	printf("\n");
  14051c:	01000284 	movi	r4,10
  140520:	01423c00 	call	1423c0 <putchar>
}
  140524:	e037883a 	mov	sp,fp
  140528:	dfc00117 	ldw	ra,4(sp)
  14052c:	df000017 	ldw	fp,0(sp)
  140530:	dec00204 	addi	sp,sp,8
  140534:	f800283a 	ret

00140538 <multiply_matrix>:
 *
 * @param A First N-by-N matrix.
 * @param B Second N-by-N matrix.
 * @param C Result N-by-N matrix.
 */
void multiply_matrix(float A[N][N], float B[N][N], float C[N][N]) {
  140538:	defff604 	addi	sp,sp,-40
  14053c:	dfc00915 	stw	ra,36(sp)
  140540:	df000815 	stw	fp,32(sp)
  140544:	dc400715 	stw	r17,28(sp)
  140548:	dc000615 	stw	r16,24(sp)
  14054c:	df000804 	addi	fp,sp,32
  140550:	e13ffb15 	stw	r4,-20(fp)
  140554:	e17ffc15 	stw	r5,-16(fp)
  140558:	e1bffd15 	stw	r6,-12(fp)
	int i, j, k;
	for(i = 0; i < N; i++) {
  14055c:	e03ff815 	stw	zero,-32(fp)
  140560:	00004a06 	br	14068c <multiply_matrix+0x154>
		for(j = 0; j < N; j++) {
  140564:	e03ff915 	stw	zero,-28(fp)
  140568:	00004206 	br	140674 <multiply_matrix+0x13c>
			C[i][j] = 0;
  14056c:	e0bff817 	ldw	r2,-32(fp)
  140570:	1004913a 	slli	r2,r2,4
  140574:	e0fffd17 	ldw	r3,-12(fp)
  140578:	1887883a 	add	r3,r3,r2
  14057c:	e0bff917 	ldw	r2,-28(fp)
  140580:	1085883a 	add	r2,r2,r2
  140584:	1085883a 	add	r2,r2,r2
  140588:	1885883a 	add	r2,r3,r2
  14058c:	10000015 	stw	zero,0(r2)
			for(k = 0; k < N; k++)
  140590:	e03ffa15 	stw	zero,-24(fp)
  140594:	00003106 	br	14065c <multiply_matrix+0x124>
				C[i][j] += A[i][k] * B[k][j];
  140598:	e0bff817 	ldw	r2,-32(fp)
  14059c:	1004913a 	slli	r2,r2,4
  1405a0:	e0fffd17 	ldw	r3,-12(fp)
  1405a4:	18a1883a 	add	r16,r3,r2
  1405a8:	e0bff817 	ldw	r2,-32(fp)
  1405ac:	1004913a 	slli	r2,r2,4
  1405b0:	e0fffd17 	ldw	r3,-12(fp)
  1405b4:	1887883a 	add	r3,r3,r2
  1405b8:	e0bff917 	ldw	r2,-28(fp)
  1405bc:	1085883a 	add	r2,r2,r2
  1405c0:	1085883a 	add	r2,r2,r2
  1405c4:	1885883a 	add	r2,r3,r2
  1405c8:	14400017 	ldw	r17,0(r2)
  1405cc:	e0bff817 	ldw	r2,-32(fp)
  1405d0:	1004913a 	slli	r2,r2,4
  1405d4:	e0fffb17 	ldw	r3,-20(fp)
  1405d8:	1887883a 	add	r3,r3,r2
  1405dc:	e0bffa17 	ldw	r2,-24(fp)
  1405e0:	1085883a 	add	r2,r2,r2
  1405e4:	1085883a 	add	r2,r2,r2
  1405e8:	1885883a 	add	r2,r3,r2
  1405ec:	10c00017 	ldw	r3,0(r2)
  1405f0:	e0bffa17 	ldw	r2,-24(fp)
  1405f4:	1004913a 	slli	r2,r2,4
  1405f8:	e13ffc17 	ldw	r4,-16(fp)
  1405fc:	2089883a 	add	r4,r4,r2
  140600:	e0bff917 	ldw	r2,-28(fp)
  140604:	1085883a 	add	r2,r2,r2
  140608:	1085883a 	add	r2,r2,r2
  14060c:	2089883a 	add	r4,r4,r2
  140610:	20800017 	ldw	r2,0(r4)
  140614:	1809883a 	mov	r4,r3
  140618:	100b883a 	mov	r5,r2
  14061c:	01415c80 	call	1415c8 <__mulsf3>
  140620:	1007883a 	mov	r3,r2
  140624:	1805883a 	mov	r2,r3
  140628:	8809883a 	mov	r4,r17
  14062c:	100b883a 	mov	r5,r2
  140630:	0140d040 	call	140d04 <__addsf3>
  140634:	1009883a 	mov	r4,r2
  140638:	2007883a 	mov	r3,r4
  14063c:	e0bff917 	ldw	r2,-28(fp)
  140640:	1085883a 	add	r2,r2,r2
  140644:	1085883a 	add	r2,r2,r2
  140648:	8085883a 	add	r2,r16,r2
  14064c:	10c00015 	stw	r3,0(r2)
void multiply_matrix(float A[N][N], float B[N][N], float C[N][N]) {
	int i, j, k;
	for(i = 0; i < N; i++) {
		for(j = 0; j < N; j++) {
			C[i][j] = 0;
			for(k = 0; k < N; k++)
  140650:	e0bffa17 	ldw	r2,-24(fp)
  140654:	10800044 	addi	r2,r2,1
  140658:	e0bffa15 	stw	r2,-24(fp)
  14065c:	e0bffa17 	ldw	r2,-24(fp)
  140660:	10800110 	cmplti	r2,r2,4
  140664:	103fcc1e 	bne	r2,zero,140598 <multiply_matrix+0x60>
 * @param C Result N-by-N matrix.
 */
void multiply_matrix(float A[N][N], float B[N][N], float C[N][N]) {
	int i, j, k;
	for(i = 0; i < N; i++) {
		for(j = 0; j < N; j++) {
  140668:	e0bff917 	ldw	r2,-28(fp)
  14066c:	10800044 	addi	r2,r2,1
  140670:	e0bff915 	stw	r2,-28(fp)
  140674:	e0bff917 	ldw	r2,-28(fp)
  140678:	10800110 	cmplti	r2,r2,4
  14067c:	103fbb1e 	bne	r2,zero,14056c <multiply_matrix+0x34>
 * @param B Second N-by-N matrix.
 * @param C Result N-by-N matrix.
 */
void multiply_matrix(float A[N][N], float B[N][N], float C[N][N]) {
	int i, j, k;
	for(i = 0; i < N; i++) {
  140680:	e0bff817 	ldw	r2,-32(fp)
  140684:	10800044 	addi	r2,r2,1
  140688:	e0bff815 	stw	r2,-32(fp)
  14068c:	e0bff817 	ldw	r2,-32(fp)
  140690:	10800110 	cmplti	r2,r2,4
  140694:	103fb31e 	bne	r2,zero,140564 <multiply_matrix+0x2c>
			C[i][j] = 0;
			for(k = 0; k < N; k++)
				C[i][j] += A[i][k] * B[k][j];
		}
	}
}
  140698:	e6fffe04 	addi	sp,fp,-8
  14069c:	dfc00317 	ldw	ra,12(sp)
  1406a0:	df000217 	ldw	fp,8(sp)
  1406a4:	dc400117 	ldw	r17,4(sp)
  1406a8:	dc000017 	ldw	r16,0(sp)
  1406ac:	dec00404 	addi	sp,sp,16
  1406b0:	f800283a 	ret

001406b4 <calculate_error>:
 *
 * @param matrix N-by-N matrix.
 *
 * @return Error distance. Less is better.
 */
float calculate_error(float matrix[N][N]) {
  1406b4:	defffa04 	addi	sp,sp,-24
  1406b8:	dfc00515 	stw	ra,20(sp)
  1406bc:	df000415 	stw	fp,16(sp)
  1406c0:	df000404 	addi	fp,sp,16
  1406c4:	e13fff15 	stw	r4,-4(fp)
	int i, j;
	float val = 0;
  1406c8:	e03ffe15 	stw	zero,-8(fp)

	for(i = 0; i < N; i++) {
  1406cc:	e03ffc15 	stw	zero,-16(fp)
  1406d0:	00002706 	br	140770 <calculate_error+0xbc>
		for(j = 0; j < N; j++) {
  1406d4:	e03ffd15 	stw	zero,-12(fp)
  1406d8:	00001f06 	br	140758 <calculate_error+0xa4>
			val += fabs(((i == j)? 1 : 0) - matrix[i][j]);
  1406dc:	e0fffc17 	ldw	r3,-16(fp)
  1406e0:	e0bffd17 	ldw	r2,-12(fp)
  1406e4:	1880021e 	bne	r3,r2,1406f0 <calculate_error+0x3c>
  1406e8:	008fe034 	movhi	r2,16256
  1406ec:	00000106 	br	1406f4 <calculate_error+0x40>
  1406f0:	0005883a 	mov	r2,zero
  1406f4:	e0fffc17 	ldw	r3,-16(fp)
  1406f8:	1806913a 	slli	r3,r3,4
  1406fc:	e13fff17 	ldw	r4,-4(fp)
  140700:	20c9883a 	add	r4,r4,r3
  140704:	e0fffd17 	ldw	r3,-12(fp)
  140708:	18c7883a 	add	r3,r3,r3
  14070c:	18c7883a 	add	r3,r3,r3
  140710:	20c9883a 	add	r4,r4,r3
  140714:	20c00017 	ldw	r3,0(r4)
  140718:	1009883a 	mov	r4,r2
  14071c:	180b883a 	mov	r5,r3
  140720:	01419f40 	call	1419f4 <__subsf3>
  140724:	1009883a 	mov	r4,r2
  140728:	2007883a 	mov	r3,r4
  14072c:	00a00034 	movhi	r2,32768
  140730:	10bfffc4 	addi	r2,r2,-1
  140734:	1884703a 	and	r2,r3,r2
  140738:	e13ffe17 	ldw	r4,-8(fp)
  14073c:	100b883a 	mov	r5,r2
  140740:	0140d040 	call	140d04 <__addsf3>
  140744:	1007883a 	mov	r3,r2
  140748:	e0fffe15 	stw	r3,-8(fp)
float calculate_error(float matrix[N][N]) {
	int i, j;
	float val = 0;

	for(i = 0; i < N; i++) {
		for(j = 0; j < N; j++) {
  14074c:	e0bffd17 	ldw	r2,-12(fp)
  140750:	10800044 	addi	r2,r2,1
  140754:	e0bffd15 	stw	r2,-12(fp)
  140758:	e0bffd17 	ldw	r2,-12(fp)
  14075c:	10800110 	cmplti	r2,r2,4
  140760:	103fde1e 	bne	r2,zero,1406dc <calculate_error+0x28>
 */
float calculate_error(float matrix[N][N]) {
	int i, j;
	float val = 0;

	for(i = 0; i < N; i++) {
  140764:	e0bffc17 	ldw	r2,-16(fp)
  140768:	10800044 	addi	r2,r2,1
  14076c:	e0bffc15 	stw	r2,-16(fp)
  140770:	e0bffc17 	ldw	r2,-16(fp)
  140774:	10800110 	cmplti	r2,r2,4
  140778:	103fd61e 	bne	r2,zero,1406d4 <calculate_error+0x20>
		for(j = 0; j < N; j++) {
			val += fabs(((i == j)? 1 : 0) - matrix[i][j]);
		}
	}

	val /= N * N;
  14077c:	e13ffe17 	ldw	r4,-8(fp)
  140780:	01506034 	movhi	r5,16768
  140784:	01411bc0 	call	1411bc <__divsf3>
  140788:	1007883a 	mov	r3,r2
  14078c:	e0fffe15 	stw	r3,-8(fp)

	return val;
  140790:	e0fffe17 	ldw	r3,-8(fp)
  140794:	1805883a 	mov	r2,r3
}
  140798:	e037883a 	mov	sp,fp
  14079c:	dfc00117 	ldw	ra,4(sp)
  1407a0:	df000017 	ldw	fp,0(sp)
  1407a4:	dec00204 	addi	sp,sp,8
  1407a8:	f800283a 	ret

001407ac <the_algorithm>:

/**
 * @brief Run KK Algorithm.
 */
void the_algorithm(void) {
  1407ac:	deffa804 	addi	sp,sp,-352
  1407b0:	dfc05715 	stw	ra,348(sp)
  1407b4:	df005615 	stw	fp,344(sp)
  1407b8:	df005604 	addi	fp,sp,344
								{1, 2, 4},
								{1, 3, 9}
							};
#elif N == 4
	/* 4 x 4 Vandermonde Matrix */
	float matrix_O[N][N] = {
  1407bc:	00800574 	movhi	r2,21
  1407c0:	1083dd04 	addi	r2,r2,3956
  1407c4:	e13fb004 	addi	r4,fp,-320
  1407c8:	1007883a 	mov	r3,r2
  1407cc:	00801004 	movi	r2,64
  1407d0:	180b883a 	mov	r5,r3
  1407d4:	100d883a 	mov	r6,r2
  1407d8:	01422440 	call	142244 <memcpy>
	/* Calculated identity matrix based on calculated inverted matrix */
	float matrix_IC[N][N];
	/* Error distance from true identity */
	float error;
	/* Auxiliary variables */
	int i, j, next = ((N + 2) % 3), prev = (N % 3), curr = (N + 1) % 3;
  1407dc:	e03fac15 	stw	zero,-336(fp)
  1407e0:	00800044 	movi	r2,1
  1407e4:	e0bfad15 	stw	r2,-332(fp)
  1407e8:	00800084 	movi	r2,2
  1407ec:	e0bfae15 	stw	r2,-328(fp)
	/* Timestamp before: Transfer matrix */
	then[0] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Start performance counter: Transfer matrix */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 1);
  1407f0:	0007883a 	mov	r3,zero
  1407f4:	00800634 	movhi	r2,24
  1407f8:	10840504 	addi	r2,r2,4116
  1407fc:	10c00035 	stwio	r3,0(r2)
#endif

	/* Transfer matrix */
	for(i = 0; i < N; i++)
  140800:	e03faa15 	stw	zero,-344(fp)
  140804:	00001a06 	br	140870 <the_algorithm+0xc4>
		for(j = 0; j < N; j++)
  140808:	e03fab15 	stw	zero,-340(fp)
  14080c:	00001206 	br	140858 <the_algorithm+0xac>
			kk_putelem(matrix_O[i][j], i, j);
  140810:	e0bfaa17 	ldw	r2,-344(fp)
  140814:	1085883a 	add	r2,r2,r2
  140818:	1087883a 	add	r3,r2,r2
  14081c:	e0bfab17 	ldw	r2,-340(fp)
  140820:	1885883a 	add	r2,r3,r2
  140824:	1085883a 	add	r2,r2,r2
  140828:	1085883a 	add	r2,r2,r2
  14082c:	e0ffaa04 	addi	r3,fp,-344
  140830:	1885883a 	add	r2,r3,r2
  140834:	10c00604 	addi	r3,r2,24
  140838:	18800017 	ldw	r2,0(r3)
  14083c:	1009883a 	mov	r4,r2
  140840:	e17faa17 	ldw	r5,-344(fp)
  140844:	e1bfab17 	ldw	r6,-340(fp)
  140848:	01402a80 	call	1402a8 <kk_putelem>
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 1);
#endif

	/* Transfer matrix */
	for(i = 0; i < N; i++)
		for(j = 0; j < N; j++)
  14084c:	e0bfab17 	ldw	r2,-340(fp)
  140850:	10800044 	addi	r2,r2,1
  140854:	e0bfab15 	stw	r2,-340(fp)
  140858:	e0bfab17 	ldw	r2,-340(fp)
  14085c:	10800110 	cmplti	r2,r2,4
  140860:	103feb1e 	bne	r2,zero,140810 <the_algorithm+0x64>
	/* Start performance counter: Transfer matrix */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 1);
#endif

	/* Transfer matrix */
	for(i = 0; i < N; i++)
  140864:	e0bfaa17 	ldw	r2,-344(fp)
  140868:	10800044 	addi	r2,r2,1
  14086c:	e0bfaa15 	stw	r2,-344(fp)
  140870:	e0bfaa17 	ldw	r2,-344(fp)
  140874:	10800110 	cmplti	r2,r2,4
  140878:	103fe31e 	bne	r2,zero,140808 <the_algorithm+0x5c>
	/* Timestamp before: KK Iterations */
	then[1] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Stop performance counter: Transfer matrix */
	PERF_END(PERFORMANCE_COUNTER_BASE, 1);
  14087c:	0007883a 	mov	r3,zero
  140880:	00800634 	movhi	r2,24
  140884:	10840404 	addi	r2,r2,4112
  140888:	10c00035 	stwio	r3,0(r2)

	/* Start performance counter: KK Iterations */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 2);
  14088c:	0007883a 	mov	r3,zero
  140890:	00800634 	movhi	r2,24
  140894:	10840904 	addi	r2,r2,4132
  140898:	10c00035 	stwio	r3,0(r2)
#endif

	/* Start and wait for custom hardware to finish */
	kk_start();
  14089c:	01403100 	call	140310 <kk_start>
	while(kk_isrunning());
  1408a0:	0001883a 	nop
  1408a4:	01403380 	call	140338 <kk_isrunning>
  1408a8:	10803fcc 	andi	r2,r2,255
  1408ac:	1080201c 	xori	r2,r2,128
  1408b0:	10bfe004 	addi	r2,r2,-128
  1408b4:	103ffb1e 	bne	r2,zero,1408a4 <the_algorithm+0xf8>

	/* Get elements */
	for(i = 0; i < N; i++) {
  1408b8:	e03faa15 	stw	zero,-344(fp)
  1408bc:	00003106 	br	140984 <the_algorithm+0x1d8>
		for(j = 0; j < N; j++) {
  1408c0:	e03fab15 	stw	zero,-340(fp)
  1408c4:	00002906 	br	14096c <the_algorithm+0x1c0>
			matrix_K[prev][i][j] = kk_getintelem(i, j);
  1408c8:	e13faa17 	ldw	r4,-344(fp)
  1408cc:	e17fab17 	ldw	r5,-340(fp)
  1408d0:	01403b00 	call	1403b0 <kk_getintelem>
  1408d4:	1007883a 	mov	r3,r2
  1408d8:	e0bfad17 	ldw	r2,-332(fp)
  1408dc:	1085883a 	add	r2,r2,r2
  1408e0:	1089883a 	add	r4,r2,r2
  1408e4:	e0bfaa17 	ldw	r2,-344(fp)
  1408e8:	2085883a 	add	r2,r4,r2
  1408ec:	1085883a 	add	r2,r2,r2
  1408f0:	1089883a 	add	r4,r2,r2
  1408f4:	e0bfab17 	ldw	r2,-340(fp)
  1408f8:	2085883a 	add	r2,r4,r2
  1408fc:	1085883a 	add	r2,r2,r2
  140900:	1085883a 	add	r2,r2,r2
  140904:	e13faa04 	addi	r4,fp,-344
  140908:	2085883a 	add	r2,r4,r2
  14090c:	10801604 	addi	r2,r2,88
  140910:	10c00015 	stw	r3,0(r2)
			matrix_K[curr][i][j] = kk_getdetelem(i, j);
  140914:	e13faa17 	ldw	r4,-344(fp)
  140918:	e17fab17 	ldw	r5,-340(fp)
  14091c:	01404140 	call	140414 <kk_getdetelem>
  140920:	1007883a 	mov	r3,r2
  140924:	e0bfae17 	ldw	r2,-328(fp)
  140928:	1085883a 	add	r2,r2,r2
  14092c:	1089883a 	add	r4,r2,r2
  140930:	e0bfaa17 	ldw	r2,-344(fp)
  140934:	2085883a 	add	r2,r4,r2
  140938:	1085883a 	add	r2,r2,r2
  14093c:	1089883a 	add	r4,r2,r2
  140940:	e0bfab17 	ldw	r2,-340(fp)
  140944:	2085883a 	add	r2,r4,r2
  140948:	1085883a 	add	r2,r2,r2
  14094c:	1085883a 	add	r2,r2,r2
  140950:	e13faa04 	addi	r4,fp,-344
  140954:	2085883a 	add	r2,r4,r2
  140958:	10801604 	addi	r2,r2,88
  14095c:	10c00015 	stw	r3,0(r2)
	kk_start();
	while(kk_isrunning());

	/* Get elements */
	for(i = 0; i < N; i++) {
		for(j = 0; j < N; j++) {
  140960:	e0bfab17 	ldw	r2,-340(fp)
  140964:	10800044 	addi	r2,r2,1
  140968:	e0bfab15 	stw	r2,-340(fp)
  14096c:	e0bfab17 	ldw	r2,-340(fp)
  140970:	10800110 	cmplti	r2,r2,4
  140974:	103fd41e 	bne	r2,zero,1408c8 <the_algorithm+0x11c>
	/* Start and wait for custom hardware to finish */
	kk_start();
	while(kk_isrunning());

	/* Get elements */
	for(i = 0; i < N; i++) {
  140978:	e0bfaa17 	ldw	r2,-344(fp)
  14097c:	10800044 	addi	r2,r2,1
  140980:	e0bfaa15 	stw	r2,-344(fp)
  140984:	e0bfaa17 	ldw	r2,-344(fp)
  140988:	10800110 	cmplti	r2,r2,4
  14098c:	103fcc1e 	bne	r2,zero,1408c0 <the_algorithm+0x114>
	/* Timestamp after: KK Iterations */
	now[1] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Stop performance counter: KK Iterations */
	PERF_END(PERFORMANCE_COUNTER_BASE, 2);
  140990:	0007883a 	mov	r3,zero
  140994:	00800634 	movhi	r2,24
  140998:	10840804 	addi	r2,r2,4128
  14099c:	10c00035 	stwio	r3,0(r2)
#endif

	/* Print intermediate matrix */
	printf("################################################\n");
  1409a0:	01000574 	movhi	r4,21
  1409a4:	2103b104 	addi	r4,r4,3780
  1409a8:	01424940 	call	142494 <puts>
	printf("Matrix K+1: K = %d\n", N);
  1409ac:	01000574 	movhi	r4,21
  1409b0:	2103be04 	addi	r4,r4,3832
  1409b4:	01400104 	movi	r5,4
  1409b8:	014237c0 	call	14237c <printf>
	print_matrix(matrix_K[curr]);
  1409bc:	e0ffc004 	addi	r3,fp,-256
  1409c0:	e0bfae17 	ldw	r2,-328(fp)
  1409c4:	100491ba 	slli	r2,r2,6
  1409c8:	1885883a 	add	r2,r3,r2
  1409cc:	1009883a 	mov	r4,r2
  1409d0:	01404780 	call	140478 <print_matrix>
	/* Timestamp before: Final iteration */
	then[2] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Start performance counter: Final iteration */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 3);
  1409d4:	0007883a 	mov	r3,zero
  1409d8:	00800634 	movhi	r2,24
  1409dc:	10840d04 	addi	r2,r2,4148
  1409e0:	10c00035 	stwio	r3,0(r2)
#endif

	/* Final iteration: Calculate inverse */
	for(i = 0; i < N; i++)
  1409e4:	e03faa15 	stw	zero,-344(fp)
  1409e8:	00005106 	br	140b30 <the_algorithm+0x384>
		for(j = 0; j < N; j++)
  1409ec:	e03fab15 	stw	zero,-340(fp)
  1409f0:	00004906 	br	140b18 <the_algorithm+0x36c>
				matrix_K[next][i][j] = (matrix_K[prev][(j + 1) % N][(i + 1) % N] / matrix_K[curr][i][j]);
  1409f4:	e0bfab17 	ldw	r2,-340(fp)
  1409f8:	10c00044 	addi	r3,r2,1
  1409fc:	00a00034 	movhi	r2,32768
  140a00:	108000c4 	addi	r2,r2,3
  140a04:	1884703a 	and	r2,r3,r2
  140a08:	1000040e 	bge	r2,zero,140a1c <the_algorithm+0x270>
  140a0c:	10bfffc4 	addi	r2,r2,-1
  140a10:	00ffff04 	movi	r3,-4
  140a14:	10c4b03a 	or	r2,r2,r3
  140a18:	10800044 	addi	r2,r2,1
  140a1c:	1009883a 	mov	r4,r2
  140a20:	e0bfaa17 	ldw	r2,-344(fp)
  140a24:	10c00044 	addi	r3,r2,1
  140a28:	00a00034 	movhi	r2,32768
  140a2c:	108000c4 	addi	r2,r2,3
  140a30:	1884703a 	and	r2,r3,r2
  140a34:	1000040e 	bge	r2,zero,140a48 <the_algorithm+0x29c>
  140a38:	10bfffc4 	addi	r2,r2,-1
  140a3c:	00ffff04 	movi	r3,-4
  140a40:	10c4b03a 	or	r2,r2,r3
  140a44:	10800044 	addi	r2,r2,1
  140a48:	1007883a 	mov	r3,r2
  140a4c:	e0bfad17 	ldw	r2,-332(fp)
  140a50:	1085883a 	add	r2,r2,r2
  140a54:	1085883a 	add	r2,r2,r2
  140a58:	1105883a 	add	r2,r2,r4
  140a5c:	1085883a 	add	r2,r2,r2
  140a60:	1085883a 	add	r2,r2,r2
  140a64:	10c5883a 	add	r2,r2,r3
  140a68:	1085883a 	add	r2,r2,r2
  140a6c:	1085883a 	add	r2,r2,r2
  140a70:	e0ffaa04 	addi	r3,fp,-344
  140a74:	1885883a 	add	r2,r3,r2
  140a78:	10801604 	addi	r2,r2,88
  140a7c:	10c00017 	ldw	r3,0(r2)
  140a80:	e0bfae17 	ldw	r2,-328(fp)
  140a84:	1085883a 	add	r2,r2,r2
  140a88:	1089883a 	add	r4,r2,r2
  140a8c:	e0bfaa17 	ldw	r2,-344(fp)
  140a90:	2085883a 	add	r2,r4,r2
  140a94:	1085883a 	add	r2,r2,r2
  140a98:	1089883a 	add	r4,r2,r2
  140a9c:	e0bfab17 	ldw	r2,-340(fp)
  140aa0:	2085883a 	add	r2,r4,r2
  140aa4:	1085883a 	add	r2,r2,r2
  140aa8:	1085883a 	add	r2,r2,r2
  140aac:	e13faa04 	addi	r4,fp,-344
  140ab0:	2085883a 	add	r2,r4,r2
  140ab4:	11001604 	addi	r4,r2,88
  140ab8:	20800017 	ldw	r2,0(r4)
  140abc:	1809883a 	mov	r4,r3
  140ac0:	100b883a 	mov	r5,r2
  140ac4:	01411bc0 	call	1411bc <__divsf3>
  140ac8:	1009883a 	mov	r4,r2
  140acc:	2007883a 	mov	r3,r4
  140ad0:	e0bfac17 	ldw	r2,-336(fp)
  140ad4:	1085883a 	add	r2,r2,r2
  140ad8:	1089883a 	add	r4,r2,r2
  140adc:	e0bfaa17 	ldw	r2,-344(fp)
  140ae0:	2085883a 	add	r2,r4,r2
  140ae4:	1085883a 	add	r2,r2,r2
  140ae8:	1089883a 	add	r4,r2,r2
  140aec:	e0bfab17 	ldw	r2,-340(fp)
  140af0:	2085883a 	add	r2,r4,r2
  140af4:	1085883a 	add	r2,r2,r2
  140af8:	1085883a 	add	r2,r2,r2
  140afc:	e13faa04 	addi	r4,fp,-344
  140b00:	2085883a 	add	r2,r4,r2
  140b04:	10801604 	addi	r2,r2,88
  140b08:	10c00015 	stw	r3,0(r2)
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 3);
#endif

	/* Final iteration: Calculate inverse */
	for(i = 0; i < N; i++)
		for(j = 0; j < N; j++)
  140b0c:	e0bfab17 	ldw	r2,-340(fp)
  140b10:	10800044 	addi	r2,r2,1
  140b14:	e0bfab15 	stw	r2,-340(fp)
  140b18:	e0bfab17 	ldw	r2,-340(fp)
  140b1c:	10800110 	cmplti	r2,r2,4
  140b20:	103fb41e 	bne	r2,zero,1409f4 <the_algorithm+0x248>
	/* Start performance counter: Final iteration */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 3);
#endif

	/* Final iteration: Calculate inverse */
	for(i = 0; i < N; i++)
  140b24:	e0bfaa17 	ldw	r2,-344(fp)
  140b28:	10800044 	addi	r2,r2,1
  140b2c:	e0bfaa15 	stw	r2,-344(fp)
  140b30:	e0bfaa17 	ldw	r2,-344(fp)
  140b34:	10800110 	cmplti	r2,r2,4
  140b38:	103fac1e 	bne	r2,zero,1409ec <the_algorithm+0x240>
	/* Timestamp after: Final iteration */
	now[2] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Stop performance counter: Final iteration */
	PERF_END(PERFORMANCE_COUNTER_BASE, 3);
  140b3c:	0007883a 	mov	r3,zero
  140b40:	00800634 	movhi	r2,24
  140b44:	10840c04 	addi	r2,r2,4144
  140b48:	10c00035 	stwio	r3,0(r2)
#endif

	/* Print inverted matrix */
	printf("################################################\n");
  140b4c:	01000574 	movhi	r4,21
  140b50:	2103b104 	addi	r4,r4,3780
  140b54:	01424940 	call	142494 <puts>
	printf("Inverted matrix:\n");
  140b58:	01000574 	movhi	r4,21
  140b5c:	2103c304 	addi	r4,r4,3852
  140b60:	01424940 	call	142494 <puts>
	print_matrix(matrix_K[next]);
  140b64:	e0ffc004 	addi	r3,fp,-256
  140b68:	e0bfac17 	ldw	r2,-336(fp)
  140b6c:	100491ba 	slli	r2,r2,6
  140b70:	1885883a 	add	r2,r3,r2
  140b74:	1009883a 	mov	r4,r2
  140b78:	01404780 	call	140478 <print_matrix>
	/* Timestamp before: Calculate identity */
	then[3] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Start performance counter: Calculate identity */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 4);
  140b7c:	0007883a 	mov	r3,zero
  140b80:	00800634 	movhi	r2,24
  140b84:	10841104 	addi	r2,r2,4164
  140b88:	10c00035 	stwio	r3,0(r2)
#endif

	/* Calculate identity */
	multiply_matrix(matrix_K[next], matrix_O, matrix_IC);
  140b8c:	e0ffc004 	addi	r3,fp,-256
  140b90:	e0bfac17 	ldw	r2,-336(fp)
  140b94:	100491ba 	slli	r2,r2,6
  140b98:	1889883a 	add	r4,r3,r2
  140b9c:	e0ffb004 	addi	r3,fp,-320
  140ba0:	e0bff004 	addi	r2,fp,-64
  140ba4:	180b883a 	mov	r5,r3
  140ba8:	100d883a 	mov	r6,r2
  140bac:	01405380 	call	140538 <multiply_matrix>
	/* Timestamp after: Calculate identity */
	now[3] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Stop performance counter: Calculate identity */
	PERF_END(PERFORMANCE_COUNTER_BASE, 4);
  140bb0:	0007883a 	mov	r3,zero
  140bb4:	00800634 	movhi	r2,24
  140bb8:	10841004 	addi	r2,r2,4160
  140bbc:	10c00035 	stwio	r3,0(r2)
#endif

	/* Print calculated identity matrix */
	printf("################################################\n");
  140bc0:	01000574 	movhi	r4,21
  140bc4:	2103b104 	addi	r4,r4,3780
  140bc8:	01424940 	call	142494 <puts>
	printf("Calculated identity based on calculated inverted matrix:\n");
  140bcc:	01000574 	movhi	r4,21
  140bd0:	2103c804 	addi	r4,r4,3872
  140bd4:	01424940 	call	142494 <puts>
	print_matrix(matrix_IC);
  140bd8:	e0bff004 	addi	r2,fp,-64
  140bdc:	1009883a 	mov	r4,r2
  140be0:	01404780 	call	140478 <print_matrix>
	printf("################################################\n");
  140be4:	01000574 	movhi	r4,21
  140be8:	2103b104 	addi	r4,r4,3780
  140bec:	01424940 	call	142494 <puts>
	/* Timestamp before: Calculate error */
	then[4] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Start performance counter: Calculate error */
	PERF_BEGIN(PERFORMANCE_COUNTER_BASE, 5);
  140bf0:	0007883a 	mov	r3,zero
  140bf4:	00800634 	movhi	r2,24
  140bf8:	10841504 	addi	r2,r2,4180
  140bfc:	10c00035 	stwio	r3,0(r2)
#endif

	/* Calculate error */
	error = calculate_error(matrix_IC);
  140c00:	e0bff004 	addi	r2,fp,-64
  140c04:	1009883a 	mov	r4,r2
  140c08:	01406b40 	call	1406b4 <calculate_error>
  140c0c:	e0bfaf15 	stw	r2,-324(fp)
	/* Timestamp after: Calculate error */
	now[4] = alt_timestamp();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Stop performance counter: Calculate error */
	PERF_END(PERFORMANCE_COUNTER_BASE, 5);
  140c10:	0007883a 	mov	r3,zero
  140c14:	00800634 	movhi	r2,24
  140c18:	10841404 	addi	r2,r2,4176
  140c1c:	10c00035 	stwio	r3,0(r2)
#endif

	/* Print error */
	printf("Error distance: %.8lf\n", error);
  140c20:	e13faf17 	ldw	r4,-324(fp)
  140c24:	014209c0 	call	14209c <__extendsfdf2>
  140c28:	100d883a 	mov	r6,r2
  140c2c:	180f883a 	mov	r7,r3
  140c30:	01000574 	movhi	r4,21
  140c34:	2103d704 	addi	r4,r4,3932
  140c38:	300b883a 	mov	r5,r6
  140c3c:	380d883a 	mov	r6,r7
  140c40:	014237c0 	call	14237c <printf>
	printf("Timestamp 1: Iterations: %u ticks\n", now[1] - then[1]);
	printf("Timestamp 2: Final iteration: %u ticks\n", now[2] - then[2]);
	printf("Timestamp 3: Calculated identity: %u ticks\n", now[3] - then[3]);
	printf("Timestamp 4: Error distance: %u ticks\n", now[4] - then[4]);
#endif
}
  140c44:	e037883a 	mov	sp,fp
  140c48:	dfc00117 	ldw	ra,4(sp)
  140c4c:	df000017 	ldw	fp,0(sp)
  140c50:	dec00204 	addi	sp,sp,8
  140c54:	f800283a 	ret

00140c58 <main>:

/**
 * @brief Main function.
 */
int main(void) {
  140c58:	defffa04 	addi	sp,sp,-24
  140c5c:	dfc00515 	stw	ra,20(sp)
  140c60:	df000415 	stw	fp,16(sp)
  140c64:	df000404 	addi	fp,sp,16
	/* Start timestamp counter */
	alt_timestamp_start();
#endif
#ifdef ACTIVATE_PERFCOUNT
	/* Reset and start global counter */
	PERF_RESET(PERFORMANCE_COUNTER_BASE);
  140c68:	00c00044 	movi	r3,1
  140c6c:	00800634 	movhi	r2,24
  140c70:	10840004 	addi	r2,r2,4096
  140c74:	10c00035 	stwio	r3,0(r2)
	PERF_START_MEASURING(PERFORMANCE_COUNTER_BASE);
  140c78:	0007883a 	mov	r3,zero
  140c7c:	00800634 	movhi	r2,24
  140c80:	10840104 	addi	r2,r2,4100
  140c84:	10c00035 	stwio	r3,0(r2)
#endif

	/* Execute algorithm */
	the_algorithm();
  140c88:	01407ac0 	call	1407ac <the_algorithm>

#ifdef ACTIVATE_PERFCOUNT
	/* Stop global counter */
	PERF_STOP_MEASURING(PERFORMANCE_COUNTER_BASE);
  140c8c:	0007883a 	mov	r3,zero
  140c90:	00800634 	movhi	r2,24
  140c94:	10840004 	addi	r2,r2,4096
  140c98:	10c00035 	stwio	r3,0(r2)

	/* Print performance counter report */
	perf_print_formatted_report(PERFORMANCE_COUNTER_BASE, ALT_CPU_FREQ, 5,
  140c9c:	00800574 	movhi	r2,21
  140ca0:	1083f104 	addi	r2,r2,4036
  140ca4:	d8800015 	stw	r2,0(sp)
  140ca8:	00800574 	movhi	r2,21
  140cac:	1083f404 	addi	r2,r2,4048
  140cb0:	d8800115 	stw	r2,4(sp)
  140cb4:	00800574 	movhi	r2,21
  140cb8:	1083f804 	addi	r2,r2,4064
  140cbc:	d8800215 	stw	r2,8(sp)
  140cc0:	00800574 	movhi	r2,21
  140cc4:	1083fd04 	addi	r2,r2,4084
  140cc8:	d8800315 	stw	r2,12(sp)
  140ccc:	01000634 	movhi	r4,24
  140cd0:	21040004 	addi	r4,r4,4096
  140cd4:	01405f74 	movhi	r5,381
  140cd8:	295e1004 	addi	r5,r5,30784
  140cdc:	01800144 	movi	r6,5
  140ce0:	01c00574 	movhi	r7,21
  140ce4:	39c3ed04 	addi	r7,r7,4020
  140ce8:	014f9280 	call	14f928 <perf_print_formatted_report>
							"Last iteration",
							"Calculated identity",
							"Error distance");
#endif

	return 0;
  140cec:	0005883a 	mov	r2,zero
}
  140cf0:	e037883a 	mov	sp,fp
  140cf4:	dfc00117 	ldw	ra,4(sp)
  140cf8:	df000017 	ldw	fp,0(sp)
  140cfc:	dec00204 	addi	sp,sp,8
  140d00:	f800283a 	ret

00140d04 <__addsf3>:
  140d04:	defffc04 	addi	sp,sp,-16
  140d08:	2004d7fa 	srli	r2,r4,31
  140d0c:	2810d5fa 	srli	r8,r5,23
  140d10:	dc000015 	stw	r16,0(sp)
  140d14:	280ed7fa 	srli	r7,r5,31
  140d18:	2020d5fa 	srli	r16,r4,23
  140d1c:	01802034 	movhi	r6,128
  140d20:	31bfffc4 	addi	r6,r6,-1
  140d24:	3106703a 	and	r3,r6,r4
  140d28:	dc400115 	stw	r17,4(sp)
  140d2c:	314a703a 	and	r5,r6,r5
  140d30:	dfc00315 	stw	ra,12(sp)
  140d34:	dc800215 	stw	r18,8(sp)
  140d38:	14403fcc 	andi	r17,r2,255
  140d3c:	84003fcc 	andi	r16,r16,255
  140d40:	180690fa 	slli	r3,r3,3
  140d44:	41003fcc 	andi	r4,r8,255
  140d48:	280a90fa 	slli	r5,r5,3
  140d4c:	89c03b26 	beq	r17,r7,140e3c <__addsf3+0x138>
  140d50:	8105c83a 	sub	r2,r16,r4
  140d54:	0080710e 	bge	zero,r2,140f1c <__addsf3+0x218>
  140d58:	20001e1e 	bne	r4,zero,140dd4 <__addsf3+0xd0>
  140d5c:	2800521e 	bne	r5,zero,140ea8 <__addsf3+0x1a4>
  140d60:	188001cc 	andi	r2,r3,7
  140d64:	10000426 	beq	r2,zero,140d78 <__addsf3+0x74>
  140d68:	190003cc 	andi	r4,r3,15
  140d6c:	00800104 	movi	r2,4
  140d70:	20800126 	beq	r4,r2,140d78 <__addsf3+0x74>
  140d74:	18c00104 	addi	r3,r3,4
  140d78:	1901002c 	andhi	r4,r3,1024
  140d7c:	8805883a 	mov	r2,r17
  140d80:	20002526 	beq	r4,zero,140e18 <__addsf3+0x114>
  140d84:	84000044 	addi	r16,r16,1
  140d88:	01003fc4 	movi	r4,255
  140d8c:	81006e26 	beq	r16,r4,140f48 <__addsf3+0x244>
  140d90:	180691ba 	slli	r3,r3,6
  140d94:	1806d27a 	srli	r3,r3,9
  140d98:	84003fcc 	andi	r16,r16,255
  140d9c:	802095fa 	slli	r16,r16,23
  140da0:	10803fcc 	andi	r2,r2,255
  140da4:	100897fa 	slli	r4,r2,31
  140da8:	00802034 	movhi	r2,128
  140dac:	10bfffc4 	addi	r2,r2,-1
  140db0:	1884703a 	and	r2,r3,r2
  140db4:	1404b03a 	or	r2,r2,r16
  140db8:	1104b03a 	or	r2,r2,r4
  140dbc:	dfc00317 	ldw	ra,12(sp)
  140dc0:	dc800217 	ldw	r18,8(sp)
  140dc4:	dc400117 	ldw	r17,4(sp)
  140dc8:	dc000017 	ldw	r16,0(sp)
  140dcc:	dec00404 	addi	sp,sp,16
  140dd0:	f800283a 	ret
  140dd4:	01003fc4 	movi	r4,255
  140dd8:	813fe126 	beq	r16,r4,140d60 <__addsf3+0x5c>
  140ddc:	29410034 	orhi	r5,r5,1024
  140de0:	010006c4 	movi	r4,27
  140de4:	2080f016 	blt	r4,r2,1411a8 <__addsf3+0x4a4>
  140de8:	01000804 	movi	r4,32
  140dec:	2089c83a 	sub	r4,r4,r2
  140df0:	2908983a 	sll	r4,r5,r4
  140df4:	288ad83a 	srl	r5,r5,r2
  140df8:	2004c03a 	cmpne	r2,r4,zero
  140dfc:	1144b03a 	or	r2,r2,r5
  140e00:	1887c83a 	sub	r3,r3,r2
  140e04:	00002b06 	br	140eb4 <__addsf3+0x1b0>
  140e08:	0005883a 	mov	r2,zero
  140e0c:	00c10034 	movhi	r3,1024
  140e10:	18fffe04 	addi	r3,r3,-8
  140e14:	04003fc4 	movi	r16,255
  140e18:	01003fc4 	movi	r4,255
  140e1c:	1806d0fa 	srli	r3,r3,3
  140e20:	8100021e 	bne	r16,r4,140e2c <__addsf3+0x128>
  140e24:	18004826 	beq	r3,zero,140f48 <__addsf3+0x244>
  140e28:	18c01034 	orhi	r3,r3,64
  140e2c:	01002034 	movhi	r4,128
  140e30:	213fffc4 	addi	r4,r4,-1
  140e34:	1906703a 	and	r3,r3,r4
  140e38:	003fd706 	br	140d98 <__addsf3+0x94>
  140e3c:	810dc83a 	sub	r6,r16,r4
  140e40:	0180480e 	bge	zero,r6,140f64 <__addsf3+0x260>
  140e44:	20002f26 	beq	r4,zero,140f04 <__addsf3+0x200>
  140e48:	01003fc4 	movi	r4,255
  140e4c:	813fc426 	beq	r16,r4,140d60 <__addsf3+0x5c>
  140e50:	29410034 	orhi	r5,r5,1024
  140e54:	010006c4 	movi	r4,27
  140e58:	2180d616 	blt	r4,r6,1411b4 <__addsf3+0x4b0>
  140e5c:	01000804 	movi	r4,32
  140e60:	2189c83a 	sub	r4,r4,r6
  140e64:	2908983a 	sll	r4,r5,r4
  140e68:	298cd83a 	srl	r6,r5,r6
  140e6c:	200ac03a 	cmpne	r5,r4,zero
  140e70:	298ab03a 	or	r5,r5,r6
  140e74:	1947883a 	add	r3,r3,r5
  140e78:	1901002c 	andhi	r4,r3,1024
  140e7c:	203fb826 	beq	r4,zero,140d60 <__addsf3+0x5c>
  140e80:	84000044 	addi	r16,r16,1
  140e84:	01003fc4 	movi	r4,255
  140e88:	81005f26 	beq	r16,r4,141008 <__addsf3+0x304>
  140e8c:	00bf0034 	movhi	r2,64512
  140e90:	10bfffc4 	addi	r2,r2,-1
  140e94:	1884703a 	and	r2,r3,r2
  140e98:	1004d07a 	srli	r2,r2,1
  140e9c:	18c0004c 	andi	r3,r3,1
  140ea0:	10c6b03a 	or	r3,r2,r3
  140ea4:	003fae06 	br	140d60 <__addsf3+0x5c>
  140ea8:	10bfffc4 	addi	r2,r2,-1
  140eac:	1000381e 	bne	r2,zero,140f90 <__addsf3+0x28c>
  140eb0:	1947c83a 	sub	r3,r3,r5
  140eb4:	1881002c 	andhi	r2,r3,1024
  140eb8:	103fa926 	beq	r2,zero,140d60 <__addsf3+0x5c>
  140ebc:	04810034 	movhi	r18,1024
  140ec0:	94bfffc4 	addi	r18,r18,-1
  140ec4:	1ca4703a 	and	r18,r3,r18
  140ec8:	9009883a 	mov	r4,r18
  140ecc:	01421980 	call	142198 <__clzsi2>
  140ed0:	10bffec4 	addi	r2,r2,-5
  140ed4:	90a4983a 	sll	r18,r18,r2
  140ed8:	14001d16 	blt	r2,r16,140f50 <__addsf3+0x24c>
  140edc:	1421c83a 	sub	r16,r2,r16
  140ee0:	00c007c4 	movi	r3,31
  140ee4:	1c07c83a 	sub	r3,r3,r16
  140ee8:	90c6983a 	sll	r3,r18,r3
  140eec:	84000044 	addi	r16,r16,1
  140ef0:	9424d83a 	srl	r18,r18,r16
  140ef4:	1806c03a 	cmpne	r3,r3,zero
  140ef8:	0021883a 	mov	r16,zero
  140efc:	1c86b03a 	or	r3,r3,r18
  140f00:	003f9706 	br	140d60 <__addsf3+0x5c>
  140f04:	283f9626 	beq	r5,zero,140d60 <__addsf3+0x5c>
  140f08:	31bfffc4 	addi	r6,r6,-1
  140f0c:	303fd926 	beq	r6,zero,140e74 <__addsf3+0x170>
  140f10:	01003fc4 	movi	r4,255
  140f14:	813fcf1e 	bne	r16,r4,140e54 <__addsf3+0x150>
  140f18:	003f9106 	br	140d60 <__addsf3+0x5c>
  140f1c:	10001f1e 	bne	r2,zero,140f9c <__addsf3+0x298>
  140f20:	80800044 	addi	r2,r16,1
  140f24:	10803fcc 	andi	r2,r2,255
  140f28:	01000044 	movi	r4,1
  140f2c:	2080430e 	bge	r4,r2,14103c <__addsf3+0x338>
  140f30:	1965c83a 	sub	r18,r3,r5
  140f34:	9081002c 	andhi	r2,r18,1024
  140f38:	10002426 	beq	r2,zero,140fcc <__addsf3+0x2c8>
  140f3c:	28e5c83a 	sub	r18,r5,r3
  140f40:	3823883a 	mov	r17,r7
  140f44:	003fe006 	br	140ec8 <__addsf3+0x1c4>
  140f48:	0007883a 	mov	r3,zero
  140f4c:	003f9206 	br	140d98 <__addsf3+0x94>
  140f50:	00ff0034 	movhi	r3,64512
  140f54:	18ffffc4 	addi	r3,r3,-1
  140f58:	80a1c83a 	sub	r16,r16,r2
  140f5c:	90c6703a 	and	r3,r18,r3
  140f60:	003f7f06 	br	140d60 <__addsf3+0x5c>
  140f64:	30003b1e 	bne	r6,zero,141054 <__addsf3+0x350>
  140f68:	81000044 	addi	r4,r16,1
  140f6c:	21c03fcc 	andi	r7,r4,255
  140f70:	01800044 	movi	r6,1
  140f74:	31c0260e 	bge	r6,r7,141010 <__addsf3+0x30c>
  140f78:	01803fc4 	movi	r6,255
  140f7c:	21802126 	beq	r4,r6,141004 <__addsf3+0x300>
  140f80:	28c7883a 	add	r3,r5,r3
  140f84:	1806d07a 	srli	r3,r3,1
  140f88:	2021883a 	mov	r16,r4
  140f8c:	003f7406 	br	140d60 <__addsf3+0x5c>
  140f90:	01003fc4 	movi	r4,255
  140f94:	813f921e 	bne	r16,r4,140de0 <__addsf3+0xdc>
  140f98:	003f7106 	br	140d60 <__addsf3+0x5c>
  140f9c:	80001026 	beq	r16,zero,140fe0 <__addsf3+0x2dc>
  140fa0:	01803fc4 	movi	r6,255
  140fa4:	21801326 	beq	r4,r6,140ff4 <__addsf3+0x2f0>
  140fa8:	0085c83a 	sub	r2,zero,r2
  140fac:	18c10034 	orhi	r3,r3,1024
  140fb0:	018006c4 	movi	r6,27
  140fb4:	3080390e 	bge	r6,r2,14109c <__addsf3+0x398>
  140fb8:	00c00044 	movi	r3,1
  140fbc:	28c7c83a 	sub	r3,r5,r3
  140fc0:	2021883a 	mov	r16,r4
  140fc4:	3823883a 	mov	r17,r7
  140fc8:	003fba06 	br	140eb4 <__addsf3+0x1b0>
  140fcc:	903fbe1e 	bne	r18,zero,140ec8 <__addsf3+0x1c4>
  140fd0:	0007883a 	mov	r3,zero
  140fd4:	0005883a 	mov	r2,zero
  140fd8:	0021883a 	mov	r16,zero
  140fdc:	003f8e06 	br	140e18 <__addsf3+0x114>
  140fe0:	18000426 	beq	r3,zero,140ff4 <__addsf3+0x2f0>
  140fe4:	0084303a 	nor	r2,zero,r2
  140fe8:	103ff426 	beq	r2,zero,140fbc <__addsf3+0x2b8>
  140fec:	01803fc4 	movi	r6,255
  140ff0:	21bfef1e 	bne	r4,r6,140fb0 <__addsf3+0x2ac>
  140ff4:	2807883a 	mov	r3,r5
  140ff8:	2021883a 	mov	r16,r4
  140ffc:	3823883a 	mov	r17,r7
  141000:	003f5706 	br	140d60 <__addsf3+0x5c>
  141004:	2021883a 	mov	r16,r4
  141008:	0007883a 	mov	r3,zero
  14100c:	003f8206 	br	140e18 <__addsf3+0x114>
  141010:	8000441e 	bne	r16,zero,141124 <__addsf3+0x420>
  141014:	18005926 	beq	r3,zero,14117c <__addsf3+0x478>
  141018:	283f5126 	beq	r5,zero,140d60 <__addsf3+0x5c>
  14101c:	1947883a 	add	r3,r3,r5
  141020:	1881002c 	andhi	r2,r3,1024
  141024:	103f4e26 	beq	r2,zero,140d60 <__addsf3+0x5c>
  141028:	00bf0034 	movhi	r2,64512
  14102c:	10bfffc4 	addi	r2,r2,-1
  141030:	1886703a 	and	r3,r3,r2
  141034:	3021883a 	mov	r16,r6
  141038:	003f4906 	br	140d60 <__addsf3+0x5c>
  14103c:	8000111e 	bne	r16,zero,141084 <__addsf3+0x380>
  141040:	1800221e 	bne	r3,zero,1410cc <__addsf3+0x3c8>
  141044:	28004326 	beq	r5,zero,141154 <__addsf3+0x450>
  141048:	2807883a 	mov	r3,r5
  14104c:	3823883a 	mov	r17,r7
  141050:	003f4306 	br	140d60 <__addsf3+0x5c>
  141054:	8000181e 	bne	r16,zero,1410b8 <__addsf3+0x3b4>
  141058:	18002f26 	beq	r3,zero,141118 <__addsf3+0x414>
  14105c:	018c303a 	nor	r6,zero,r6
  141060:	30000526 	beq	r6,zero,141078 <__addsf3+0x374>
  141064:	01c03fc4 	movi	r7,255
  141068:	21c02b26 	beq	r4,r7,141118 <__addsf3+0x414>
  14106c:	01c006c4 	movi	r7,27
  141070:	39803b0e 	bge	r7,r6,141160 <__addsf3+0x45c>
  141074:	00c00044 	movi	r3,1
  141078:	1947883a 	add	r3,r3,r5
  14107c:	2021883a 	mov	r16,r4
  141080:	003f7d06 	br	140e78 <__addsf3+0x174>
  141084:	1800181e 	bne	r3,zero,1410e8 <__addsf3+0x3e4>
  141088:	283f5f26 	beq	r5,zero,140e08 <__addsf3+0x104>
  14108c:	2807883a 	mov	r3,r5
  141090:	3823883a 	mov	r17,r7
  141094:	04003fc4 	movi	r16,255
  141098:	003f3106 	br	140d60 <__addsf3+0x5c>
  14109c:	01800804 	movi	r6,32
  1410a0:	308dc83a 	sub	r6,r6,r2
  1410a4:	198c983a 	sll	r6,r3,r6
  1410a8:	1884d83a 	srl	r2,r3,r2
  1410ac:	3006c03a 	cmpne	r3,r6,zero
  1410b0:	1886b03a 	or	r3,r3,r2
  1410b4:	003fc106 	br	140fbc <__addsf3+0x2b8>
  1410b8:	01c03fc4 	movi	r7,255
  1410bc:	21c01626 	beq	r4,r7,141118 <__addsf3+0x414>
  1410c0:	018dc83a 	sub	r6,zero,r6
  1410c4:	18c10034 	orhi	r3,r3,1024
  1410c8:	003fe806 	br	14106c <__addsf3+0x368>
  1410cc:	283f2426 	beq	r5,zero,140d60 <__addsf3+0x5c>
  1410d0:	1945c83a 	sub	r2,r3,r5
  1410d4:	1101002c 	andhi	r4,r2,1024
  1410d8:	20002d26 	beq	r4,zero,141190 <__addsf3+0x48c>
  1410dc:	28c7c83a 	sub	r3,r5,r3
  1410e0:	3823883a 	mov	r17,r7
  1410e4:	003f1e06 	br	140d60 <__addsf3+0x5c>
  1410e8:	28001826 	beq	r5,zero,14114c <__addsf3+0x448>
  1410ec:	1806d0fa 	srli	r3,r3,3
  1410f0:	1880102c 	andhi	r2,r3,64
  1410f4:	10000526 	beq	r2,zero,14110c <__addsf3+0x408>
  1410f8:	280ad0fa 	srli	r5,r5,3
  1410fc:	2880102c 	andhi	r2,r5,64
  141100:	1000021e 	bne	r2,zero,14110c <__addsf3+0x408>
  141104:	2807883a 	mov	r3,r5
  141108:	3823883a 	mov	r17,r7
  14110c:	180690fa 	slli	r3,r3,3
  141110:	04003fc4 	movi	r16,255
  141114:	003f1206 	br	140d60 <__addsf3+0x5c>
  141118:	2807883a 	mov	r3,r5
  14111c:	2021883a 	mov	r16,r4
  141120:	003f0f06 	br	140d60 <__addsf3+0x5c>
  141124:	18001726 	beq	r3,zero,141184 <__addsf3+0x480>
  141128:	28000826 	beq	r5,zero,14114c <__addsf3+0x448>
  14112c:	1806d0fa 	srli	r3,r3,3
  141130:	1880102c 	andhi	r2,r3,64
  141134:	103ff526 	beq	r2,zero,14110c <__addsf3+0x408>
  141138:	280ad0fa 	srli	r5,r5,3
  14113c:	2880102c 	andhi	r2,r5,64
  141140:	103ff21e 	bne	r2,zero,14110c <__addsf3+0x408>
  141144:	2807883a 	mov	r3,r5
  141148:	003ff006 	br	14110c <__addsf3+0x408>
  14114c:	04003fc4 	movi	r16,255
  141150:	003f0306 	br	140d60 <__addsf3+0x5c>
  141154:	8007883a 	mov	r3,r16
  141158:	0005883a 	mov	r2,zero
  14115c:	003f2e06 	br	140e18 <__addsf3+0x114>
  141160:	01c00804 	movi	r7,32
  141164:	398fc83a 	sub	r7,r7,r6
  141168:	19ce983a 	sll	r7,r3,r7
  14116c:	1986d83a 	srl	r3,r3,r6
  141170:	380cc03a 	cmpne	r6,r7,zero
  141174:	30c6b03a 	or	r3,r6,r3
  141178:	003fbf06 	br	141078 <__addsf3+0x374>
  14117c:	2807883a 	mov	r3,r5
  141180:	003ef706 	br	140d60 <__addsf3+0x5c>
  141184:	2807883a 	mov	r3,r5
  141188:	04003fc4 	movi	r16,255
  14118c:	003ef406 	br	140d60 <__addsf3+0x5c>
  141190:	10000226 	beq	r2,zero,14119c <__addsf3+0x498>
  141194:	1007883a 	mov	r3,r2
  141198:	003ef106 	br	140d60 <__addsf3+0x5c>
  14119c:	0007883a 	mov	r3,zero
  1411a0:	0005883a 	mov	r2,zero
  1411a4:	003f1c06 	br	140e18 <__addsf3+0x114>
  1411a8:	00800044 	movi	r2,1
  1411ac:	1887c83a 	sub	r3,r3,r2
  1411b0:	003f4006 	br	140eb4 <__addsf3+0x1b0>
  1411b4:	01400044 	movi	r5,1
  1411b8:	003f2e06 	br	140e74 <__addsf3+0x170>

001411bc <__divsf3>:
  1411bc:	defff504 	addi	sp,sp,-44
  1411c0:	dc400215 	stw	r17,8(sp)
  1411c4:	2022d5fa 	srli	r17,r4,23
  1411c8:	dd000515 	stw	r20,20(sp)
  1411cc:	2028d7fa 	srli	r20,r4,31
  1411d0:	df000915 	stw	fp,36(sp)
  1411d4:	dcc00415 	stw	r19,16(sp)
  1411d8:	dfc00a15 	stw	ra,40(sp)
  1411dc:	04c02034 	movhi	r19,128
  1411e0:	9cffffc4 	addi	r19,r19,-1
  1411e4:	ddc00815 	stw	r23,32(sp)
  1411e8:	dd800715 	stw	r22,28(sp)
  1411ec:	dd400615 	stw	r21,24(sp)
  1411f0:	dc800315 	stw	r18,12(sp)
  1411f4:	dc000115 	stw	r16,4(sp)
  1411f8:	8c403fcc 	andi	r17,r17,255
  1411fc:	9926703a 	and	r19,r19,r4
  141200:	a7003fcc 	andi	fp,r20,255
  141204:	88006626 	beq	r17,zero,1413a0 <__divsf3+0x1e4>
  141208:	00803fc4 	movi	r2,255
  14120c:	88803026 	beq	r17,r2,1412d0 <__divsf3+0x114>
  141210:	9cc02034 	orhi	r19,r19,128
  141214:	982690fa 	slli	r19,r19,3
  141218:	8c7fe044 	addi	r17,r17,-127
  14121c:	002d883a 	mov	r22,zero
  141220:	002f883a 	mov	r23,zero
  141224:	280cd5fa 	srli	r6,r5,23
  141228:	282ad7fa 	srli	r21,r5,31
  14122c:	04002034 	movhi	r16,128
  141230:	843fffc4 	addi	r16,r16,-1
  141234:	31803fcc 	andi	r6,r6,255
  141238:	8160703a 	and	r16,r16,r5
  14123c:	aa003fcc 	andi	r8,r21,255
  141240:	30002e26 	beq	r6,zero,1412fc <__divsf3+0x140>
  141244:	00803fc4 	movi	r2,255
  141248:	30805926 	beq	r6,r2,1413b0 <__divsf3+0x1f4>
  14124c:	84002034 	orhi	r16,r16,128
  141250:	802090fa 	slli	r16,r16,3
  141254:	31bfe044 	addi	r6,r6,-127
  141258:	0007883a 	mov	r3,zero
  14125c:	a548f03a 	xor	r4,r20,r21
  141260:	1d8ab03a 	or	r5,r3,r22
  141264:	008003c4 	movi	r2,15
  141268:	200f883a 	mov	r7,r4
  14126c:	22403fcc 	andi	r9,r4,255
  141270:	11407d36 	bltu	r2,r5,141468 <__divsf3+0x2ac>
  141274:	294b883a 	add	r5,r5,r5
  141278:	00800534 	movhi	r2,20
  14127c:	1084a404 	addi	r2,r2,4752
  141280:	294b883a 	add	r5,r5,r5
  141284:	288b883a 	add	r5,r5,r2
  141288:	28800017 	ldw	r2,0(r5)
  14128c:	1000683a 	jmp	r2
  141290:	00141468 	cmpgeui	zero,zero,20561
  141294:	00141340 	call	14134 <__alt_mem_onchip_memory2-0x12becc>
  141298:	00141430 	cmpltui	zero,zero,20560
  14129c:	00141314 	movui	zero,20556
  1412a0:	00141430 	cmpltui	zero,zero,20560
  1412a4:	0014141c 	xori	zero,zero,20560
  1412a8:	00141430 	cmpltui	zero,zero,20560
  1412ac:	00141314 	movui	zero,20556
  1412b0:	00141340 	call	14134 <__alt_mem_onchip_memory2-0x12becc>
  1412b4:	00141340 	call	14134 <__alt_mem_onchip_memory2-0x12becc>
  1412b8:	0014141c 	xori	zero,zero,20560
  1412bc:	00141314 	movui	zero,20556
  1412c0:	00141308 	cmpgei	zero,zero,20556
  1412c4:	00141308 	cmpgei	zero,zero,20556
  1412c8:	00141308 	cmpgei	zero,zero,20556
  1412cc:	0014143c 	xorhi	zero,zero,20560
  1412d0:	98004f1e 	bne	r19,zero,141410 <__divsf3+0x254>
  1412d4:	280cd5fa 	srli	r6,r5,23
  1412d8:	282ad7fa 	srli	r21,r5,31
  1412dc:	04002034 	movhi	r16,128
  1412e0:	843fffc4 	addi	r16,r16,-1
  1412e4:	31803fcc 	andi	r6,r6,255
  1412e8:	05800204 	movi	r22,8
  1412ec:	05c00084 	movi	r23,2
  1412f0:	8160703a 	and	r16,r16,r5
  1412f4:	aa003fcc 	andi	r8,r21,255
  1412f8:	303fd21e 	bne	r6,zero,141244 <__divsf3+0x88>
  1412fc:	80002f1e 	bne	r16,zero,1413bc <__divsf3+0x200>
  141300:	00c00044 	movi	r3,1
  141304:	003fd506 	br	14125c <__divsf3+0xa0>
  141308:	9821883a 	mov	r16,r19
  14130c:	e011883a 	mov	r8,fp
  141310:	b807883a 	mov	r3,r23
  141314:	00800084 	movi	r2,2
  141318:	18800826 	beq	r3,r2,14133c <__divsf3+0x180>
  14131c:	008000c4 	movi	r2,3
  141320:	1880a226 	beq	r3,r2,1415ac <__divsf3+0x3f0>
  141324:	00800044 	movi	r2,1
  141328:	1880881e 	bne	r3,r2,14154c <__divsf3+0x390>
  14132c:	400f883a 	mov	r7,r8
  141330:	000d883a 	mov	r6,zero
  141334:	0027883a 	mov	r19,zero
  141338:	00000406 	br	14134c <__divsf3+0x190>
  14133c:	4013883a 	mov	r9,r8
  141340:	49c0004c 	andi	r7,r9,1
  141344:	01bfffc4 	movi	r6,-1
  141348:	0027883a 	mov	r19,zero
  14134c:	31803fcc 	andi	r6,r6,255
  141350:	300c95fa 	slli	r6,r6,23
  141354:	39c03fcc 	andi	r7,r7,255
  141358:	380e97fa 	slli	r7,r7,31
  14135c:	00802034 	movhi	r2,128
  141360:	10bfffc4 	addi	r2,r2,-1
  141364:	9884703a 	and	r2,r19,r2
  141368:	1184b03a 	or	r2,r2,r6
  14136c:	11c4b03a 	or	r2,r2,r7
  141370:	dfc00a17 	ldw	ra,40(sp)
  141374:	df000917 	ldw	fp,36(sp)
  141378:	ddc00817 	ldw	r23,32(sp)
  14137c:	dd800717 	ldw	r22,28(sp)
  141380:	dd400617 	ldw	r21,24(sp)
  141384:	dd000517 	ldw	r20,20(sp)
  141388:	dcc00417 	ldw	r19,16(sp)
  14138c:	dc800317 	ldw	r18,12(sp)
  141390:	dc400217 	ldw	r17,8(sp)
  141394:	dc000117 	ldw	r16,4(sp)
  141398:	dec00b04 	addi	sp,sp,44
  14139c:	f800283a 	ret
  1413a0:	9800101e 	bne	r19,zero,1413e4 <__divsf3+0x228>
  1413a4:	05800104 	movi	r22,4
  1413a8:	05c00044 	movi	r23,1
  1413ac:	003f9d06 	br	141224 <__divsf3+0x68>
  1413b0:	8006c03a 	cmpne	r3,r16,zero
  1413b4:	18c00084 	addi	r3,r3,2
  1413b8:	003fa806 	br	14125c <__divsf3+0xa0>
  1413bc:	8009883a 	mov	r4,r16
  1413c0:	da000015 	stw	r8,0(sp)
  1413c4:	01421980 	call	142198 <__clzsi2>
  1413c8:	10fffec4 	addi	r3,r2,-5
  1413cc:	01bfe284 	movi	r6,-118
  1413d0:	80e0983a 	sll	r16,r16,r3
  1413d4:	308dc83a 	sub	r6,r6,r2
  1413d8:	0007883a 	mov	r3,zero
  1413dc:	da000017 	ldw	r8,0(sp)
  1413e0:	003f9e06 	br	14125c <__divsf3+0xa0>
  1413e4:	9809883a 	mov	r4,r19
  1413e8:	d9400015 	stw	r5,0(sp)
  1413ec:	01421980 	call	142198 <__clzsi2>
  1413f0:	10fffec4 	addi	r3,r2,-5
  1413f4:	047fe284 	movi	r17,-118
  1413f8:	98e6983a 	sll	r19,r19,r3
  1413fc:	88a3c83a 	sub	r17,r17,r2
  141400:	002d883a 	mov	r22,zero
  141404:	002f883a 	mov	r23,zero
  141408:	d9400017 	ldw	r5,0(sp)
  14140c:	003f8506 	br	141224 <__divsf3+0x68>
  141410:	05800304 	movi	r22,12
  141414:	05c000c4 	movi	r23,3
  141418:	003f8206 	br	141224 <__divsf3+0x68>
  14141c:	000f883a 	mov	r7,zero
  141420:	04c02034 	movhi	r19,128
  141424:	9cffffc4 	addi	r19,r19,-1
  141428:	01bfffc4 	movi	r6,-1
  14142c:	003fc706 	br	14134c <__divsf3+0x190>
  141430:	000d883a 	mov	r6,zero
  141434:	0027883a 	mov	r19,zero
  141438:	003fc406 	br	14134c <__divsf3+0x190>
  14143c:	9880102c 	andhi	r2,r19,64
  141440:	10002f26 	beq	r2,zero,141500 <__divsf3+0x344>
  141444:	8080102c 	andhi	r2,r16,64
  141448:	10002d1e 	bne	r2,zero,141500 <__divsf3+0x344>
  14144c:	84c01034 	orhi	r19,r16,64
  141450:	00802034 	movhi	r2,128
  141454:	10bfffc4 	addi	r2,r2,-1
  141458:	98a6703a 	and	r19,r19,r2
  14145c:	a80f883a 	mov	r7,r21
  141460:	01bfffc4 	movi	r6,-1
  141464:	003fb906 	br	14134c <__divsf3+0x190>
  141468:	9806917a 	slli	r3,r19,5
  14146c:	8020917a 	slli	r16,r16,5
  141470:	89a5c83a 	sub	r18,r17,r6
  141474:	1c002936 	bltu	r3,r16,14151c <__divsf3+0x360>
  141478:	1c07c83a 	sub	r3,r3,r16
  14147c:	01000684 	movi	r4,26
  141480:	00800044 	movi	r2,1
  141484:	180d883a 	mov	r6,r3
  141488:	1085883a 	add	r2,r2,r2
  14148c:	18c7883a 	add	r3,r3,r3
  141490:	30000116 	blt	r6,zero,141498 <__divsf3+0x2dc>
  141494:	1c000236 	bltu	r3,r16,1414a0 <__divsf3+0x2e4>
  141498:	1c07c83a 	sub	r3,r3,r16
  14149c:	10800054 	ori	r2,r2,1
  1414a0:	213fffc4 	addi	r4,r4,-1
  1414a4:	013ff716 	blt	zero,r4,141484 <__divsf3+0x2c8>
  1414a8:	1806c03a 	cmpne	r3,r3,zero
  1414ac:	18a0b03a 	or	r16,r3,r2
  1414b0:	91801fc4 	addi	r6,r18,127
  1414b4:	01801d0e 	bge	zero,r6,14152c <__divsf3+0x370>
  1414b8:	808001cc 	andi	r2,r16,7
  1414bc:	10000426 	beq	r2,zero,1414d0 <__divsf3+0x314>
  1414c0:	80c003cc 	andi	r3,r16,15
  1414c4:	00800104 	movi	r2,4
  1414c8:	18800126 	beq	r3,r2,1414d0 <__divsf3+0x314>
  1414cc:	80a1883a 	add	r16,r16,r2
  1414d0:	8082002c 	andhi	r2,r16,2048
  1414d4:	10000426 	beq	r2,zero,1414e8 <__divsf3+0x32c>
  1414d8:	00be0034 	movhi	r2,63488
  1414dc:	10bfffc4 	addi	r2,r2,-1
  1414e0:	80a0703a 	and	r16,r16,r2
  1414e4:	91802004 	addi	r6,r18,128
  1414e8:	00803f84 	movi	r2,254
  1414ec:	11bf9416 	blt	r2,r6,141340 <__divsf3+0x184>
  1414f0:	802091ba 	slli	r16,r16,6
  1414f4:	49c0004c 	andi	r7,r9,1
  1414f8:	8026d27a 	srli	r19,r16,9
  1414fc:	003f9306 	br	14134c <__divsf3+0x190>
  141500:	9cc01034 	orhi	r19,r19,64
  141504:	00802034 	movhi	r2,128
  141508:	10bfffc4 	addi	r2,r2,-1
  14150c:	98a6703a 	and	r19,r19,r2
  141510:	a00f883a 	mov	r7,r20
  141514:	01bfffc4 	movi	r6,-1
  141518:	003f8c06 	br	14134c <__divsf3+0x190>
  14151c:	94bfffc4 	addi	r18,r18,-1
  141520:	010006c4 	movi	r4,27
  141524:	0005883a 	mov	r2,zero
  141528:	003fd606 	br	141484 <__divsf3+0x2c8>
  14152c:	00bfe084 	movi	r2,-126
  141530:	1485c83a 	sub	r2,r2,r18
  141534:	00c006c4 	movi	r3,27
  141538:	1880060e 	bge	r3,r2,141554 <__divsf3+0x398>
  14153c:	49c0004c 	andi	r7,r9,1
  141540:	000d883a 	mov	r6,zero
  141544:	0027883a 	mov	r19,zero
  141548:	003f8006 	br	14134c <__divsf3+0x190>
  14154c:	4013883a 	mov	r9,r8
  141550:	003fd706 	br	1414b0 <__divsf3+0x2f4>
  141554:	90c02784 	addi	r3,r18,158
  141558:	80c6983a 	sll	r3,r16,r3
  14155c:	8084d83a 	srl	r2,r16,r2
  141560:	1806c03a 	cmpne	r3,r3,zero
  141564:	1884b03a 	or	r2,r3,r2
  141568:	10c001cc 	andi	r3,r2,7
  14156c:	18000426 	beq	r3,zero,141580 <__divsf3+0x3c4>
  141570:	110003cc 	andi	r4,r2,15
  141574:	00c00104 	movi	r3,4
  141578:	20c00126 	beq	r4,r3,141580 <__divsf3+0x3c4>
  14157c:	10c5883a 	add	r2,r2,r3
  141580:	10c1002c 	andhi	r3,r2,1024
  141584:	18000426 	beq	r3,zero,141598 <__divsf3+0x3dc>
  141588:	49c0004c 	andi	r7,r9,1
  14158c:	01800044 	movi	r6,1
  141590:	0027883a 	mov	r19,zero
  141594:	003f6d06 	br	14134c <__divsf3+0x190>
  141598:	100491ba 	slli	r2,r2,6
  14159c:	49c0004c 	andi	r7,r9,1
  1415a0:	000d883a 	mov	r6,zero
  1415a4:	1026d27a 	srli	r19,r2,9
  1415a8:	003f6806 	br	14134c <__divsf3+0x190>
  1415ac:	84c01034 	orhi	r19,r16,64
  1415b0:	00802034 	movhi	r2,128
  1415b4:	10bfffc4 	addi	r2,r2,-1
  1415b8:	98a6703a 	and	r19,r19,r2
  1415bc:	400f883a 	mov	r7,r8
  1415c0:	01bfffc4 	movi	r6,-1
  1415c4:	003f6106 	br	14134c <__divsf3+0x190>

001415c8 <__mulsf3>:
  1415c8:	defff404 	addi	sp,sp,-48
  1415cc:	dc800415 	stw	r18,16(sp)
  1415d0:	2024d5fa 	srli	r18,r4,23
  1415d4:	dc400315 	stw	r17,12(sp)
  1415d8:	2022d7fa 	srli	r17,r4,31
  1415dc:	dd800815 	stw	r22,32(sp)
  1415e0:	dd400715 	stw	r21,28(sp)
  1415e4:	dc000215 	stw	r16,8(sp)
  1415e8:	dfc00b15 	stw	ra,44(sp)
  1415ec:	04002034 	movhi	r16,128
  1415f0:	843fffc4 	addi	r16,r16,-1
  1415f4:	df000a15 	stw	fp,40(sp)
  1415f8:	ddc00915 	stw	r23,36(sp)
  1415fc:	dd000615 	stw	r20,24(sp)
  141600:	dcc00515 	stw	r19,20(sp)
  141604:	94803fcc 	andi	r18,r18,255
  141608:	8120703a 	and	r16,r16,r4
  14160c:	882d883a 	mov	r22,r17
  141610:	8d403fcc 	andi	r21,r17,255
  141614:	90005b26 	beq	r18,zero,141784 <__mulsf3+0x1bc>
  141618:	00803fc4 	movi	r2,255
  14161c:	90802c26 	beq	r18,r2,1416d0 <__mulsf3+0x108>
  141620:	84002034 	orhi	r16,r16,128
  141624:	802090fa 	slli	r16,r16,3
  141628:	94bfe044 	addi	r18,r18,-127
  14162c:	0039883a 	mov	fp,zero
  141630:	002f883a 	mov	r23,zero
  141634:	2804d5fa 	srli	r2,r5,23
  141638:	2828d7fa 	srli	r20,r5,31
  14163c:	04c02034 	movhi	r19,128
  141640:	9cffffc4 	addi	r19,r19,-1
  141644:	10803fcc 	andi	r2,r2,255
  141648:	9966703a 	and	r19,r19,r5
  14164c:	a1c03fcc 	andi	r7,r20,255
  141650:	10002a26 	beq	r2,zero,1416fc <__mulsf3+0x134>
  141654:	00c03fc4 	movi	r3,255
  141658:	10c04e26 	beq	r2,r3,141794 <__mulsf3+0x1cc>
  14165c:	9cc02034 	orhi	r19,r19,128
  141660:	982690fa 	slli	r19,r19,3
  141664:	10bfe044 	addi	r2,r2,-127
  141668:	0009883a 	mov	r4,zero
  14166c:	2706b03a 	or	r3,r4,fp
  141670:	18c7883a 	add	r3,r3,r3
  141674:	18c7883a 	add	r3,r3,r3
  141678:	01400534 	movhi	r5,20
  14167c:	2945a404 	addi	r5,r5,5776
  141680:	1947883a 	add	r3,r3,r5
  141684:	18c00017 	ldw	r3,0(r3)
  141688:	a462f03a 	xor	r17,r20,r17
  14168c:	1800683a 	jmp	r3
  141690:	00141840 	call	14184 <__alt_mem_onchip_memory2-0x12be7c>
  141694:	00141834 	movhi	zero,20576
  141698:	00141834 	movhi	zero,20576
  14169c:	00141824 	muli	zero,zero,20576
  1416a0:	0014170c 	andi	zero,zero,20572
  1416a4:	0014170c 	andi	zero,zero,20572
  1416a8:	00141810 	cmplti	zero,zero,20576
  1416ac:	00141824 	muli	zero,zero,20576
  1416b0:	0014170c 	andi	zero,zero,20572
  1416b4:	00141810 	cmplti	zero,zero,20576
  1416b8:	0014170c 	andi	zero,zero,20572
  1416bc:	00141824 	muli	zero,zero,20576
  1416c0:	00141708 	cmpgei	zero,zero,20572
  1416c4:	00141708 	cmpgei	zero,zero,20572
  1416c8:	00141708 	cmpgei	zero,zero,20572
  1416cc:	00141924 	muli	zero,zero,20580
  1416d0:	8000371e 	bne	r16,zero,1417b0 <__mulsf3+0x1e8>
  1416d4:	2804d5fa 	srli	r2,r5,23
  1416d8:	2828d7fa 	srli	r20,r5,31
  1416dc:	04c02034 	movhi	r19,128
  1416e0:	9cffffc4 	addi	r19,r19,-1
  1416e4:	10803fcc 	andi	r2,r2,255
  1416e8:	07000204 	movi	fp,8
  1416ec:	05c00084 	movi	r23,2
  1416f0:	9966703a 	and	r19,r19,r5
  1416f4:	a1c03fcc 	andi	r7,r20,255
  1416f8:	103fd61e 	bne	r2,zero,141654 <__mulsf3+0x8c>
  1416fc:	98003a1e 	bne	r19,zero,1417e8 <__mulsf3+0x220>
  141700:	01000044 	movi	r4,1
  141704:	003fd906 	br	14166c <__mulsf3+0xa4>
  141708:	a823883a 	mov	r17,r21
  14170c:	00800084 	movi	r2,2
  141710:	b8802326 	beq	r23,r2,1417a0 <__mulsf3+0x1d8>
  141714:	008000c4 	movi	r2,3
  141718:	b880af26 	beq	r23,r2,1419d8 <__mulsf3+0x410>
  14171c:	00800044 	movi	r2,1
  141720:	b8806a1e 	bne	r23,r2,1418cc <__mulsf3+0x304>
  141724:	882d883a 	mov	r22,r17
  141728:	0007883a 	mov	r3,zero
  14172c:	0021883a 	mov	r16,zero
  141730:	18c03fcc 	andi	r3,r3,255
  141734:	180695fa 	slli	r3,r3,23
  141738:	b5803fcc 	andi	r22,r22,255
  14173c:	b02c97fa 	slli	r22,r22,31
  141740:	00802034 	movhi	r2,128
  141744:	10bfffc4 	addi	r2,r2,-1
  141748:	80a0703a 	and	r16,r16,r2
  14174c:	80c4b03a 	or	r2,r16,r3
  141750:	1584b03a 	or	r2,r2,r22
  141754:	dfc00b17 	ldw	ra,44(sp)
  141758:	df000a17 	ldw	fp,40(sp)
  14175c:	ddc00917 	ldw	r23,36(sp)
  141760:	dd800817 	ldw	r22,32(sp)
  141764:	dd400717 	ldw	r21,28(sp)
  141768:	dd000617 	ldw	r20,24(sp)
  14176c:	dcc00517 	ldw	r19,20(sp)
  141770:	dc800417 	ldw	r18,16(sp)
  141774:	dc400317 	ldw	r17,12(sp)
  141778:	dc000217 	ldw	r16,8(sp)
  14177c:	dec00c04 	addi	sp,sp,48
  141780:	f800283a 	ret
  141784:	80000d1e 	bne	r16,zero,1417bc <__mulsf3+0x1f4>
  141788:	07000104 	movi	fp,4
  14178c:	05c00044 	movi	r23,1
  141790:	003fa806 	br	141634 <__mulsf3+0x6c>
  141794:	9808c03a 	cmpne	r4,r19,zero
  141798:	21000084 	addi	r4,r4,2
  14179c:	003fb306 	br	14166c <__mulsf3+0xa4>
  1417a0:	882d883a 	mov	r22,r17
  1417a4:	00ffffc4 	movi	r3,-1
  1417a8:	0021883a 	mov	r16,zero
  1417ac:	003fe006 	br	141730 <__mulsf3+0x168>
  1417b0:	07000304 	movi	fp,12
  1417b4:	05c000c4 	movi	r23,3
  1417b8:	003f9e06 	br	141634 <__mulsf3+0x6c>
  1417bc:	8009883a 	mov	r4,r16
  1417c0:	d9400115 	stw	r5,4(sp)
  1417c4:	01421980 	call	142198 <__clzsi2>
  1417c8:	10fffec4 	addi	r3,r2,-5
  1417cc:	04bfe284 	movi	r18,-118
  1417d0:	80e0983a 	sll	r16,r16,r3
  1417d4:	90a5c83a 	sub	r18,r18,r2
  1417d8:	0039883a 	mov	fp,zero
  1417dc:	002f883a 	mov	r23,zero
  1417e0:	d9400117 	ldw	r5,4(sp)
  1417e4:	003f9306 	br	141634 <__mulsf3+0x6c>
  1417e8:	9809883a 	mov	r4,r19
  1417ec:	d9c00115 	stw	r7,4(sp)
  1417f0:	01421980 	call	142198 <__clzsi2>
  1417f4:	10fffec4 	addi	r3,r2,-5
  1417f8:	98e6983a 	sll	r19,r19,r3
  1417fc:	00ffe284 	movi	r3,-118
  141800:	1885c83a 	sub	r2,r3,r2
  141804:	0009883a 	mov	r4,zero
  141808:	d9c00117 	ldw	r7,4(sp)
  14180c:	003f9706 	br	14166c <__mulsf3+0xa4>
  141810:	002d883a 	mov	r22,zero
  141814:	04002034 	movhi	r16,128
  141818:	843fffc4 	addi	r16,r16,-1
  14181c:	00ffffc4 	movi	r3,-1
  141820:	003fc306 	br	141730 <__mulsf3+0x168>
  141824:	9821883a 	mov	r16,r19
  141828:	3823883a 	mov	r17,r7
  14182c:	202f883a 	mov	r23,r4
  141830:	003fb606 	br	14170c <__mulsf3+0x144>
  141834:	9821883a 	mov	r16,r19
  141838:	202f883a 	mov	r23,r4
  14183c:	003fb306 	br	14170c <__mulsf3+0x144>
  141840:	8006d43a 	srli	r3,r16,16
  141844:	980cd43a 	srli	r6,r19,16
  141848:	843fffcc 	andi	r16,r16,65535
  14184c:	9cffffcc 	andi	r19,r19,65535
  141850:	9c09383a 	mul	r4,r19,r16
  141854:	3421383a 	mul	r16,r6,r16
  141858:	98e7383a 	mul	r19,r19,r3
  14185c:	200ad43a 	srli	r5,r4,16
  141860:	9085883a 	add	r2,r18,r2
  141864:	d8800015 	stw	r2,0(sp)
  141868:	9c05883a 	add	r2,r19,r16
  14186c:	1145883a 	add	r2,r2,r5
  141870:	30cd383a 	mul	r6,r6,r3
  141874:	14c0022e 	bgeu	r2,r19,141880 <__mulsf3+0x2b8>
  141878:	00c00074 	movhi	r3,1
  14187c:	30cd883a 	add	r6,r6,r3
  141880:	1006943a 	slli	r3,r2,16
  141884:	213fffcc 	andi	r4,r4,65535
  141888:	1004d43a 	srli	r2,r2,16
  14188c:	1907883a 	add	r3,r3,r4
  141890:	182091ba 	slli	r16,r3,6
  141894:	308d883a 	add	r6,r6,r2
  141898:	1806d6ba 	srli	r3,r3,26
  14189c:	300c91ba 	slli	r6,r6,6
  1418a0:	8020c03a 	cmpne	r16,r16,zero
  1418a4:	80e0b03a 	or	r16,r16,r3
  1418a8:	81a0b03a 	or	r16,r16,r6
  1418ac:	8082002c 	andhi	r2,r16,2048
  1418b0:	10000626 	beq	r2,zero,1418cc <__mulsf3+0x304>
  1418b4:	d8c00017 	ldw	r3,0(sp)
  1418b8:	8004d07a 	srli	r2,r16,1
  1418bc:	8400004c 	andi	r16,r16,1
  1418c0:	18c00044 	addi	r3,r3,1
  1418c4:	d8c00015 	stw	r3,0(sp)
  1418c8:	80a0b03a 	or	r16,r16,r2
  1418cc:	d8800017 	ldw	r2,0(sp)
  1418d0:	10c01fc4 	addi	r3,r2,127
  1418d4:	00c0240e 	bge	zero,r3,141968 <__mulsf3+0x3a0>
  1418d8:	808001cc 	andi	r2,r16,7
  1418dc:	10000426 	beq	r2,zero,1418f0 <__mulsf3+0x328>
  1418e0:	810003cc 	andi	r4,r16,15
  1418e4:	00800104 	movi	r2,4
  1418e8:	20800126 	beq	r4,r2,1418f0 <__mulsf3+0x328>
  1418ec:	80a1883a 	add	r16,r16,r2
  1418f0:	8082002c 	andhi	r2,r16,2048
  1418f4:	10000526 	beq	r2,zero,14190c <__mulsf3+0x344>
  1418f8:	00be0034 	movhi	r2,63488
  1418fc:	10bfffc4 	addi	r2,r2,-1
  141900:	80a0703a 	and	r16,r16,r2
  141904:	d8800017 	ldw	r2,0(sp)
  141908:	10c02004 	addi	r3,r2,128
  14190c:	00803f84 	movi	r2,254
  141910:	10ffa316 	blt	r2,r3,1417a0 <__mulsf3+0x1d8>
  141914:	802091ba 	slli	r16,r16,6
  141918:	882d883a 	mov	r22,r17
  14191c:	8020d27a 	srli	r16,r16,9
  141920:	003f8306 	br	141730 <__mulsf3+0x168>
  141924:	8080102c 	andhi	r2,r16,64
  141928:	10000926 	beq	r2,zero,141950 <__mulsf3+0x388>
  14192c:	9880102c 	andhi	r2,r19,64
  141930:	1000071e 	bne	r2,zero,141950 <__mulsf3+0x388>
  141934:	9c001034 	orhi	r16,r19,64
  141938:	00802034 	movhi	r2,128
  14193c:	10bfffc4 	addi	r2,r2,-1
  141940:	80a0703a 	and	r16,r16,r2
  141944:	a02d883a 	mov	r22,r20
  141948:	00ffffc4 	movi	r3,-1
  14194c:	003f7806 	br	141730 <__mulsf3+0x168>
  141950:	84001034 	orhi	r16,r16,64
  141954:	00802034 	movhi	r2,128
  141958:	10bfffc4 	addi	r2,r2,-1
  14195c:	80a0703a 	and	r16,r16,r2
  141960:	00ffffc4 	movi	r3,-1
  141964:	003f7206 	br	141730 <__mulsf3+0x168>
  141968:	d8c00017 	ldw	r3,0(sp)
  14196c:	00bfe084 	movi	r2,-126
  141970:	10c5c83a 	sub	r2,r2,r3
  141974:	00c006c4 	movi	r3,27
  141978:	18bf6a16 	blt	r3,r2,141724 <__mulsf3+0x15c>
  14197c:	d8c00017 	ldw	r3,0(sp)
  141980:	1d402784 	addi	r21,r3,158
  141984:	856a983a 	sll	r21,r16,r21
  141988:	80a0d83a 	srl	r16,r16,r2
  14198c:	a804c03a 	cmpne	r2,r21,zero
  141990:	1404b03a 	or	r2,r2,r16
  141994:	10c001cc 	andi	r3,r2,7
  141998:	18000426 	beq	r3,zero,1419ac <__mulsf3+0x3e4>
  14199c:	110003cc 	andi	r4,r2,15
  1419a0:	00c00104 	movi	r3,4
  1419a4:	20c00126 	beq	r4,r3,1419ac <__mulsf3+0x3e4>
  1419a8:	10c5883a 	add	r2,r2,r3
  1419ac:	10c1002c 	andhi	r3,r2,1024
  1419b0:	18000426 	beq	r3,zero,1419c4 <__mulsf3+0x3fc>
  1419b4:	882d883a 	mov	r22,r17
  1419b8:	00c00044 	movi	r3,1
  1419bc:	0021883a 	mov	r16,zero
  1419c0:	003f5b06 	br	141730 <__mulsf3+0x168>
  1419c4:	100491ba 	slli	r2,r2,6
  1419c8:	882d883a 	mov	r22,r17
  1419cc:	0007883a 	mov	r3,zero
  1419d0:	1020d27a 	srli	r16,r2,9
  1419d4:	003f5606 	br	141730 <__mulsf3+0x168>
  1419d8:	84001034 	orhi	r16,r16,64
  1419dc:	00802034 	movhi	r2,128
  1419e0:	10bfffc4 	addi	r2,r2,-1
  1419e4:	80a0703a 	and	r16,r16,r2
  1419e8:	882d883a 	mov	r22,r17
  1419ec:	00ffffc4 	movi	r3,-1
  1419f0:	003f4f06 	br	141730 <__mulsf3+0x168>

001419f4 <__subsf3>:
  1419f4:	defffc04 	addi	sp,sp,-16
  1419f8:	280cd5fa 	srli	r6,r5,23
  1419fc:	dc400115 	stw	r17,4(sp)
  141a00:	dc000015 	stw	r16,0(sp)
  141a04:	2022d7fa 	srli	r17,r4,31
  141a08:	2020d5fa 	srli	r16,r4,23
  141a0c:	00802034 	movhi	r2,128
  141a10:	10bfffc4 	addi	r2,r2,-1
  141a14:	1106703a 	and	r3,r2,r4
  141a18:	dfc00315 	stw	ra,12(sp)
  141a1c:	1144703a 	and	r2,r2,r5
  141a20:	dc800215 	stw	r18,8(sp)
  141a24:	31803fcc 	andi	r6,r6,255
  141a28:	01003fc4 	movi	r4,255
  141a2c:	880f883a 	mov	r7,r17
  141a30:	84003fcc 	andi	r16,r16,255
  141a34:	8c403fcc 	andi	r17,r17,255
  141a38:	180690fa 	slli	r3,r3,3
  141a3c:	280ad7fa 	srli	r5,r5,31
  141a40:	100490fa 	slli	r2,r2,3
  141a44:	31002326 	beq	r6,r4,141ad4 <__subsf3+0xe0>
  141a48:	2940005c 	xori	r5,r5,1
  141a4c:	8189c83a 	sub	r4,r16,r6
  141a50:	89402426 	beq	r17,r5,141ae4 <__subsf3+0xf0>
  141a54:	0100750e 	bge	zero,r4,141c2c <__subsf3+0x238>
  141a58:	30003c1e 	bne	r6,zero,141b4c <__subsf3+0x158>
  141a5c:	1000681e 	bne	r2,zero,141c00 <__subsf3+0x20c>
  141a60:	188001cc 	andi	r2,r3,7
  141a64:	10000426 	beq	r2,zero,141a78 <__subsf3+0x84>
  141a68:	190003cc 	andi	r4,r3,15
  141a6c:	00800104 	movi	r2,4
  141a70:	20800126 	beq	r4,r2,141a78 <__subsf3+0x84>
  141a74:	18c00104 	addi	r3,r3,4
  141a78:	1881002c 	andhi	r2,r3,1024
  141a7c:	89c0004c 	andi	r7,r17,1
  141a80:	10005626 	beq	r2,zero,141bdc <__subsf3+0x1e8>
  141a84:	84000044 	addi	r16,r16,1
  141a88:	00803fc4 	movi	r2,255
  141a8c:	80807226 	beq	r16,r2,141c58 <__subsf3+0x264>
  141a90:	180691ba 	slli	r3,r3,6
  141a94:	1806d27a 	srli	r3,r3,9
  141a98:	84003fcc 	andi	r16,r16,255
  141a9c:	802095fa 	slli	r16,r16,23
  141aa0:	39c03fcc 	andi	r7,r7,255
  141aa4:	380e97fa 	slli	r7,r7,31
  141aa8:	00802034 	movhi	r2,128
  141aac:	10bfffc4 	addi	r2,r2,-1
  141ab0:	1884703a 	and	r2,r3,r2
  141ab4:	1404b03a 	or	r2,r2,r16
  141ab8:	11c4b03a 	or	r2,r2,r7
  141abc:	dfc00317 	ldw	ra,12(sp)
  141ac0:	dc800217 	ldw	r18,8(sp)
  141ac4:	dc400117 	ldw	r17,4(sp)
  141ac8:	dc000017 	ldw	r16,0(sp)
  141acc:	dec00404 	addi	sp,sp,16
  141ad0:	f800283a 	ret
  141ad4:	103fdc26 	beq	r2,zero,141a48 <__subsf3+0x54>
  141ad8:	29403fcc 	andi	r5,r5,255
  141adc:	8189c83a 	sub	r4,r16,r6
  141ae0:	897fdc1e 	bne	r17,r5,141a54 <__subsf3+0x60>
  141ae4:	0100630e 	bge	zero,r4,141c74 <__subsf3+0x280>
  141ae8:	30004a26 	beq	r6,zero,141c14 <__subsf3+0x220>
  141aec:	01403fc4 	movi	r5,255
  141af0:	817fdb26 	beq	r16,r5,141a60 <__subsf3+0x6c>
  141af4:	10810034 	orhi	r2,r2,1024
  141af8:	014006c4 	movi	r5,27
  141afc:	2900ed16 	blt	r5,r4,141eb4 <__subsf3+0x4c0>
  141b00:	01400804 	movi	r5,32
  141b04:	290bc83a 	sub	r5,r5,r4
  141b08:	114a983a 	sll	r5,r2,r5
  141b0c:	1108d83a 	srl	r4,r2,r4
  141b10:	2804c03a 	cmpne	r2,r5,zero
  141b14:	1104b03a 	or	r2,r2,r4
  141b18:	1887883a 	add	r3,r3,r2
  141b1c:	1881002c 	andhi	r2,r3,1024
  141b20:	103fcf26 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141b24:	84000044 	addi	r16,r16,1
  141b28:	00803fc4 	movi	r2,255
  141b2c:	80807726 	beq	r16,r2,141d0c <__subsf3+0x318>
  141b30:	00bf0034 	movhi	r2,64512
  141b34:	10bfffc4 	addi	r2,r2,-1
  141b38:	1884703a 	and	r2,r3,r2
  141b3c:	1004d07a 	srli	r2,r2,1
  141b40:	18c0004c 	andi	r3,r3,1
  141b44:	10c6b03a 	or	r3,r2,r3
  141b48:	003fc506 	br	141a60 <__subsf3+0x6c>
  141b4c:	01403fc4 	movi	r5,255
  141b50:	817fc326 	beq	r16,r5,141a60 <__subsf3+0x6c>
  141b54:	10810034 	orhi	r2,r2,1024
  141b58:	014006c4 	movi	r5,27
  141b5c:	2900d316 	blt	r5,r4,141eac <__subsf3+0x4b8>
  141b60:	01400804 	movi	r5,32
  141b64:	290bc83a 	sub	r5,r5,r4
  141b68:	114a983a 	sll	r5,r2,r5
  141b6c:	1108d83a 	srl	r4,r2,r4
  141b70:	2804c03a 	cmpne	r2,r5,zero
  141b74:	1104b03a 	or	r2,r2,r4
  141b78:	1887c83a 	sub	r3,r3,r2
  141b7c:	1881002c 	andhi	r2,r3,1024
  141b80:	103fb726 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141b84:	04810034 	movhi	r18,1024
  141b88:	94bfffc4 	addi	r18,r18,-1
  141b8c:	1ca4703a 	and	r18,r3,r18
  141b90:	9009883a 	mov	r4,r18
  141b94:	01421980 	call	142198 <__clzsi2>
  141b98:	10bffec4 	addi	r2,r2,-5
  141b9c:	90a4983a 	sll	r18,r18,r2
  141ba0:	14002f16 	blt	r2,r16,141c60 <__subsf3+0x26c>
  141ba4:	1421c83a 	sub	r16,r2,r16
  141ba8:	00c007c4 	movi	r3,31
  141bac:	1c07c83a 	sub	r3,r3,r16
  141bb0:	90c6983a 	sll	r3,r18,r3
  141bb4:	84000044 	addi	r16,r16,1
  141bb8:	9424d83a 	srl	r18,r18,r16
  141bbc:	1806c03a 	cmpne	r3,r3,zero
  141bc0:	0021883a 	mov	r16,zero
  141bc4:	1c86b03a 	or	r3,r3,r18
  141bc8:	003fa506 	br	141a60 <__subsf3+0x6c>
  141bcc:	000f883a 	mov	r7,zero
  141bd0:	00c10034 	movhi	r3,1024
  141bd4:	18fffe04 	addi	r3,r3,-8
  141bd8:	04003fc4 	movi	r16,255
  141bdc:	00803fc4 	movi	r2,255
  141be0:	1806d0fa 	srli	r3,r3,3
  141be4:	8080021e 	bne	r16,r2,141bf0 <__subsf3+0x1fc>
  141be8:	18001b26 	beq	r3,zero,141c58 <__subsf3+0x264>
  141bec:	18c01034 	orhi	r3,r3,64
  141bf0:	00802034 	movhi	r2,128
  141bf4:	10bfffc4 	addi	r2,r2,-1
  141bf8:	1886703a 	and	r3,r3,r2
  141bfc:	003fa606 	br	141a98 <__subsf3+0xa4>
  141c00:	213fffc4 	addi	r4,r4,-1
  141c04:	203fdc26 	beq	r4,zero,141b78 <__subsf3+0x184>
  141c08:	01403fc4 	movi	r5,255
  141c0c:	817fd21e 	bne	r16,r5,141b58 <__subsf3+0x164>
  141c10:	003f9306 	br	141a60 <__subsf3+0x6c>
  141c14:	103f9226 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141c18:	213fffc4 	addi	r4,r4,-1
  141c1c:	203fbe26 	beq	r4,zero,141b18 <__subsf3+0x124>
  141c20:	01403fc4 	movi	r5,255
  141c24:	817fb41e 	bne	r16,r5,141af8 <__subsf3+0x104>
  141c28:	003f8d06 	br	141a60 <__subsf3+0x6c>
  141c2c:	20001c1e 	bne	r4,zero,141ca0 <__subsf3+0x2ac>
  141c30:	81000044 	addi	r4,r16,1
  141c34:	21003fcc 	andi	r4,r4,255
  141c38:	01800044 	movi	r6,1
  141c3c:	3100400e 	bge	r6,r4,141d40 <__subsf3+0x34c>
  141c40:	18a5c83a 	sub	r18,r3,r2
  141c44:	9101002c 	andhi	r4,r18,1024
  141c48:	20002126 	beq	r4,zero,141cd0 <__subsf3+0x2dc>
  141c4c:	10e5c83a 	sub	r18,r2,r3
  141c50:	2823883a 	mov	r17,r5
  141c54:	003fce06 	br	141b90 <__subsf3+0x19c>
  141c58:	0007883a 	mov	r3,zero
  141c5c:	003f8e06 	br	141a98 <__subsf3+0xa4>
  141c60:	00ff0034 	movhi	r3,64512
  141c64:	18ffffc4 	addi	r3,r3,-1
  141c68:	80a1c83a 	sub	r16,r16,r2
  141c6c:	90c6703a 	and	r3,r18,r3
  141c70:	003f7b06 	br	141a60 <__subsf3+0x6c>
  141c74:	2000381e 	bne	r4,zero,141d58 <__subsf3+0x364>
  141c78:	81000044 	addi	r4,r16,1
  141c7c:	21803fcc 	andi	r6,r4,255
  141c80:	01400044 	movi	r5,1
  141c84:	2980230e 	bge	r5,r6,141d14 <__subsf3+0x320>
  141c88:	01403fc4 	movi	r5,255
  141c8c:	21401e26 	beq	r4,r5,141d08 <__subsf3+0x314>
  141c90:	10c7883a 	add	r3,r2,r3
  141c94:	1806d07a 	srli	r3,r3,1
  141c98:	2021883a 	mov	r16,r4
  141c9c:	003f7006 	br	141a60 <__subsf3+0x6c>
  141ca0:	80001026 	beq	r16,zero,141ce4 <__subsf3+0x2f0>
  141ca4:	01c03fc4 	movi	r7,255
  141ca8:	31c01326 	beq	r6,r7,141cf8 <__subsf3+0x304>
  141cac:	0109c83a 	sub	r4,zero,r4
  141cb0:	18c10034 	orhi	r3,r3,1024
  141cb4:	01c006c4 	movi	r7,27
  141cb8:	3900390e 	bge	r7,r4,141da0 <__subsf3+0x3ac>
  141cbc:	00c00044 	movi	r3,1
  141cc0:	10c7c83a 	sub	r3,r2,r3
  141cc4:	3021883a 	mov	r16,r6
  141cc8:	2823883a 	mov	r17,r5
  141ccc:	003fab06 	br	141b7c <__subsf3+0x188>
  141cd0:	903faf1e 	bne	r18,zero,141b90 <__subsf3+0x19c>
  141cd4:	0007883a 	mov	r3,zero
  141cd8:	000f883a 	mov	r7,zero
  141cdc:	0021883a 	mov	r16,zero
  141ce0:	003fbe06 	br	141bdc <__subsf3+0x1e8>
  141ce4:	18000426 	beq	r3,zero,141cf8 <__subsf3+0x304>
  141ce8:	0108303a 	nor	r4,zero,r4
  141cec:	203ff426 	beq	r4,zero,141cc0 <__subsf3+0x2cc>
  141cf0:	01c03fc4 	movi	r7,255
  141cf4:	31ffef1e 	bne	r6,r7,141cb4 <__subsf3+0x2c0>
  141cf8:	1007883a 	mov	r3,r2
  141cfc:	3021883a 	mov	r16,r6
  141d00:	2823883a 	mov	r17,r5
  141d04:	003f5606 	br	141a60 <__subsf3+0x6c>
  141d08:	2021883a 	mov	r16,r4
  141d0c:	0007883a 	mov	r3,zero
  141d10:	003fb206 	br	141bdc <__subsf3+0x1e8>
  141d14:	8000441e 	bne	r16,zero,141e28 <__subsf3+0x434>
  141d18:	18005926 	beq	r3,zero,141e80 <__subsf3+0x48c>
  141d1c:	103f5026 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141d20:	1887883a 	add	r3,r3,r2
  141d24:	1881002c 	andhi	r2,r3,1024
  141d28:	103f4d26 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141d2c:	00bf0034 	movhi	r2,64512
  141d30:	10bfffc4 	addi	r2,r2,-1
  141d34:	1886703a 	and	r3,r3,r2
  141d38:	2821883a 	mov	r16,r5
  141d3c:	003f4806 	br	141a60 <__subsf3+0x6c>
  141d40:	8000111e 	bne	r16,zero,141d88 <__subsf3+0x394>
  141d44:	1800221e 	bne	r3,zero,141dd0 <__subsf3+0x3dc>
  141d48:	10004326 	beq	r2,zero,141e58 <__subsf3+0x464>
  141d4c:	1007883a 	mov	r3,r2
  141d50:	2823883a 	mov	r17,r5
  141d54:	003f4206 	br	141a60 <__subsf3+0x6c>
  141d58:	8000181e 	bne	r16,zero,141dbc <__subsf3+0x3c8>
  141d5c:	18002f26 	beq	r3,zero,141e1c <__subsf3+0x428>
  141d60:	0108303a 	nor	r4,zero,r4
  141d64:	20000526 	beq	r4,zero,141d7c <__subsf3+0x388>
  141d68:	01403fc4 	movi	r5,255
  141d6c:	31402b26 	beq	r6,r5,141e1c <__subsf3+0x428>
  141d70:	014006c4 	movi	r5,27
  141d74:	29003b0e 	bge	r5,r4,141e64 <__subsf3+0x470>
  141d78:	00c00044 	movi	r3,1
  141d7c:	1887883a 	add	r3,r3,r2
  141d80:	3021883a 	mov	r16,r6
  141d84:	003f6506 	br	141b1c <__subsf3+0x128>
  141d88:	1800181e 	bne	r3,zero,141dec <__subsf3+0x3f8>
  141d8c:	103f8f26 	beq	r2,zero,141bcc <__subsf3+0x1d8>
  141d90:	1007883a 	mov	r3,r2
  141d94:	2823883a 	mov	r17,r5
  141d98:	04003fc4 	movi	r16,255
  141d9c:	003f3006 	br	141a60 <__subsf3+0x6c>
  141da0:	01c00804 	movi	r7,32
  141da4:	390fc83a 	sub	r7,r7,r4
  141da8:	19ce983a 	sll	r7,r3,r7
  141dac:	1906d83a 	srl	r3,r3,r4
  141db0:	3808c03a 	cmpne	r4,r7,zero
  141db4:	20c6b03a 	or	r3,r4,r3
  141db8:	003fc106 	br	141cc0 <__subsf3+0x2cc>
  141dbc:	01403fc4 	movi	r5,255
  141dc0:	31401626 	beq	r6,r5,141e1c <__subsf3+0x428>
  141dc4:	0109c83a 	sub	r4,zero,r4
  141dc8:	18c10034 	orhi	r3,r3,1024
  141dcc:	003fe806 	br	141d70 <__subsf3+0x37c>
  141dd0:	103f2326 	beq	r2,zero,141a60 <__subsf3+0x6c>
  141dd4:	1889c83a 	sub	r4,r3,r2
  141dd8:	2181002c 	andhi	r6,r4,1024
  141ddc:	30002d26 	beq	r6,zero,141e94 <__subsf3+0x4a0>
  141de0:	10c7c83a 	sub	r3,r2,r3
  141de4:	2823883a 	mov	r17,r5
  141de8:	003f1d06 	br	141a60 <__subsf3+0x6c>
  141dec:	10001826 	beq	r2,zero,141e50 <__subsf3+0x45c>
  141df0:	1806d0fa 	srli	r3,r3,3
  141df4:	1900102c 	andhi	r4,r3,64
  141df8:	20000526 	beq	r4,zero,141e10 <__subsf3+0x41c>
  141dfc:	1004d0fa 	srli	r2,r2,3
  141e00:	1100102c 	andhi	r4,r2,64
  141e04:	2000021e 	bne	r4,zero,141e10 <__subsf3+0x41c>
  141e08:	1007883a 	mov	r3,r2
  141e0c:	2823883a 	mov	r17,r5
  141e10:	180690fa 	slli	r3,r3,3
  141e14:	04003fc4 	movi	r16,255
  141e18:	003f1106 	br	141a60 <__subsf3+0x6c>
  141e1c:	1007883a 	mov	r3,r2
  141e20:	3021883a 	mov	r16,r6
  141e24:	003f0e06 	br	141a60 <__subsf3+0x6c>
  141e28:	18001726 	beq	r3,zero,141e88 <__subsf3+0x494>
  141e2c:	10000826 	beq	r2,zero,141e50 <__subsf3+0x45c>
  141e30:	1806d0fa 	srli	r3,r3,3
  141e34:	1900102c 	andhi	r4,r3,64
  141e38:	203ff526 	beq	r4,zero,141e10 <__subsf3+0x41c>
  141e3c:	1004d0fa 	srli	r2,r2,3
  141e40:	1100102c 	andhi	r4,r2,64
  141e44:	203ff21e 	bne	r4,zero,141e10 <__subsf3+0x41c>
  141e48:	1007883a 	mov	r3,r2
  141e4c:	003ff006 	br	141e10 <__subsf3+0x41c>
  141e50:	04003fc4 	movi	r16,255
  141e54:	003f0206 	br	141a60 <__subsf3+0x6c>
  141e58:	8007883a 	mov	r3,r16
  141e5c:	000f883a 	mov	r7,zero
  141e60:	003f5e06 	br	141bdc <__subsf3+0x1e8>
  141e64:	01400804 	movi	r5,32
  141e68:	290bc83a 	sub	r5,r5,r4
  141e6c:	194a983a 	sll	r5,r3,r5
  141e70:	1906d83a 	srl	r3,r3,r4
  141e74:	2808c03a 	cmpne	r4,r5,zero
  141e78:	20c6b03a 	or	r3,r4,r3
  141e7c:	003fbf06 	br	141d7c <__subsf3+0x388>
  141e80:	1007883a 	mov	r3,r2
  141e84:	003ef606 	br	141a60 <__subsf3+0x6c>
  141e88:	1007883a 	mov	r3,r2
  141e8c:	04003fc4 	movi	r16,255
  141e90:	003ef306 	br	141a60 <__subsf3+0x6c>
  141e94:	20000226 	beq	r4,zero,141ea0 <__subsf3+0x4ac>
  141e98:	2007883a 	mov	r3,r4
  141e9c:	003ef006 	br	141a60 <__subsf3+0x6c>
  141ea0:	0007883a 	mov	r3,zero
  141ea4:	000f883a 	mov	r7,zero
  141ea8:	003f4c06 	br	141bdc <__subsf3+0x1e8>
  141eac:	00800044 	movi	r2,1
  141eb0:	003f3106 	br	141b78 <__subsf3+0x184>
  141eb4:	00800044 	movi	r2,1
  141eb8:	003f1706 	br	141b18 <__subsf3+0x124>

00141ebc <__fixsfsi>:
  141ebc:	2006d5fa 	srli	r3,r4,23
  141ec0:	00802034 	movhi	r2,128
  141ec4:	10bfffc4 	addi	r2,r2,-1
  141ec8:	01401f84 	movi	r5,126
  141ecc:	18c03fcc 	andi	r3,r3,255
  141ed0:	1104703a 	and	r2,r2,r4
  141ed4:	2008d7fa 	srli	r4,r4,31
  141ed8:	28c00e0e 	bge	r5,r3,141f14 <__fixsfsi+0x58>
  141edc:	01402744 	movi	r5,157
  141ee0:	28c00816 	blt	r5,r3,141f04 <__fixsfsi+0x48>
  141ee4:	01402544 	movi	r5,149
  141ee8:	10802034 	orhi	r2,r2,128
  141eec:	28c00b0e 	bge	r5,r3,141f1c <__fixsfsi+0x60>
  141ef0:	18ffda84 	addi	r3,r3,-150
  141ef4:	10c4983a 	sll	r2,r2,r3
  141ef8:	20000726 	beq	r4,zero,141f18 <__fixsfsi+0x5c>
  141efc:	0085c83a 	sub	r2,zero,r2
  141f00:	f800283a 	ret
  141f04:	00a00034 	movhi	r2,32768
  141f08:	10bfffc4 	addi	r2,r2,-1
  141f0c:	2085883a 	add	r2,r4,r2
  141f10:	f800283a 	ret
  141f14:	0005883a 	mov	r2,zero
  141f18:	f800283a 	ret
  141f1c:	01402584 	movi	r5,150
  141f20:	28c7c83a 	sub	r3,r5,r3
  141f24:	10c4d83a 	srl	r2,r2,r3
  141f28:	003ff306 	br	141ef8 <__fixsfsi+0x3c>

00141f2c <__floatsisf>:
  141f2c:	defffd04 	addi	sp,sp,-12
  141f30:	dc000015 	stw	r16,0(sp)
  141f34:	dfc00215 	stw	ra,8(sp)
  141f38:	dc400115 	stw	r17,4(sp)
  141f3c:	2021883a 	mov	r16,r4
  141f40:	20003e26 	beq	r4,zero,14203c <__floatsisf+0x110>
  141f44:	2022d7fa 	srli	r17,r4,31
  141f48:	88000126 	beq	r17,zero,141f50 <__floatsisf+0x24>
  141f4c:	0121c83a 	sub	r16,zero,r4
  141f50:	8009883a 	mov	r4,r16
  141f54:	01421980 	call	142198 <__clzsi2>
  141f58:	01002784 	movi	r4,158
  141f5c:	2089c83a 	sub	r4,r4,r2
  141f60:	01402584 	movi	r5,150
  141f64:	8007883a 	mov	r3,r16
  141f68:	29001416 	blt	r5,r4,141fbc <__floatsisf+0x90>
  141f6c:	10bffe04 	addi	r2,r2,-8
  141f70:	80a0983a 	sll	r16,r16,r2
  141f74:	00802034 	movhi	r2,128
  141f78:	10bfffc4 	addi	r2,r2,-1
  141f7c:	8807883a 	mov	r3,r17
  141f80:	80a0703a 	and	r16,r16,r2
  141f84:	21003fcc 	andi	r4,r4,255
  141f88:	200895fa 	slli	r4,r4,23
  141f8c:	18c03fcc 	andi	r3,r3,255
  141f90:	180697fa 	slli	r3,r3,31
  141f94:	00802034 	movhi	r2,128
  141f98:	10bfffc4 	addi	r2,r2,-1
  141f9c:	80a0703a 	and	r16,r16,r2
  141fa0:	8104b03a 	or	r2,r16,r4
  141fa4:	10c4b03a 	or	r2,r2,r3
  141fa8:	dfc00217 	ldw	ra,8(sp)
  141fac:	dc400117 	ldw	r17,4(sp)
  141fb0:	dc000017 	ldw	r16,0(sp)
  141fb4:	dec00304 	addi	sp,sp,12
  141fb8:	f800283a 	ret
  141fbc:	01402644 	movi	r5,153
  141fc0:	2900070e 	bge	r5,r4,141fe0 <__floatsisf+0xb4>
  141fc4:	114006c4 	addi	r5,r2,27
  141fc8:	01800144 	movi	r6,5
  141fcc:	814a983a 	sll	r5,r16,r5
  141fd0:	308dc83a 	sub	r6,r6,r2
  141fd4:	8186d83a 	srl	r3,r16,r6
  141fd8:	280ac03a 	cmpne	r5,r5,zero
  141fdc:	28c6b03a 	or	r3,r5,r3
  141fe0:	01400144 	movi	r5,5
  141fe4:	2880020e 	bge	r5,r2,141ff0 <__floatsisf+0xc4>
  141fe8:	117ffec4 	addi	r5,r2,-5
  141fec:	1946983a 	sll	r3,r3,r5
  141ff0:	043f0034 	movhi	r16,64512
  141ff4:	843fffc4 	addi	r16,r16,-1
  141ff8:	194001cc 	andi	r5,r3,7
  141ffc:	1c20703a 	and	r16,r3,r16
  142000:	28000426 	beq	r5,zero,142014 <__floatsisf+0xe8>
  142004:	18c003cc 	andi	r3,r3,15
  142008:	01400104 	movi	r5,4
  14200c:	19400126 	beq	r3,r5,142014 <__floatsisf+0xe8>
  142010:	8161883a 	add	r16,r16,r5
  142014:	80c1002c 	andhi	r3,r16,1024
  142018:	18000c26 	beq	r3,zero,14204c <__floatsisf+0x120>
  14201c:	010027c4 	movi	r4,159
  142020:	2089c83a 	sub	r4,r4,r2
  142024:	00803fc4 	movi	r2,255
  142028:	20801826 	beq	r4,r2,14208c <__floatsisf+0x160>
  14202c:	802091ba 	slli	r16,r16,6
  142030:	8807883a 	mov	r3,r17
  142034:	8020d27a 	srli	r16,r16,9
  142038:	003fd206 	br	141f84 <__floatsisf+0x58>
  14203c:	0007883a 	mov	r3,zero
  142040:	0009883a 	mov	r4,zero
  142044:	0021883a 	mov	r16,zero
  142048:	003fce06 	br	141f84 <__floatsisf+0x58>
  14204c:	00803fc4 	movi	r2,255
  142050:	8020d0fa 	srli	r16,r16,3
  142054:	20800526 	beq	r4,r2,14206c <__floatsisf+0x140>
  142058:	00802034 	movhi	r2,128
  14205c:	10bfffc4 	addi	r2,r2,-1
  142060:	80a0703a 	and	r16,r16,r2
  142064:	8807883a 	mov	r3,r17
  142068:	003fc606 	br	141f84 <__floatsisf+0x58>
  14206c:	80000426 	beq	r16,zero,142080 <__floatsisf+0x154>
  142070:	84001034 	orhi	r16,r16,64
  142074:	00802034 	movhi	r2,128
  142078:	10bfffc4 	addi	r2,r2,-1
  14207c:	80a0703a 	and	r16,r16,r2
  142080:	8807883a 	mov	r3,r17
  142084:	013fffc4 	movi	r4,-1
  142088:	003fbe06 	br	141f84 <__floatsisf+0x58>
  14208c:	8807883a 	mov	r3,r17
  142090:	013fffc4 	movi	r4,-1
  142094:	0021883a 	mov	r16,zero
  142098:	003fba06 	br	141f84 <__floatsisf+0x58>

0014209c <__extendsfdf2>:
  14209c:	2004d5fa 	srli	r2,r4,23
  1420a0:	defffd04 	addi	sp,sp,-12
  1420a4:	dc000015 	stw	r16,0(sp)
  1420a8:	10803fcc 	andi	r2,r2,255
  1420ac:	10c00044 	addi	r3,r2,1
  1420b0:	04002034 	movhi	r16,128
  1420b4:	843fffc4 	addi	r16,r16,-1
  1420b8:	dc400115 	stw	r17,4(sp)
  1420bc:	8120703a 	and	r16,r16,r4
  1420c0:	2022d7fa 	srli	r17,r4,31
  1420c4:	dfc00215 	stw	ra,8(sp)
  1420c8:	18c03fcc 	andi	r3,r3,255
  1420cc:	01000044 	movi	r4,1
  1420d0:	20c00d0e 	bge	r4,r3,142108 <__extendsfdf2+0x6c>
  1420d4:	8006d0fa 	srli	r3,r16,3
  1420d8:	8020977a 	slli	r16,r16,29
  1420dc:	1100e004 	addi	r4,r2,896
  1420e0:	2008953a 	slli	r4,r4,20
  1420e4:	882297fa 	slli	r17,r17,31
  1420e8:	8005883a 	mov	r2,r16
  1420ec:	1906b03a 	or	r3,r3,r4
  1420f0:	1c46b03a 	or	r3,r3,r17
  1420f4:	dfc00217 	ldw	ra,8(sp)
  1420f8:	dc400117 	ldw	r17,4(sp)
  1420fc:	dc000017 	ldw	r16,0(sp)
  142100:	dec00304 	addi	sp,sp,12
  142104:	f800283a 	ret
  142108:	1000111e 	bne	r2,zero,142150 <__extendsfdf2+0xb4>
  14210c:	80001b26 	beq	r16,zero,14217c <__extendsfdf2+0xe0>
  142110:	8009883a 	mov	r4,r16
  142114:	01421980 	call	142198 <__clzsi2>
  142118:	00c00284 	movi	r3,10
  14211c:	18801a16 	blt	r3,r2,142188 <__extendsfdf2+0xec>
  142120:	00c002c4 	movi	r3,11
  142124:	1887c83a 	sub	r3,r3,r2
  142128:	11000544 	addi	r4,r2,21
  14212c:	80c6d83a 	srl	r3,r16,r3
  142130:	8120983a 	sll	r16,r16,r4
  142134:	0100e244 	movi	r4,905
  142138:	2089c83a 	sub	r4,r4,r2
  14213c:	00800434 	movhi	r2,16
  142140:	10bfffc4 	addi	r2,r2,-1
  142144:	1886703a 	and	r3,r3,r2
  142148:	2101ffcc 	andi	r4,r4,2047
  14214c:	003fe406 	br	1420e0 <__extendsfdf2+0x44>
  142150:	80000726 	beq	r16,zero,142170 <__extendsfdf2+0xd4>
  142154:	8006d0fa 	srli	r3,r16,3
  142158:	00800434 	movhi	r2,16
  14215c:	10bfffc4 	addi	r2,r2,-1
  142160:	8020977a 	slli	r16,r16,29
  142164:	1886703a 	and	r3,r3,r2
  142168:	0101ffc4 	movi	r4,2047
  14216c:	003fdc06 	br	1420e0 <__extendsfdf2+0x44>
  142170:	0101ffc4 	movi	r4,2047
  142174:	0007883a 	mov	r3,zero
  142178:	003fd906 	br	1420e0 <__extendsfdf2+0x44>
  14217c:	0009883a 	mov	r4,zero
  142180:	0007883a 	mov	r3,zero
  142184:	003fd606 	br	1420e0 <__extendsfdf2+0x44>
  142188:	10fffd44 	addi	r3,r2,-11
  14218c:	80c6983a 	sll	r3,r16,r3
  142190:	0021883a 	mov	r16,zero
  142194:	003fe706 	br	142134 <__extendsfdf2+0x98>

00142198 <__clzsi2>:
  142198:	00bfffd4 	movui	r2,65535
  14219c:	11000b36 	bltu	r2,r4,1421cc <__clzsi2+0x34>
  1421a0:	00803fc4 	movi	r2,255
  1421a4:	11001e2e 	bgeu	r2,r4,142220 <__clzsi2+0x88>
  1421a8:	00c00204 	movi	r3,8
  1421ac:	20c8d83a 	srl	r4,r4,r3
  1421b0:	00c00574 	movhi	r3,21
  1421b4:	18c40104 	addi	r3,r3,4100
  1421b8:	00800604 	movi	r2,24
  1421bc:	1909883a 	add	r4,r3,r4
  1421c0:	20c00003 	ldbu	r3,0(r4)
  1421c4:	10c5c83a 	sub	r2,r2,r3
  1421c8:	f800283a 	ret
  1421cc:	00804034 	movhi	r2,256
  1421d0:	10bfffc4 	addi	r2,r2,-1
  1421d4:	11000936 	bltu	r2,r4,1421fc <__clzsi2+0x64>
  1421d8:	00800404 	movi	r2,16
  1421dc:	1007883a 	mov	r3,r2
  1421e0:	20c8d83a 	srl	r4,r4,r3
  1421e4:	00c00574 	movhi	r3,21
  1421e8:	18c40104 	addi	r3,r3,4100
  1421ec:	1909883a 	add	r4,r3,r4
  1421f0:	20c00003 	ldbu	r3,0(r4)
  1421f4:	10c5c83a 	sub	r2,r2,r3
  1421f8:	f800283a 	ret
  1421fc:	00c00604 	movi	r3,24
  142200:	20c8d83a 	srl	r4,r4,r3
  142204:	00c00574 	movhi	r3,21
  142208:	18c40104 	addi	r3,r3,4100
  14220c:	00800204 	movi	r2,8
  142210:	1909883a 	add	r4,r3,r4
  142214:	20c00003 	ldbu	r3,0(r4)
  142218:	10c5c83a 	sub	r2,r2,r3
  14221c:	f800283a 	ret
  142220:	0007883a 	mov	r3,zero
  142224:	20c8d83a 	srl	r4,r4,r3
  142228:	00c00574 	movhi	r3,21
  14222c:	18c40104 	addi	r3,r3,4100
  142230:	00800804 	movi	r2,32
  142234:	1909883a 	add	r4,r3,r4
  142238:	20c00003 	ldbu	r3,0(r4)
  14223c:	10c5c83a 	sub	r2,r2,r3
  142240:	f800283a 	ret

00142244 <memcpy>:
  142244:	00c003c4 	movi	r3,15
  142248:	2005883a 	mov	r2,r4
  14224c:	1980372e 	bgeu	r3,r6,14232c <memcpy+0xe8>
  142250:	2146b03a 	or	r3,r4,r5
  142254:	18c000cc 	andi	r3,r3,3
  142258:	1800371e 	bne	r3,zero,142338 <memcpy+0xf4>
  14225c:	327ffc04 	addi	r9,r6,-16
  142260:	4812d13a 	srli	r9,r9,4
  142264:	2007883a 	mov	r3,r4
  142268:	280f883a 	mov	r7,r5
  14226c:	4808913a 	slli	r4,r9,4
  142270:	1109883a 	add	r4,r2,r4
  142274:	21000404 	addi	r4,r4,16
  142278:	3a000017 	ldw	r8,0(r7)
  14227c:	18c00404 	addi	r3,r3,16
  142280:	39c00404 	addi	r7,r7,16
  142284:	1a3ffc15 	stw	r8,-16(r3)
  142288:	3a3ffd17 	ldw	r8,-12(r7)
  14228c:	1a3ffd15 	stw	r8,-12(r3)
  142290:	3a3ffe17 	ldw	r8,-8(r7)
  142294:	1a3ffe15 	stw	r8,-8(r3)
  142298:	3a3fff17 	ldw	r8,-4(r7)
  14229c:	1a3fff15 	stw	r8,-4(r3)
  1422a0:	193ff51e 	bne	r3,r4,142278 <memcpy+0x34>
  1422a4:	49000044 	addi	r4,r9,1
  1422a8:	2008913a 	slli	r4,r4,4
  1422ac:	328003cc 	andi	r10,r6,15
  1422b0:	1107883a 	add	r3,r2,r4
  1422b4:	290b883a 	add	r5,r5,r4
  1422b8:	010000c4 	movi	r4,3
  1422bc:	2280212e 	bgeu	r4,r10,142344 <memcpy+0x100>
  1422c0:	52bfff04 	addi	r10,r10,-4
  1422c4:	5014d0ba 	srli	r10,r10,2
  1422c8:	180f883a 	mov	r7,r3
  1422cc:	2811883a 	mov	r8,r5
  1422d0:	5289883a 	add	r4,r10,r10
  1422d4:	2109883a 	add	r4,r4,r4
  1422d8:	21000104 	addi	r4,r4,4
  1422dc:	1909883a 	add	r4,r3,r4
  1422e0:	42400017 	ldw	r9,0(r8)
  1422e4:	39c00104 	addi	r7,r7,4
  1422e8:	42000104 	addi	r8,r8,4
  1422ec:	3a7fff15 	stw	r9,-4(r7)
  1422f0:	393ffb1e 	bne	r7,r4,1422e0 <memcpy+0x9c>
  1422f4:	51000044 	addi	r4,r10,1
  1422f8:	2109883a 	add	r4,r4,r4
  1422fc:	2109883a 	add	r4,r4,r4
  142300:	318000cc 	andi	r6,r6,3
  142304:	1907883a 	add	r3,r3,r4
  142308:	290b883a 	add	r5,r5,r4
  14230c:	30000c26 	beq	r6,zero,142340 <memcpy+0xfc>
  142310:	298d883a 	add	r6,r5,r6
  142314:	29c00003 	ldbu	r7,0(r5)
  142318:	18c00044 	addi	r3,r3,1
  14231c:	29400044 	addi	r5,r5,1
  142320:	19ffffc5 	stb	r7,-1(r3)
  142324:	29bffb1e 	bne	r5,r6,142314 <memcpy+0xd0>
  142328:	f800283a 	ret
  14232c:	2007883a 	mov	r3,r4
  142330:	303ff71e 	bne	r6,zero,142310 <memcpy+0xcc>
  142334:	00000206 	br	142340 <memcpy+0xfc>
  142338:	2007883a 	mov	r3,r4
  14233c:	003ff406 	br	142310 <memcpy+0xcc>
  142340:	f800283a 	ret
  142344:	500d883a 	mov	r6,r10
  142348:	303ff11e 	bne	r6,zero,142310 <memcpy+0xcc>
  14234c:	003ffc06 	br	142340 <memcpy+0xfc>

00142350 <_printf_r>:
  142350:	defffd04 	addi	sp,sp,-12
  142354:	dfc00015 	stw	ra,0(sp)
  142358:	d9800115 	stw	r6,4(sp)
  14235c:	d9c00215 	stw	r7,8(sp)
  142360:	280d883a 	mov	r6,r5
  142364:	21400217 	ldw	r5,8(r4)
  142368:	d9c00104 	addi	r7,sp,4
  14236c:	01425340 	call	142534 <___vfprintf_internal_r>
  142370:	dfc00017 	ldw	ra,0(sp)
  142374:	dec00304 	addi	sp,sp,12
  142378:	f800283a 	ret

0014237c <printf>:
  14237c:	defffc04 	addi	sp,sp,-16
  142380:	dfc00015 	stw	ra,0(sp)
  142384:	d9400115 	stw	r5,4(sp)
  142388:	d9800215 	stw	r6,8(sp)
  14238c:	d9c00315 	stw	r7,12(sp)
  142390:	00800574 	movhi	r2,21
  142394:	108bab04 	addi	r2,r2,11948
  142398:	10800017 	ldw	r2,0(r2)
  14239c:	200b883a 	mov	r5,r4
  1423a0:	d9800104 	addi	r6,sp,4
  1423a4:	11000217 	ldw	r4,8(r2)
  1423a8:	01445100 	call	144510 <__vfprintf_internal>
  1423ac:	dfc00017 	ldw	ra,0(sp)
  1423b0:	dec00404 	addi	sp,sp,16
  1423b4:	f800283a 	ret

001423b8 <_putchar_r>:
  1423b8:	21800217 	ldw	r6,8(r4)
  1423bc:	0148bc41 	jmpi	148bc4 <_putc_r>

001423c0 <putchar>:
  1423c0:	00800574 	movhi	r2,21
  1423c4:	108bab04 	addi	r2,r2,11948
  1423c8:	10800017 	ldw	r2,0(r2)
  1423cc:	200b883a 	mov	r5,r4
  1423d0:	11800217 	ldw	r6,8(r2)
  1423d4:	1009883a 	mov	r4,r2
  1423d8:	0148bc41 	jmpi	148bc4 <_putc_r>

001423dc <_puts_r>:
  1423dc:	defff604 	addi	sp,sp,-40
  1423e0:	dc400815 	stw	r17,32(sp)
  1423e4:	2023883a 	mov	r17,r4
  1423e8:	2809883a 	mov	r4,r5
  1423ec:	dc000715 	stw	r16,28(sp)
  1423f0:	dfc00915 	stw	ra,36(sp)
  1423f4:	2821883a 	mov	r16,r5
  1423f8:	01424a80 	call	1424a8 <strlen>
  1423fc:	00c00574 	movhi	r3,21
  142400:	18cbab04 	addi	r3,r3,11948
  142404:	18c00017 	ldw	r3,0(r3)
  142408:	11000044 	addi	r4,r2,1
  14240c:	d8800115 	stw	r2,4(sp)
  142410:	18c00217 	ldw	r3,8(r3)
  142414:	00800574 	movhi	r2,21
  142418:	10844104 	addi	r2,r2,4356
  14241c:	d8800215 	stw	r2,8(sp)
  142420:	1940030b 	ldhu	r5,12(r3)
  142424:	00800044 	movi	r2,1
  142428:	d8800315 	stw	r2,12(sp)
  14242c:	00800084 	movi	r2,2
  142430:	d8800515 	stw	r2,20(sp)
  142434:	dc000015 	stw	r16,0(sp)
  142438:	d9000615 	stw	r4,24(sp)
  14243c:	dec00415 	stw	sp,16(sp)
  142440:	2888000c 	andi	r2,r5,8192
  142444:	1000061e 	bne	r2,zero,142460 <_puts_r+0x84>
  142448:	19001917 	ldw	r4,100(r3)
  14244c:	00b7ffc4 	movi	r2,-8193
  142450:	29480014 	ori	r5,r5,8192
  142454:	2084703a 	and	r2,r4,r2
  142458:	1940030d 	sth	r5,12(r3)
  14245c:	18801915 	stw	r2,100(r3)
  142460:	89400217 	ldw	r5,8(r17)
  142464:	8809883a 	mov	r4,r17
  142468:	d9800404 	addi	r6,sp,16
  14246c:	01468bc0 	call	1468bc <__sfvwrite_r>
  142470:	1000061e 	bne	r2,zero,14248c <_puts_r+0xb0>
  142474:	00800284 	movi	r2,10
  142478:	dfc00917 	ldw	ra,36(sp)
  14247c:	dc400817 	ldw	r17,32(sp)
  142480:	dc000717 	ldw	r16,28(sp)
  142484:	dec00a04 	addi	sp,sp,40
  142488:	f800283a 	ret
  14248c:	00bfffc4 	movi	r2,-1
  142490:	003ff906 	br	142478 <_puts_r+0x9c>

00142494 <puts>:
  142494:	00800574 	movhi	r2,21
  142498:	108bab04 	addi	r2,r2,11948
  14249c:	200b883a 	mov	r5,r4
  1424a0:	11000017 	ldw	r4,0(r2)
  1424a4:	01423dc1 	jmpi	1423dc <_puts_r>

001424a8 <strlen>:
  1424a8:	208000cc 	andi	r2,r4,3
  1424ac:	10001d26 	beq	r2,zero,142524 <strlen+0x7c>
  1424b0:	20800007 	ldb	r2,0(r4)
  1424b4:	10001d26 	beq	r2,zero,14252c <strlen+0x84>
  1424b8:	2005883a 	mov	r2,r4
  1424bc:	00000206 	br	1424c8 <strlen+0x20>
  1424c0:	10c00007 	ldb	r3,0(r2)
  1424c4:	18001526 	beq	r3,zero,14251c <strlen+0x74>
  1424c8:	10800044 	addi	r2,r2,1
  1424cc:	10c000cc 	andi	r3,r2,3
  1424d0:	183ffb1e 	bne	r3,zero,1424c0 <strlen+0x18>
  1424d4:	10c00017 	ldw	r3,0(r2)
  1424d8:	01ffbff4 	movhi	r7,65279
  1424dc:	39ffbfc4 	addi	r7,r7,-257
  1424e0:	01a02074 	movhi	r6,32897
  1424e4:	31a02004 	addi	r6,r6,-32640
  1424e8:	00000206 	br	1424f4 <strlen+0x4c>
  1424ec:	10800104 	addi	r2,r2,4
  1424f0:	10c00017 	ldw	r3,0(r2)
  1424f4:	19cb883a 	add	r5,r3,r7
  1424f8:	00c6303a 	nor	r3,zero,r3
  1424fc:	28c6703a 	and	r3,r5,r3
  142500:	1986703a 	and	r3,r3,r6
  142504:	183ff926 	beq	r3,zero,1424ec <strlen+0x44>
  142508:	10c00007 	ldb	r3,0(r2)
  14250c:	18000326 	beq	r3,zero,14251c <strlen+0x74>
  142510:	10800044 	addi	r2,r2,1
  142514:	10c00007 	ldb	r3,0(r2)
  142518:	183ffd1e 	bne	r3,zero,142510 <strlen+0x68>
  14251c:	1105c83a 	sub	r2,r2,r4
  142520:	f800283a 	ret
  142524:	2005883a 	mov	r2,r4
  142528:	003fea06 	br	1424d4 <strlen+0x2c>
  14252c:	0005883a 	mov	r2,zero
  142530:	f800283a 	ret

00142534 <___vfprintf_internal_r>:
  142534:	defeb604 	addi	sp,sp,-1320
  142538:	dfc14915 	stw	ra,1316(sp)
  14253c:	ddc14715 	stw	r23,1308(sp)
  142540:	dc414115 	stw	r17,1284(sp)
  142544:	d9012c15 	stw	r4,1200(sp)
  142548:	282f883a 	mov	r23,r5
  14254c:	3023883a 	mov	r17,r6
  142550:	d9c12f15 	stw	r7,1212(sp)
  142554:	df014815 	stw	fp,1312(sp)
  142558:	dd814615 	stw	r22,1304(sp)
  14255c:	dd414515 	stw	r21,1300(sp)
  142560:	dd014415 	stw	r20,1296(sp)
  142564:	dcc14315 	stw	r19,1292(sp)
  142568:	dc814215 	stw	r18,1288(sp)
  14256c:	dc014015 	stw	r16,1280(sp)
  142570:	0146f680 	call	146f68 <_localeconv_r>
  142574:	10800017 	ldw	r2,0(r2)
  142578:	1009883a 	mov	r4,r2
  14257c:	d8813415 	stw	r2,1232(sp)
  142580:	01424a80 	call	1424a8 <strlen>
  142584:	da812c17 	ldw	r10,1200(sp)
  142588:	d8813815 	stw	r2,1248(sp)
  14258c:	50000226 	beq	r10,zero,142598 <___vfprintf_internal_r+0x64>
  142590:	50800e17 	ldw	r2,56(r10)
  142594:	10022a26 	beq	r2,zero,142e40 <___vfprintf_internal_r+0x90c>
  142598:	b880030b 	ldhu	r2,12(r23)
  14259c:	1108000c 	andi	r4,r2,8192
  1425a0:	1007883a 	mov	r3,r2
  1425a4:	2000071e 	bne	r4,zero,1425c4 <___vfprintf_internal_r+0x90>
  1425a8:	b9001917 	ldw	r4,100(r23)
  1425ac:	10c80014 	ori	r3,r2,8192
  1425b0:	00b7ffc4 	movi	r2,-8193
  1425b4:	2088703a 	and	r4,r4,r2
  1425b8:	b8c0030d 	sth	r3,12(r23)
  1425bc:	1805883a 	mov	r2,r3
  1425c0:	b9001915 	stw	r4,100(r23)
  1425c4:	1900020c 	andi	r4,r3,8
  1425c8:	2001cd26 	beq	r4,zero,142d00 <___vfprintf_internal_r+0x7cc>
  1425cc:	b9000417 	ldw	r4,16(r23)
  1425d0:	2001cb26 	beq	r4,zero,142d00 <___vfprintf_internal_r+0x7cc>
  1425d4:	18c0068c 	andi	r3,r3,26
  1425d8:	01000284 	movi	r4,10
  1425dc:	1901d126 	beq	r3,r4,142d24 <___vfprintf_internal_r+0x7f0>
  1425e0:	da810dc4 	addi	r10,sp,1079
  1425e4:	d8800404 	addi	r2,sp,16
  1425e8:	da812815 	stw	r10,1184(sp)
  1425ec:	d8811e15 	stw	r2,1144(sp)
  1425f0:	1011883a 	mov	r8,r2
  1425f4:	d8812817 	ldw	r2,1184(sp)
  1425f8:	da810e04 	addi	r10,sp,1080
  1425fc:	da812915 	stw	r10,1188(sp)
  142600:	5095c83a 	sub	r10,r10,r2
  142604:	d8012015 	stw	zero,1152(sp)
  142608:	d8011f15 	stw	zero,1148(sp)
  14260c:	d8013515 	stw	zero,1236(sp)
  142610:	d8013715 	stw	zero,1244(sp)
  142614:	d8013915 	stw	zero,1252(sp)
  142618:	d8013b15 	stw	zero,1260(sp)
  14261c:	d8013a15 	stw	zero,1256(sp)
  142620:	d8013115 	stw	zero,1220(sp)
  142624:	04c00574 	movhi	r19,21
  142628:	9cc45284 	addi	r19,r19,4426
  14262c:	da813d15 	stw	r10,1268(sp)
  142630:	88800007 	ldb	r2,0(r17)
  142634:	10019726 	beq	r2,zero,142c94 <___vfprintf_internal_r+0x760>
  142638:	00c00944 	movi	r3,37
  14263c:	8821883a 	mov	r16,r17
  142640:	10c0021e 	bne	r2,r3,14264c <___vfprintf_internal_r+0x118>
  142644:	00001406 	br	142698 <___vfprintf_internal_r+0x164>
  142648:	10c00326 	beq	r2,r3,142658 <___vfprintf_internal_r+0x124>
  14264c:	84000044 	addi	r16,r16,1
  142650:	80800007 	ldb	r2,0(r16)
  142654:	103ffc1e 	bne	r2,zero,142648 <___vfprintf_internal_r+0x114>
  142658:	8465c83a 	sub	r18,r16,r17
  14265c:	90000e26 	beq	r18,zero,142698 <___vfprintf_internal_r+0x164>
  142660:	d8c12017 	ldw	r3,1152(sp)
  142664:	d8811f17 	ldw	r2,1148(sp)
  142668:	44400015 	stw	r17,0(r8)
  14266c:	1c87883a 	add	r3,r3,r18
  142670:	10800044 	addi	r2,r2,1
  142674:	d8c12015 	stw	r3,1152(sp)
  142678:	44800115 	stw	r18,4(r8)
  14267c:	d8811f15 	stw	r2,1148(sp)
  142680:	00c001c4 	movi	r3,7
  142684:	1881dc16 	blt	r3,r2,142df8 <___vfprintf_internal_r+0x8c4>
  142688:	42000204 	addi	r8,r8,8
  14268c:	da813117 	ldw	r10,1220(sp)
  142690:	5495883a 	add	r10,r10,r18
  142694:	da813115 	stw	r10,1220(sp)
  142698:	80800007 	ldb	r2,0(r16)
  14269c:	1001dd26 	beq	r2,zero,142e14 <___vfprintf_internal_r+0x8e0>
  1426a0:	84800047 	ldb	r18,1(r16)
  1426a4:	84400044 	addi	r17,r16,1
  1426a8:	d8012785 	stb	zero,1182(sp)
  1426ac:	000d883a 	mov	r6,zero
  1426b0:	053fffc4 	movi	r20,-1
  1426b4:	d8013015 	stw	zero,1216(sp)
  1426b8:	d8012a15 	stw	zero,1192(sp)
  1426bc:	00c01604 	movi	r3,88
  1426c0:	01000244 	movi	r4,9
  1426c4:	02400a84 	movi	r9,42
  1426c8:	01c01b04 	movi	r7,108
  1426cc:	8c400044 	addi	r17,r17,1
  1426d0:	90bff804 	addi	r2,r18,-32
  1426d4:	1882f936 	bltu	r3,r2,1432bc <___vfprintf_internal_r+0xd88>
  1426d8:	1085883a 	add	r2,r2,r2
  1426dc:	1085883a 	add	r2,r2,r2
  1426e0:	01400534 	movhi	r5,20
  1426e4:	2949bd04 	addi	r5,r5,9972
  1426e8:	1145883a 	add	r2,r2,r5
  1426ec:	10800017 	ldw	r2,0(r2)
  1426f0:	1000683a 	jmp	r2
  1426f4:	0014315c 	xori	zero,zero,20677
  1426f8:	001432bc 	xorhi	zero,zero,20682
  1426fc:	001432bc 	xorhi	zero,zero,20682
  142700:	00143100 	call	14310 <__alt_mem_onchip_memory2-0x12bcf0>
  142704:	001432bc 	xorhi	zero,zero,20682
  142708:	001432bc 	xorhi	zero,zero,20682
  14270c:	001432bc 	xorhi	zero,zero,20682
  142710:	001432bc 	xorhi	zero,zero,20682
  142714:	001432bc 	xorhi	zero,zero,20682
  142718:	001432bc 	xorhi	zero,zero,20682
  14271c:	00143114 	movui	zero,20676
  142720:	0014313c 	xorhi	zero,zero,20676
  142724:	001432bc 	xorhi	zero,zero,20682
  142728:	00142cec 	andhi	zero,zero,20659
  14272c:	0014327c 	xorhi	zero,zero,20681
  142730:	001432bc 	xorhi	zero,zero,20682
  142734:	00143148 	cmpgei	zero,zero,20677
  142738:	00142e98 	cmpnei	zero,zero,20666
  14273c:	00142e98 	cmpnei	zero,zero,20666
  142740:	00142e98 	cmpnei	zero,zero,20666
  142744:	00142e98 	cmpnei	zero,zero,20666
  142748:	00142e98 	cmpnei	zero,zero,20666
  14274c:	00142e98 	cmpnei	zero,zero,20666
  142750:	00142e98 	cmpnei	zero,zero,20666
  142754:	00142e98 	cmpnei	zero,zero,20666
  142758:	00142e98 	cmpnei	zero,zero,20666
  14275c:	001432bc 	xorhi	zero,zero,20682
  142760:	001432bc 	xorhi	zero,zero,20682
  142764:	001432bc 	xorhi	zero,zero,20682
  142768:	001432bc 	xorhi	zero,zero,20682
  14276c:	001432bc 	xorhi	zero,zero,20682
  142770:	001432bc 	xorhi	zero,zero,20682
  142774:	001432bc 	xorhi	zero,zero,20682
  142778:	001432bc 	xorhi	zero,zero,20682
  14277c:	001432bc 	xorhi	zero,zero,20682
  142780:	001432bc 	xorhi	zero,zero,20682
  142784:	00142f30 	cmpltui	zero,zero,20668
  142788:	00142f78 	rdprs	zero,zero,20669
  14278c:	001432bc 	xorhi	zero,zero,20682
  142790:	00142f78 	rdprs	zero,zero,20669
  142794:	001432bc 	xorhi	zero,zero,20682
  142798:	001432bc 	xorhi	zero,zero,20682
  14279c:	001432bc 	xorhi	zero,zero,20682
  1427a0:	001432bc 	xorhi	zero,zero,20682
  1427a4:	00143230 	cmpltui	zero,zero,20680
  1427a8:	001432bc 	xorhi	zero,zero,20682
  1427ac:	001432bc 	xorhi	zero,zero,20682
  1427b0:	00142c9c 	xori	zero,zero,20658
  1427b4:	001432bc 	xorhi	zero,zero,20682
  1427b8:	001432bc 	xorhi	zero,zero,20682
  1427bc:	001432bc 	xorhi	zero,zero,20682
  1427c0:	001432bc 	xorhi	zero,zero,20682
  1427c4:	001432bc 	xorhi	zero,zero,20682
  1427c8:	00142858 	cmpnei	zero,zero,20641
  1427cc:	001432bc 	xorhi	zero,zero,20682
  1427d0:	001432bc 	xorhi	zero,zero,20682
  1427d4:	00143074 	movhi	zero,20673
  1427d8:	001432bc 	xorhi	zero,zero,20682
  1427dc:	001432bc 	xorhi	zero,zero,20682
  1427e0:	001432bc 	xorhi	zero,zero,20682
  1427e4:	001432bc 	xorhi	zero,zero,20682
  1427e8:	001432bc 	xorhi	zero,zero,20682
  1427ec:	001432bc 	xorhi	zero,zero,20682
  1427f0:	001432bc 	xorhi	zero,zero,20682
  1427f4:	001432bc 	xorhi	zero,zero,20682
  1427f8:	001432bc 	xorhi	zero,zero,20682
  1427fc:	001432bc 	xorhi	zero,zero,20682
  142800:	00143244 	movi	zero,20681
  142804:	001430b4 	movhi	zero,20674
  142808:	00142f78 	rdprs	zero,zero,20669
  14280c:	00142f78 	rdprs	zero,zero,20669
  142810:	00142f78 	rdprs	zero,zero,20669
  142814:	001430ec 	andhi	zero,zero,20675
  142818:	001430b4 	movhi	zero,20674
  14281c:	001432bc 	xorhi	zero,zero,20682
  142820:	001432bc 	xorhi	zero,zero,20682
  142824:	00143178 	rdprs	zero,zero,20677
  142828:	001432bc 	xorhi	zero,zero,20682
  14282c:	00143194 	movui	zero,20678
  142830:	00142ca8 	cmpgeui	zero,zero,20658
  142834:	00142ecc 	andi	zero,zero,20667
  142838:	00142f1c 	xori	zero,zero,20668
  14283c:	001432bc 	xorhi	zero,zero,20682
  142840:	001431d0 	cmplti	zero,zero,20679
  142844:	001432bc 	xorhi	zero,zero,20682
  142848:	00142864 	muli	zero,zero,20641
  14284c:	001432bc 	xorhi	zero,zero,20682
  142850:	001432bc 	xorhi	zero,zero,20682
  142854:	00143014 	movui	zero,20672
  142858:	da812a17 	ldw	r10,1192(sp)
  14285c:	52800414 	ori	r10,r10,16
  142860:	da812a15 	stw	r10,1192(sp)
  142864:	da812a17 	ldw	r10,1192(sp)
  142868:	5080080c 	andi	r2,r10,32
  14286c:	1001821e 	bne	r2,zero,142e78 <___vfprintf_internal_r+0x944>
  142870:	da812a17 	ldw	r10,1192(sp)
  142874:	5080040c 	andi	r2,r10,16
  142878:	10054a26 	beq	r2,zero,143da4 <___vfprintf_internal_r+0x1870>
  14287c:	da812f17 	ldw	r10,1212(sp)
  142880:	55400017 	ldw	r21,0(r10)
  142884:	52800104 	addi	r10,r10,4
  142888:	002d883a 	mov	r22,zero
  14288c:	da812f15 	stw	r10,1212(sp)
  142890:	00c00044 	movi	r3,1
  142894:	a805883a 	mov	r2,r21
  142898:	d8012785 	stb	zero,1182(sp)
  14289c:	0039883a 	mov	fp,zero
  1428a0:	a0000416 	blt	r20,zero,1428b4 <___vfprintf_internal_r+0x380>
  1428a4:	da812a17 	ldw	r10,1192(sp)
  1428a8:	013fdfc4 	movi	r4,-129
  1428ac:	5114703a 	and	r10,r10,r4
  1428b0:	da812a15 	stw	r10,1192(sp)
  1428b4:	10029a1e 	bne	r2,zero,143320 <___vfprintf_internal_r+0xdec>
  1428b8:	a002991e 	bne	r20,zero,143320 <___vfprintf_internal_r+0xdec>
  1428bc:	18c03fcc 	andi	r3,r3,255
  1428c0:	1803d91e 	bne	r3,zero,143828 <___vfprintf_internal_r+0x12f4>
  1428c4:	da812a17 	ldw	r10,1192(sp)
  1428c8:	5080004c 	andi	r2,r10,1
  1428cc:	1003d626 	beq	r2,zero,143828 <___vfprintf_internal_r+0x12f4>
  1428d0:	da813d17 	ldw	r10,1268(sp)
  1428d4:	00800c04 	movi	r2,48
  1428d8:	d8810dc5 	stb	r2,1079(sp)
  1428dc:	da812e15 	stw	r10,1208(sp)
  1428e0:	dc010dc4 	addi	r16,sp,1079
  1428e4:	d8812e17 	ldw	r2,1208(sp)
  1428e8:	1500010e 	bge	r2,r20,1428f0 <___vfprintf_internal_r+0x3bc>
  1428ec:	a005883a 	mov	r2,r20
  1428f0:	d8812b15 	stw	r2,1196(sp)
  1428f4:	d8013315 	stw	zero,1228(sp)
  1428f8:	e0803fcc 	andi	r2,fp,255
  1428fc:	1080201c 	xori	r2,r2,128
  142900:	10bfe004 	addi	r2,r2,-128
  142904:	10000326 	beq	r2,zero,142914 <___vfprintf_internal_r+0x3e0>
  142908:	da812b17 	ldw	r10,1196(sp)
  14290c:	52800044 	addi	r10,r10,1
  142910:	da812b15 	stw	r10,1196(sp)
  142914:	d8c12a17 	ldw	r3,1192(sp)
  142918:	18c0008c 	andi	r3,r3,2
  14291c:	d8c12d15 	stw	r3,1204(sp)
  142920:	18000326 	beq	r3,zero,142930 <___vfprintf_internal_r+0x3fc>
  142924:	da812b17 	ldw	r10,1196(sp)
  142928:	52800084 	addi	r10,r10,2
  14292c:	da812b15 	stw	r10,1196(sp)
  142930:	d8c12a17 	ldw	r3,1192(sp)
  142934:	18c0210c 	andi	r3,r3,132
  142938:	d8c13215 	stw	r3,1224(sp)
  14293c:	1802661e 	bne	r3,zero,1432d8 <___vfprintf_internal_r+0xda4>
  142940:	da813017 	ldw	r10,1216(sp)
  142944:	d8c12b17 	ldw	r3,1196(sp)
  142948:	50f9c83a 	sub	fp,r10,r3
  14294c:	0702620e 	bge	zero,fp,1432d8 <___vfprintf_internal_r+0xda4>
  142950:	02800574 	movhi	r10,21
  142954:	52845684 	addi	r10,r10,4442
  142958:	02400404 	movi	r9,16
  14295c:	da813615 	stw	r10,1240(sp)
  142960:	d8c12017 	ldw	r3,1152(sp)
  142964:	d8811f17 	ldw	r2,1148(sp)
  142968:	4f00220e 	bge	r9,fp,1429f4 <___vfprintf_internal_r+0x4c0>
  14296c:	8809883a 	mov	r4,r17
  142970:	dc013c15 	stw	r16,1264(sp)
  142974:	e023883a 	mov	r17,fp
  142978:	482d883a 	mov	r22,r9
  14297c:	054001c4 	movi	r21,7
  142980:	dc012c17 	ldw	r16,1200(sp)
  142984:	2039883a 	mov	fp,r4
  142988:	00000306 	br	142998 <___vfprintf_internal_r+0x464>
  14298c:	8c7ffc04 	addi	r17,r17,-16
  142990:	42000204 	addi	r8,r8,8
  142994:	b440130e 	bge	r22,r17,1429e4 <___vfprintf_internal_r+0x4b0>
  142998:	18c00404 	addi	r3,r3,16
  14299c:	10800044 	addi	r2,r2,1
  1429a0:	01000574 	movhi	r4,21
  1429a4:	21045684 	addi	r4,r4,4442
  1429a8:	41000015 	stw	r4,0(r8)
  1429ac:	45800115 	stw	r22,4(r8)
  1429b0:	d8c12015 	stw	r3,1152(sp)
  1429b4:	d8811f15 	stw	r2,1148(sp)
  1429b8:	a8bff40e 	bge	r21,r2,14298c <___vfprintf_internal_r+0x458>
  1429bc:	8009883a 	mov	r4,r16
  1429c0:	b80b883a 	mov	r5,r23
  1429c4:	d9811e04 	addi	r6,sp,1144
  1429c8:	014963c0 	call	14963c <__sprint_r>
  1429cc:	1001171e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1429d0:	8c7ffc04 	addi	r17,r17,-16
  1429d4:	d8c12017 	ldw	r3,1152(sp)
  1429d8:	d8811f17 	ldw	r2,1148(sp)
  1429dc:	da000404 	addi	r8,sp,16
  1429e0:	b47fed16 	blt	r22,r17,142998 <___vfprintf_internal_r+0x464>
  1429e4:	dc013c17 	ldw	r16,1264(sp)
  1429e8:	e009883a 	mov	r4,fp
  1429ec:	8839883a 	mov	fp,r17
  1429f0:	2023883a 	mov	r17,r4
  1429f4:	da813617 	ldw	r10,1240(sp)
  1429f8:	e0c7883a 	add	r3,fp,r3
  1429fc:	10800044 	addi	r2,r2,1
  142a00:	42800015 	stw	r10,0(r8)
  142a04:	47000115 	stw	fp,4(r8)
  142a08:	d8c12015 	stw	r3,1152(sp)
  142a0c:	d8811f15 	stw	r2,1148(sp)
  142a10:	010001c4 	movi	r4,7
  142a14:	2083bd16 	blt	r4,r2,14390c <___vfprintf_internal_r+0x13d8>
  142a18:	d8812787 	ldb	r2,1182(sp)
  142a1c:	42000204 	addi	r8,r8,8
  142a20:	10000c26 	beq	r2,zero,142a54 <___vfprintf_internal_r+0x520>
  142a24:	d8811f17 	ldw	r2,1148(sp)
  142a28:	d9012784 	addi	r4,sp,1182
  142a2c:	18c00044 	addi	r3,r3,1
  142a30:	10800044 	addi	r2,r2,1
  142a34:	41000015 	stw	r4,0(r8)
  142a38:	01000044 	movi	r4,1
  142a3c:	41000115 	stw	r4,4(r8)
  142a40:	d8c12015 	stw	r3,1152(sp)
  142a44:	d8811f15 	stw	r2,1148(sp)
  142a48:	010001c4 	movi	r4,7
  142a4c:	20834116 	blt	r4,r2,143754 <___vfprintf_internal_r+0x1220>
  142a50:	42000204 	addi	r8,r8,8
  142a54:	da812d17 	ldw	r10,1204(sp)
  142a58:	50000c26 	beq	r10,zero,142a8c <___vfprintf_internal_r+0x558>
  142a5c:	d8811f17 	ldw	r2,1148(sp)
  142a60:	d9012704 	addi	r4,sp,1180
  142a64:	18c00084 	addi	r3,r3,2
  142a68:	10800044 	addi	r2,r2,1
  142a6c:	41000015 	stw	r4,0(r8)
  142a70:	01000084 	movi	r4,2
  142a74:	41000115 	stw	r4,4(r8)
  142a78:	d8c12015 	stw	r3,1152(sp)
  142a7c:	d8811f15 	stw	r2,1148(sp)
  142a80:	010001c4 	movi	r4,7
  142a84:	20833b16 	blt	r4,r2,143774 <___vfprintf_internal_r+0x1240>
  142a88:	42000204 	addi	r8,r8,8
  142a8c:	da813217 	ldw	r10,1224(sp)
  142a90:	00802004 	movi	r2,128
  142a94:	50828326 	beq	r10,r2,1434a4 <___vfprintf_internal_r+0xf70>
  142a98:	da812e17 	ldw	r10,1208(sp)
  142a9c:	a2a9c83a 	sub	r20,r20,r10
  142aa0:	05002d0e 	bge	zero,r20,142b58 <___vfprintf_internal_r+0x624>
  142aa4:	05800404 	movi	r22,16
  142aa8:	d8811f17 	ldw	r2,1148(sp)
  142aac:	05400574 	movhi	r21,21
  142ab0:	ad445284 	addi	r21,r21,4426
  142ab4:	b5001f0e 	bge	r22,r20,142b34 <___vfprintf_internal_r+0x600>
  142ab8:	8809883a 	mov	r4,r17
  142abc:	dc012d15 	stw	r16,1204(sp)
  142ac0:	a023883a 	mov	r17,r20
  142ac4:	070001c4 	movi	fp,7
  142ac8:	dc012c17 	ldw	r16,1200(sp)
  142acc:	2029883a 	mov	r20,r4
  142ad0:	00000306 	br	142ae0 <___vfprintf_internal_r+0x5ac>
  142ad4:	8c7ffc04 	addi	r17,r17,-16
  142ad8:	42000204 	addi	r8,r8,8
  142adc:	b440110e 	bge	r22,r17,142b24 <___vfprintf_internal_r+0x5f0>
  142ae0:	18c00404 	addi	r3,r3,16
  142ae4:	10800044 	addi	r2,r2,1
  142ae8:	44c00015 	stw	r19,0(r8)
  142aec:	45800115 	stw	r22,4(r8)
  142af0:	d8c12015 	stw	r3,1152(sp)
  142af4:	d8811f15 	stw	r2,1148(sp)
  142af8:	e0bff60e 	bge	fp,r2,142ad4 <___vfprintf_internal_r+0x5a0>
  142afc:	8009883a 	mov	r4,r16
  142b00:	b80b883a 	mov	r5,r23
  142b04:	d9811e04 	addi	r6,sp,1144
  142b08:	014963c0 	call	14963c <__sprint_r>
  142b0c:	1000c71e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  142b10:	8c7ffc04 	addi	r17,r17,-16
  142b14:	d8c12017 	ldw	r3,1152(sp)
  142b18:	d8811f17 	ldw	r2,1148(sp)
  142b1c:	da000404 	addi	r8,sp,16
  142b20:	b47fef16 	blt	r22,r17,142ae0 <___vfprintf_internal_r+0x5ac>
  142b24:	dc012d17 	ldw	r16,1204(sp)
  142b28:	a009883a 	mov	r4,r20
  142b2c:	8829883a 	mov	r20,r17
  142b30:	2023883a 	mov	r17,r4
  142b34:	1d07883a 	add	r3,r3,r20
  142b38:	10800044 	addi	r2,r2,1
  142b3c:	45400015 	stw	r21,0(r8)
  142b40:	45000115 	stw	r20,4(r8)
  142b44:	d8c12015 	stw	r3,1152(sp)
  142b48:	d8811f15 	stw	r2,1148(sp)
  142b4c:	010001c4 	movi	r4,7
  142b50:	2082f816 	blt	r4,r2,143734 <___vfprintf_internal_r+0x1200>
  142b54:	42000204 	addi	r8,r8,8
  142b58:	da812a17 	ldw	r10,1192(sp)
  142b5c:	5080400c 	andi	r2,r10,256
  142b60:	1002061e 	bne	r2,zero,14337c <___vfprintf_internal_r+0xe48>
  142b64:	da812e17 	ldw	r10,1208(sp)
  142b68:	d8811f17 	ldw	r2,1148(sp)
  142b6c:	44000015 	stw	r16,0(r8)
  142b70:	1a87883a 	add	r3,r3,r10
  142b74:	10800044 	addi	r2,r2,1
  142b78:	42800115 	stw	r10,4(r8)
  142b7c:	d8c12015 	stw	r3,1152(sp)
  142b80:	d8811f15 	stw	r2,1148(sp)
  142b84:	010001c4 	movi	r4,7
  142b88:	2081dd16 	blt	r4,r2,143300 <___vfprintf_internal_r+0xdcc>
  142b8c:	42000204 	addi	r8,r8,8
  142b90:	da812a17 	ldw	r10,1192(sp)
  142b94:	5080010c 	andi	r2,r10,4
  142b98:	10003226 	beq	r2,zero,142c64 <___vfprintf_internal_r+0x730>
  142b9c:	da813017 	ldw	r10,1216(sp)
  142ba0:	d8812b17 	ldw	r2,1196(sp)
  142ba4:	50a1c83a 	sub	r16,r10,r2
  142ba8:	04002e0e 	bge	zero,r16,142c64 <___vfprintf_internal_r+0x730>
  142bac:	02800574 	movhi	r10,21
  142bb0:	52845684 	addi	r10,r10,4442
  142bb4:	04800404 	movi	r18,16
  142bb8:	da813615 	stw	r10,1240(sp)
  142bbc:	d8811f17 	ldw	r2,1148(sp)
  142bc0:	9400190e 	bge	r18,r16,142c28 <___vfprintf_internal_r+0x6f4>
  142bc4:	050001c4 	movi	r20,7
  142bc8:	dd412c17 	ldw	r21,1200(sp)
  142bcc:	00000306 	br	142bdc <___vfprintf_internal_r+0x6a8>
  142bd0:	843ffc04 	addi	r16,r16,-16
  142bd4:	42000204 	addi	r8,r8,8
  142bd8:	9400130e 	bge	r18,r16,142c28 <___vfprintf_internal_r+0x6f4>
  142bdc:	18c00404 	addi	r3,r3,16
  142be0:	10800044 	addi	r2,r2,1
  142be4:	01000574 	movhi	r4,21
  142be8:	21045684 	addi	r4,r4,4442
  142bec:	41000015 	stw	r4,0(r8)
  142bf0:	44800115 	stw	r18,4(r8)
  142bf4:	d8c12015 	stw	r3,1152(sp)
  142bf8:	d8811f15 	stw	r2,1148(sp)
  142bfc:	a0bff40e 	bge	r20,r2,142bd0 <___vfprintf_internal_r+0x69c>
  142c00:	a809883a 	mov	r4,r21
  142c04:	b80b883a 	mov	r5,r23
  142c08:	d9811e04 	addi	r6,sp,1144
  142c0c:	014963c0 	call	14963c <__sprint_r>
  142c10:	1000861e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  142c14:	843ffc04 	addi	r16,r16,-16
  142c18:	d8c12017 	ldw	r3,1152(sp)
  142c1c:	d8811f17 	ldw	r2,1148(sp)
  142c20:	da000404 	addi	r8,sp,16
  142c24:	943fed16 	blt	r18,r16,142bdc <___vfprintf_internal_r+0x6a8>
  142c28:	da813617 	ldw	r10,1240(sp)
  142c2c:	1c07883a 	add	r3,r3,r16
  142c30:	10800044 	addi	r2,r2,1
  142c34:	42800015 	stw	r10,0(r8)
  142c38:	44000115 	stw	r16,4(r8)
  142c3c:	d8c12015 	stw	r3,1152(sp)
  142c40:	d8811f15 	stw	r2,1148(sp)
  142c44:	010001c4 	movi	r4,7
  142c48:	2080060e 	bge	r4,r2,142c64 <___vfprintf_internal_r+0x730>
  142c4c:	d9012c17 	ldw	r4,1200(sp)
  142c50:	b80b883a 	mov	r5,r23
  142c54:	d9811e04 	addi	r6,sp,1144
  142c58:	014963c0 	call	14963c <__sprint_r>
  142c5c:	1000731e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  142c60:	d8c12017 	ldw	r3,1152(sp)
  142c64:	d8812b17 	ldw	r2,1196(sp)
  142c68:	da813017 	ldw	r10,1216(sp)
  142c6c:	1280010e 	bge	r2,r10,142c74 <___vfprintf_internal_r+0x740>
  142c70:	5005883a 	mov	r2,r10
  142c74:	da813117 	ldw	r10,1220(sp)
  142c78:	5095883a 	add	r10,r10,r2
  142c7c:	da813115 	stw	r10,1220(sp)
  142c80:	18028b1e 	bne	r3,zero,1436b0 <___vfprintf_internal_r+0x117c>
  142c84:	88800007 	ldb	r2,0(r17)
  142c88:	d8011f15 	stw	zero,1148(sp)
  142c8c:	da000404 	addi	r8,sp,16
  142c90:	103e691e 	bne	r2,zero,142638 <___vfprintf_internal_r+0x104>
  142c94:	8821883a 	mov	r16,r17
  142c98:	003e7f06 	br	142698 <___vfprintf_internal_r+0x164>
  142c9c:	da812a17 	ldw	r10,1192(sp)
  142ca0:	52800414 	ori	r10,r10,16
  142ca4:	da812a15 	stw	r10,1192(sp)
  142ca8:	da812a17 	ldw	r10,1192(sp)
  142cac:	5080080c 	andi	r2,r10,32
  142cb0:	10006626 	beq	r2,zero,142e4c <___vfprintf_internal_r+0x918>
  142cb4:	da812f17 	ldw	r10,1212(sp)
  142cb8:	0007883a 	mov	r3,zero
  142cbc:	55400017 	ldw	r21,0(r10)
  142cc0:	55800117 	ldw	r22,4(r10)
  142cc4:	52800204 	addi	r10,r10,8
  142cc8:	da812f15 	stw	r10,1212(sp)
  142ccc:	ad84b03a 	or	r2,r21,r22
  142cd0:	d8012785 	stb	zero,1182(sp)
  142cd4:	0039883a 	mov	fp,zero
  142cd8:	003ef106 	br	1428a0 <___vfprintf_internal_r+0x36c>
  142cdc:	da813017 	ldw	r10,1216(sp)
  142ce0:	d8812f15 	stw	r2,1212(sp)
  142ce4:	0295c83a 	sub	r10,zero,r10
  142ce8:	da813015 	stw	r10,1216(sp)
  142cec:	da812a17 	ldw	r10,1192(sp)
  142cf0:	52800114 	ori	r10,r10,4
  142cf4:	da812a15 	stw	r10,1192(sp)
  142cf8:	8c800007 	ldb	r18,0(r17)
  142cfc:	003e7306 	br	1426cc <___vfprintf_internal_r+0x198>
  142d00:	d9012c17 	ldw	r4,1200(sp)
  142d04:	b80b883a 	mov	r5,r23
  142d08:	01445340 	call	144534 <__swsetup_r>
  142d0c:	10002d1e 	bne	r2,zero,142dc4 <___vfprintf_internal_r+0x890>
  142d10:	b880030b 	ldhu	r2,12(r23)
  142d14:	01000284 	movi	r4,10
  142d18:	1007883a 	mov	r3,r2
  142d1c:	18c0068c 	andi	r3,r3,26
  142d20:	193e2f1e 	bne	r3,r4,1425e0 <___vfprintf_internal_r+0xac>
  142d24:	b8c0038b 	ldhu	r3,14(r23)
  142d28:	193fffcc 	andi	r4,r3,65535
  142d2c:	2120001c 	xori	r4,r4,32768
  142d30:	21200004 	addi	r4,r4,-32768
  142d34:	203e2a16 	blt	r4,zero,1425e0 <___vfprintf_internal_r+0xac>
  142d38:	bac01917 	ldw	r11,100(r23)
  142d3c:	ba800717 	ldw	r10,28(r23)
  142d40:	ba400917 	ldw	r9,36(r23)
  142d44:	d9012c17 	ldw	r4,1200(sp)
  142d48:	d9c12f17 	ldw	r7,1212(sp)
  142d4c:	10bfff4c 	andi	r2,r2,65533
  142d50:	02010004 	movi	r8,1024
  142d54:	d881070d 	sth	r2,1052(sp)
  142d58:	d9410404 	addi	r5,sp,1040
  142d5c:	d8800404 	addi	r2,sp,16
  142d60:	880d883a 	mov	r6,r17
  142d64:	dac11d15 	stw	r11,1140(sp)
  142d68:	d8c1078d 	sth	r3,1054(sp)
  142d6c:	da810b15 	stw	r10,1068(sp)
  142d70:	da410d15 	stw	r9,1076(sp)
  142d74:	d8810415 	stw	r2,1040(sp)
  142d78:	d8810815 	stw	r2,1056(sp)
  142d7c:	da010615 	stw	r8,1048(sp)
  142d80:	da010915 	stw	r8,1060(sp)
  142d84:	d8010a15 	stw	zero,1064(sp)
  142d88:	01425340 	call	142534 <___vfprintf_internal_r>
  142d8c:	1021883a 	mov	r16,r2
  142d90:	10000416 	blt	r2,zero,142da4 <___vfprintf_internal_r+0x870>
  142d94:	d9012c17 	ldw	r4,1200(sp)
  142d98:	d9410404 	addi	r5,sp,1040
  142d9c:	0145eac0 	call	145eac <_fflush_r>
  142da0:	1005cc1e 	bne	r2,zero,1444d4 <___vfprintf_internal_r+0x1fa0>
  142da4:	d881070b 	ldhu	r2,1052(sp)
  142da8:	1080100c 	andi	r2,r2,64
  142dac:	10000326 	beq	r2,zero,142dbc <___vfprintf_internal_r+0x888>
  142db0:	b880030b 	ldhu	r2,12(r23)
  142db4:	10801014 	ori	r2,r2,64
  142db8:	b880030d 	sth	r2,12(r23)
  142dbc:	8005883a 	mov	r2,r16
  142dc0:	00000106 	br	142dc8 <___vfprintf_internal_r+0x894>
  142dc4:	00bfffc4 	movi	r2,-1
  142dc8:	dfc14917 	ldw	ra,1316(sp)
  142dcc:	df014817 	ldw	fp,1312(sp)
  142dd0:	ddc14717 	ldw	r23,1308(sp)
  142dd4:	dd814617 	ldw	r22,1304(sp)
  142dd8:	dd414517 	ldw	r21,1300(sp)
  142ddc:	dd014417 	ldw	r20,1296(sp)
  142de0:	dcc14317 	ldw	r19,1292(sp)
  142de4:	dc814217 	ldw	r18,1288(sp)
  142de8:	dc414117 	ldw	r17,1284(sp)
  142dec:	dc014017 	ldw	r16,1280(sp)
  142df0:	dec14a04 	addi	sp,sp,1320
  142df4:	f800283a 	ret
  142df8:	d9012c17 	ldw	r4,1200(sp)
  142dfc:	b80b883a 	mov	r5,r23
  142e00:	d9811e04 	addi	r6,sp,1144
  142e04:	014963c0 	call	14963c <__sprint_r>
  142e08:	1000081e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  142e0c:	da000404 	addi	r8,sp,16
  142e10:	003e1e06 	br	14268c <___vfprintf_internal_r+0x158>
  142e14:	d8812017 	ldw	r2,1152(sp)
  142e18:	10000426 	beq	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  142e1c:	d9012c17 	ldw	r4,1200(sp)
  142e20:	b80b883a 	mov	r5,r23
  142e24:	d9811e04 	addi	r6,sp,1144
  142e28:	014963c0 	call	14963c <__sprint_r>
  142e2c:	b880030b 	ldhu	r2,12(r23)
  142e30:	1080100c 	andi	r2,r2,64
  142e34:	103fe31e 	bne	r2,zero,142dc4 <___vfprintf_internal_r+0x890>
  142e38:	d8813117 	ldw	r2,1220(sp)
  142e3c:	003fe206 	br	142dc8 <___vfprintf_internal_r+0x894>
  142e40:	5009883a 	mov	r4,r10
  142e44:	01461b80 	call	1461b8 <__sinit>
  142e48:	003dd306 	br	142598 <___vfprintf_internal_r+0x64>
  142e4c:	da812a17 	ldw	r10,1192(sp)
  142e50:	5080040c 	andi	r2,r10,16
  142e54:	1003d926 	beq	r2,zero,143dbc <___vfprintf_internal_r+0x1888>
  142e58:	da812f17 	ldw	r10,1212(sp)
  142e5c:	55400017 	ldw	r21,0(r10)
  142e60:	52800104 	addi	r10,r10,4
  142e64:	002d883a 	mov	r22,zero
  142e68:	da812f15 	stw	r10,1212(sp)
  142e6c:	0007883a 	mov	r3,zero
  142e70:	a805883a 	mov	r2,r21
  142e74:	003f9606 	br	142cd0 <___vfprintf_internal_r+0x79c>
  142e78:	da812f17 	ldw	r10,1212(sp)
  142e7c:	00c00044 	movi	r3,1
  142e80:	55400017 	ldw	r21,0(r10)
  142e84:	55800117 	ldw	r22,4(r10)
  142e88:	52800204 	addi	r10,r10,8
  142e8c:	da812f15 	stw	r10,1212(sp)
  142e90:	ad84b03a 	or	r2,r21,r22
  142e94:	003f8e06 	br	142cd0 <___vfprintf_internal_r+0x79c>
  142e98:	d8013015 	stw	zero,1216(sp)
  142e9c:	90bff404 	addi	r2,r18,-48
  142ea0:	000b883a 	mov	r5,zero
  142ea4:	8c800007 	ldb	r18,0(r17)
  142ea8:	294002a4 	muli	r5,r5,10
  142eac:	8c400044 	addi	r17,r17,1
  142eb0:	8815883a 	mov	r10,r17
  142eb4:	288b883a 	add	r5,r5,r2
  142eb8:	90bff404 	addi	r2,r18,-48
  142ebc:	20bff92e 	bgeu	r4,r2,142ea4 <___vfprintf_internal_r+0x970>
  142ec0:	d9413015 	stw	r5,1216(sp)
  142ec4:	5023883a 	mov	r17,r10
  142ec8:	003e0106 	br	1426d0 <___vfprintf_internal_r+0x19c>
  142ecc:	da812f17 	ldw	r10,1212(sp)
  142ed0:	00800c04 	movi	r2,48
  142ed4:	d8812705 	stb	r2,1180(sp)
  142ed8:	55400017 	ldw	r21,0(r10)
  142edc:	da812a17 	ldw	r10,1192(sp)
  142ee0:	00801e04 	movi	r2,120
  142ee4:	d8812745 	stb	r2,1181(sp)
  142ee8:	52800094 	ori	r10,r10,2
  142eec:	da812a15 	stw	r10,1192(sp)
  142ef0:	da812f17 	ldw	r10,1212(sp)
  142ef4:	002d883a 	mov	r22,zero
  142ef8:	00c00084 	movi	r3,2
  142efc:	52800104 	addi	r10,r10,4
  142f00:	da812f15 	stw	r10,1212(sp)
  142f04:	02800574 	movhi	r10,21
  142f08:	52844b04 	addi	r10,r10,4396
  142f0c:	da813b15 	stw	r10,1260(sp)
  142f10:	04801e04 	movi	r18,120
  142f14:	a805883a 	mov	r2,r21
  142f18:	003f6d06 	br	142cd0 <___vfprintf_internal_r+0x79c>
  142f1c:	da812a17 	ldw	r10,1192(sp)
  142f20:	52800814 	ori	r10,r10,32
  142f24:	da812a15 	stw	r10,1192(sp)
  142f28:	8c800007 	ldb	r18,0(r17)
  142f2c:	003de706 	br	1426cc <___vfprintf_internal_r+0x198>
  142f30:	da812a17 	ldw	r10,1192(sp)
  142f34:	d9812785 	stb	r6,1182(sp)
  142f38:	52800414 	ori	r10,r10,16
  142f3c:	da812a15 	stw	r10,1192(sp)
  142f40:	da812a17 	ldw	r10,1192(sp)
  142f44:	5080080c 	andi	r2,r10,32
  142f48:	10005e26 	beq	r2,zero,1430c4 <___vfprintf_internal_r+0xb90>
  142f4c:	da812f17 	ldw	r10,1212(sp)
  142f50:	50800117 	ldw	r2,4(r10)
  142f54:	55400017 	ldw	r21,0(r10)
  142f58:	52800204 	addi	r10,r10,8
  142f5c:	da812f15 	stw	r10,1212(sp)
  142f60:	102d883a 	mov	r22,r2
  142f64:	10030516 	blt	r2,zero,143b7c <___vfprintf_internal_r+0x1648>
  142f68:	df012783 	ldbu	fp,1182(sp)
  142f6c:	00c00044 	movi	r3,1
  142f70:	ad84b03a 	or	r2,r21,r22
  142f74:	003e4a06 	br	1428a0 <___vfprintf_internal_r+0x36c>
  142f78:	da812f17 	ldw	r10,1212(sp)
  142f7c:	d9812785 	stb	r6,1182(sp)
  142f80:	04000044 	movi	r16,1
  142f84:	52800017 	ldw	r10,0(r10)
  142f88:	da813715 	stw	r10,1244(sp)
  142f8c:	da812f17 	ldw	r10,1212(sp)
  142f90:	d9013717 	ldw	r4,1244(sp)
  142f94:	52800117 	ldw	r10,4(r10)
  142f98:	da013f15 	stw	r8,1276(sp)
  142f9c:	da813915 	stw	r10,1252(sp)
  142fa0:	da812f17 	ldw	r10,1212(sp)
  142fa4:	d9413917 	ldw	r5,1252(sp)
  142fa8:	52800204 	addi	r10,r10,8
  142fac:	da812f15 	stw	r10,1212(sp)
  142fb0:	01492940 	call	149294 <__fpclassifyd>
  142fb4:	da013f17 	ldw	r8,1276(sp)
  142fb8:	d9013717 	ldw	r4,1244(sp)
  142fbc:	d9413917 	ldw	r5,1252(sp)
  142fc0:	1402f71e 	bne	r2,r16,143ba0 <___vfprintf_internal_r+0x166c>
  142fc4:	000d883a 	mov	r6,zero
  142fc8:	000f883a 	mov	r7,zero
  142fcc:	014d2100 	call	14d210 <__ledf2>
  142fd0:	da013f17 	ldw	r8,1276(sp)
  142fd4:	10045a16 	blt	r2,zero,144140 <___vfprintf_internal_r+0x1c0c>
  142fd8:	df012783 	ldbu	fp,1182(sp)
  142fdc:	008011c4 	movi	r2,71
  142fe0:	1483ef0e 	bge	r2,r18,143fa0 <___vfprintf_internal_r+0x1a6c>
  142fe4:	04000574 	movhi	r16,21
  142fe8:	84044304 	addi	r16,r16,4364
  142fec:	da812a17 	ldw	r10,1192(sp)
  142ff0:	00bfdfc4 	movi	r2,-129
  142ff4:	00c000c4 	movi	r3,3
  142ff8:	5094703a 	and	r10,r10,r2
  142ffc:	d8c12b15 	stw	r3,1196(sp)
  143000:	da812a15 	stw	r10,1192(sp)
  143004:	d8c12e15 	stw	r3,1208(sp)
  143008:	0029883a 	mov	r20,zero
  14300c:	d8013315 	stw	zero,1228(sp)
  143010:	003e3906 	br	1428f8 <___vfprintf_internal_r+0x3c4>
  143014:	02800574 	movhi	r10,21
  143018:	52844b04 	addi	r10,r10,4396
  14301c:	da813b15 	stw	r10,1260(sp)
  143020:	da812a17 	ldw	r10,1192(sp)
  143024:	d9812785 	stb	r6,1182(sp)
  143028:	5080080c 	andi	r2,r10,32
  14302c:	10001826 	beq	r2,zero,143090 <___vfprintf_internal_r+0xb5c>
  143030:	da812f17 	ldw	r10,1212(sp)
  143034:	55400017 	ldw	r21,0(r10)
  143038:	55800117 	ldw	r22,4(r10)
  14303c:	52800204 	addi	r10,r10,8
  143040:	da812f15 	stw	r10,1212(sp)
  143044:	da812a17 	ldw	r10,1192(sp)
  143048:	5080004c 	andi	r2,r10,1
  14304c:	10025826 	beq	r2,zero,1439b0 <___vfprintf_internal_r+0x147c>
  143050:	ad84b03a 	or	r2,r21,r22
  143054:	10035126 	beq	r2,zero,143d9c <___vfprintf_internal_r+0x1868>
  143058:	00c00c04 	movi	r3,48
  14305c:	52800094 	ori	r10,r10,2
  143060:	d8c12705 	stb	r3,1180(sp)
  143064:	dc812745 	stb	r18,1181(sp)
  143068:	da812a15 	stw	r10,1192(sp)
  14306c:	00c00084 	movi	r3,2
  143070:	003f1706 	br	142cd0 <___vfprintf_internal_r+0x79c>
  143074:	02800574 	movhi	r10,21
  143078:	52844604 	addi	r10,r10,4376
  14307c:	da813b15 	stw	r10,1260(sp)
  143080:	da812a17 	ldw	r10,1192(sp)
  143084:	d9812785 	stb	r6,1182(sp)
  143088:	5080080c 	andi	r2,r10,32
  14308c:	103fe81e 	bne	r2,zero,143030 <___vfprintf_internal_r+0xafc>
  143090:	da812a17 	ldw	r10,1192(sp)
  143094:	5080040c 	andi	r2,r10,16
  143098:	10033726 	beq	r2,zero,143d78 <___vfprintf_internal_r+0x1844>
  14309c:	da812f17 	ldw	r10,1212(sp)
  1430a0:	002d883a 	mov	r22,zero
  1430a4:	55400017 	ldw	r21,0(r10)
  1430a8:	52800104 	addi	r10,r10,4
  1430ac:	da812f15 	stw	r10,1212(sp)
  1430b0:	003fe406 	br	143044 <___vfprintf_internal_r+0xb10>
  1430b4:	da812a17 	ldw	r10,1192(sp)
  1430b8:	d9812785 	stb	r6,1182(sp)
  1430bc:	5080080c 	andi	r2,r10,32
  1430c0:	103fa21e 	bne	r2,zero,142f4c <___vfprintf_internal_r+0xa18>
  1430c4:	da812a17 	ldw	r10,1192(sp)
  1430c8:	5080040c 	andi	r2,r10,16
  1430cc:	10034126 	beq	r2,zero,143dd4 <___vfprintf_internal_r+0x18a0>
  1430d0:	da812f17 	ldw	r10,1212(sp)
  1430d4:	55400017 	ldw	r21,0(r10)
  1430d8:	52800104 	addi	r10,r10,4
  1430dc:	da812f15 	stw	r10,1212(sp)
  1430e0:	a82dd7fa 	srai	r22,r21,31
  1430e4:	b005883a 	mov	r2,r22
  1430e8:	003f9e06 	br	142f64 <___vfprintf_internal_r+0xa30>
  1430ec:	da812a17 	ldw	r10,1192(sp)
  1430f0:	52801014 	ori	r10,r10,64
  1430f4:	da812a15 	stw	r10,1192(sp)
  1430f8:	8c800007 	ldb	r18,0(r17)
  1430fc:	003d7306 	br	1426cc <___vfprintf_internal_r+0x198>
  143100:	da812a17 	ldw	r10,1192(sp)
  143104:	52800054 	ori	r10,r10,1
  143108:	da812a15 	stw	r10,1192(sp)
  14310c:	8c800007 	ldb	r18,0(r17)
  143110:	003d6e06 	br	1426cc <___vfprintf_internal_r+0x198>
  143114:	da812f17 	ldw	r10,1212(sp)
  143118:	52800017 	ldw	r10,0(r10)
  14311c:	da813015 	stw	r10,1216(sp)
  143120:	da812f17 	ldw	r10,1212(sp)
  143124:	50800104 	addi	r2,r10,4
  143128:	da813017 	ldw	r10,1216(sp)
  14312c:	503eeb16 	blt	r10,zero,142cdc <___vfprintf_internal_r+0x7a8>
  143130:	d8812f15 	stw	r2,1212(sp)
  143134:	8c800007 	ldb	r18,0(r17)
  143138:	003d6406 	br	1426cc <___vfprintf_internal_r+0x198>
  14313c:	01800ac4 	movi	r6,43
  143140:	8c800007 	ldb	r18,0(r17)
  143144:	003d6106 	br	1426cc <___vfprintf_internal_r+0x198>
  143148:	da812a17 	ldw	r10,1192(sp)
  14314c:	52802014 	ori	r10,r10,128
  143150:	da812a15 	stw	r10,1192(sp)
  143154:	8c800007 	ldb	r18,0(r17)
  143158:	003d5c06 	br	1426cc <___vfprintf_internal_r+0x198>
  14315c:	30803fcc 	andi	r2,r6,255
  143160:	1080201c 	xori	r2,r2,128
  143164:	10bfe004 	addi	r2,r2,-128
  143168:	1003011e 	bne	r2,zero,143d70 <___vfprintf_internal_r+0x183c>
  14316c:	01800804 	movi	r6,32
  143170:	8c800007 	ldb	r18,0(r17)
  143174:	003d5506 	br	1426cc <___vfprintf_internal_r+0x198>
  143178:	8c800007 	ldb	r18,0(r17)
  14317c:	8805883a 	mov	r2,r17
  143180:	91c39526 	beq	r18,r7,143fd8 <___vfprintf_internal_r+0x1aa4>
  143184:	da812a17 	ldw	r10,1192(sp)
  143188:	52800414 	ori	r10,r10,16
  14318c:	da812a15 	stw	r10,1192(sp)
  143190:	003d4e06 	br	1426cc <___vfprintf_internal_r+0x198>
  143194:	da812a17 	ldw	r10,1192(sp)
  143198:	d9812785 	stb	r6,1182(sp)
  14319c:	5080080c 	andi	r2,r10,32
  1431a0:	1002df26 	beq	r2,zero,143d20 <___vfprintf_internal_r+0x17ec>
  1431a4:	da812f17 	ldw	r10,1212(sp)
  1431a8:	50800017 	ldw	r2,0(r10)
  1431ac:	da813117 	ldw	r10,1220(sp)
  1431b0:	5007d7fa 	srai	r3,r10,31
  1431b4:	da812f17 	ldw	r10,1212(sp)
  1431b8:	10c00115 	stw	r3,4(r2)
  1431bc:	52800104 	addi	r10,r10,4
  1431c0:	da812f15 	stw	r10,1212(sp)
  1431c4:	da813117 	ldw	r10,1220(sp)
  1431c8:	12800015 	stw	r10,0(r2)
  1431cc:	003d1806 	br	142630 <___vfprintf_internal_r+0xfc>
  1431d0:	da812f17 	ldw	r10,1212(sp)
  1431d4:	d8012785 	stb	zero,1182(sp)
  1431d8:	54000017 	ldw	r16,0(r10)
  1431dc:	55400104 	addi	r21,r10,4
  1431e0:	8003c926 	beq	r16,zero,144108 <___vfprintf_internal_r+0x1bd4>
  1431e4:	8009883a 	mov	r4,r16
  1431e8:	a0039616 	blt	r20,zero,144044 <___vfprintf_internal_r+0x1b10>
  1431ec:	000b883a 	mov	r5,zero
  1431f0:	a00d883a 	mov	r6,r20
  1431f4:	da013f15 	stw	r8,1276(sp)
  1431f8:	01479140 	call	147914 <memchr>
  1431fc:	da013f17 	ldw	r8,1276(sp)
  143200:	10043126 	beq	r2,zero,1442c8 <___vfprintf_internal_r+0x1d94>
  143204:	1405c83a 	sub	r2,r2,r16
  143208:	d8812e15 	stw	r2,1208(sp)
  14320c:	a0834e16 	blt	r20,r2,143f48 <___vfprintf_internal_r+0x1a14>
  143210:	d8812e17 	ldw	r2,1208(sp)
  143214:	10039016 	blt	r2,zero,144058 <___vfprintf_internal_r+0x1b24>
  143218:	df012783 	ldbu	fp,1182(sp)
  14321c:	d8812b15 	stw	r2,1196(sp)
  143220:	dd412f15 	stw	r21,1212(sp)
  143224:	0029883a 	mov	r20,zero
  143228:	d8013315 	stw	zero,1228(sp)
  14322c:	003db206 	br	1428f8 <___vfprintf_internal_r+0x3c4>
  143230:	da812a17 	ldw	r10,1192(sp)
  143234:	52800214 	ori	r10,r10,8
  143238:	da812a15 	stw	r10,1192(sp)
  14323c:	8c800007 	ldb	r18,0(r17)
  143240:	003d2206 	br	1426cc <___vfprintf_internal_r+0x198>
  143244:	da812f17 	ldw	r10,1212(sp)
  143248:	00c00044 	movi	r3,1
  14324c:	d8c12b15 	stw	r3,1196(sp)
  143250:	50800017 	ldw	r2,0(r10)
  143254:	52800104 	addi	r10,r10,4
  143258:	d8012785 	stb	zero,1182(sp)
  14325c:	d8810405 	stb	r2,1040(sp)
  143260:	da812f15 	stw	r10,1212(sp)
  143264:	d8c12e15 	stw	r3,1208(sp)
  143268:	0029883a 	mov	r20,zero
  14326c:	d8013315 	stw	zero,1228(sp)
  143270:	dc010404 	addi	r16,sp,1040
  143274:	0005883a 	mov	r2,zero
  143278:	003da606 	br	142914 <___vfprintf_internal_r+0x3e0>
  14327c:	8c800007 	ldb	r18,0(r17)
  143280:	89400044 	addi	r5,r17,1
  143284:	92448326 	beq	r18,r9,144494 <___vfprintf_internal_r+0x1f60>
  143288:	90bff404 	addi	r2,r18,-48
  14328c:	2823883a 	mov	r17,r5
  143290:	0029883a 	mov	r20,zero
  143294:	20bd0e36 	bltu	r4,r2,1426d0 <___vfprintf_internal_r+0x19c>
  143298:	8c800007 	ldb	r18,0(r17)
  14329c:	a50002a4 	muli	r20,r20,10
  1432a0:	8c400044 	addi	r17,r17,1
  1432a4:	1529883a 	add	r20,r2,r20
  1432a8:	90bff404 	addi	r2,r18,-48
  1432ac:	20bffa2e 	bgeu	r4,r2,143298 <___vfprintf_internal_r+0xd64>
  1432b0:	a03d070e 	bge	r20,zero,1426d0 <___vfprintf_internal_r+0x19c>
  1432b4:	053fffc4 	movi	r20,-1
  1432b8:	003d0506 	br	1426d0 <___vfprintf_internal_r+0x19c>
  1432bc:	d9812785 	stb	r6,1182(sp)
  1432c0:	903ed426 	beq	r18,zero,142e14 <___vfprintf_internal_r+0x8e0>
  1432c4:	00c00044 	movi	r3,1
  1432c8:	d8c12b15 	stw	r3,1196(sp)
  1432cc:	dc810405 	stb	r18,1040(sp)
  1432d0:	d8012785 	stb	zero,1182(sp)
  1432d4:	003fe306 	br	143264 <___vfprintf_internal_r+0xd30>
  1432d8:	d8c12017 	ldw	r3,1152(sp)
  1432dc:	003dd006 	br	142a20 <___vfprintf_internal_r+0x4ec>
  1432e0:	45400015 	stw	r21,0(r8)
  1432e4:	44000115 	stw	r16,4(r8)
  1432e8:	1c07883a 	add	r3,r3,r16
  1432ec:	10800044 	addi	r2,r2,1
  1432f0:	d8c12015 	stw	r3,1152(sp)
  1432f4:	d8811f15 	stw	r2,1148(sp)
  1432f8:	010001c4 	movi	r4,7
  1432fc:	20be230e 	bge	r4,r2,142b8c <___vfprintf_internal_r+0x658>
  143300:	d9012c17 	ldw	r4,1200(sp)
  143304:	b80b883a 	mov	r5,r23
  143308:	d9811e04 	addi	r6,sp,1144
  14330c:	014963c0 	call	14963c <__sprint_r>
  143310:	103ec61e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143314:	d8c12017 	ldw	r3,1152(sp)
  143318:	da000404 	addi	r8,sp,16
  14331c:	003e1c06 	br	142b90 <___vfprintf_internal_r+0x65c>
  143320:	18803fcc 	andi	r2,r3,255
  143324:	00c00044 	movi	r3,1
  143328:	10c11a26 	beq	r2,r3,143794 <___vfprintf_internal_r+0x1260>
  14332c:	00c00084 	movi	r3,2
  143330:	10c0e51e 	bne	r2,r3,1436c8 <___vfprintf_internal_r+0x1194>
  143334:	d9413b17 	ldw	r5,1260(sp)
  143338:	d8c10dc4 	addi	r3,sp,1079
  14333c:	a88003cc 	andi	r2,r21,15
  143340:	b008973a 	slli	r4,r22,28
  143344:	2885883a 	add	r2,r5,r2
  143348:	a82ad13a 	srli	r21,r21,4
  14334c:	10800003 	ldbu	r2,0(r2)
  143350:	b02cd13a 	srli	r22,r22,4
  143354:	256ab03a 	or	r21,r4,r21
  143358:	18800005 	stb	r2,0(r3)
  14335c:	ad84b03a 	or	r2,r21,r22
  143360:	1821883a 	mov	r16,r3
  143364:	18ffffc4 	addi	r3,r3,-1
  143368:	103ff41e 	bne	r2,zero,14333c <___vfprintf_internal_r+0xe08>
  14336c:	da812917 	ldw	r10,1188(sp)
  143370:	5415c83a 	sub	r10,r10,r16
  143374:	da812e15 	stw	r10,1208(sp)
  143378:	003d5a06 	br	1428e4 <___vfprintf_internal_r+0x3b0>
  14337c:	00801944 	movi	r2,101
  143380:	14807e0e 	bge	r2,r18,14357c <___vfprintf_internal_r+0x1048>
  143384:	d9013717 	ldw	r4,1244(sp)
  143388:	d9413917 	ldw	r5,1252(sp)
  14338c:	000d883a 	mov	r6,zero
  143390:	000f883a 	mov	r7,zero
  143394:	d8c13e15 	stw	r3,1272(sp)
  143398:	da013f15 	stw	r8,1276(sp)
  14339c:	014d0b40 	call	14d0b4 <__eqdf2>
  1433a0:	d8c13e17 	ldw	r3,1272(sp)
  1433a4:	da013f17 	ldw	r8,1276(sp)
  1433a8:	1001221e 	bne	r2,zero,143834 <___vfprintf_internal_r+0x1300>
  1433ac:	d8811f17 	ldw	r2,1148(sp)
  1433b0:	01000574 	movhi	r4,21
  1433b4:	21045204 	addi	r4,r4,4424
  1433b8:	18c00044 	addi	r3,r3,1
  1433bc:	10800044 	addi	r2,r2,1
  1433c0:	41000015 	stw	r4,0(r8)
  1433c4:	01000044 	movi	r4,1
  1433c8:	41000115 	stw	r4,4(r8)
  1433cc:	d8c12015 	stw	r3,1152(sp)
  1433d0:	d8811f15 	stw	r2,1148(sp)
  1433d4:	010001c4 	movi	r4,7
  1433d8:	20829616 	blt	r4,r2,143e34 <___vfprintf_internal_r+0x1900>
  1433dc:	42000204 	addi	r8,r8,8
  1433e0:	d8812617 	ldw	r2,1176(sp)
  1433e4:	da813517 	ldw	r10,1236(sp)
  1433e8:	12800316 	blt	r2,r10,1433f8 <___vfprintf_internal_r+0xec4>
  1433ec:	da812a17 	ldw	r10,1192(sp)
  1433f0:	5080004c 	andi	r2,r10,1
  1433f4:	103de626 	beq	r2,zero,142b90 <___vfprintf_internal_r+0x65c>
  1433f8:	da813817 	ldw	r10,1248(sp)
  1433fc:	d8811f17 	ldw	r2,1148(sp)
  143400:	010001c4 	movi	r4,7
  143404:	1a87883a 	add	r3,r3,r10
  143408:	da813417 	ldw	r10,1232(sp)
  14340c:	10800044 	addi	r2,r2,1
  143410:	d8c12015 	stw	r3,1152(sp)
  143414:	42800015 	stw	r10,0(r8)
  143418:	da813817 	ldw	r10,1248(sp)
  14341c:	d8811f15 	stw	r2,1148(sp)
  143420:	42800115 	stw	r10,4(r8)
  143424:	2082f216 	blt	r4,r2,143ff0 <___vfprintf_internal_r+0x1abc>
  143428:	42000204 	addi	r8,r8,8
  14342c:	da813517 	ldw	r10,1236(sp)
  143430:	543fffc4 	addi	r16,r10,-1
  143434:	043dd60e 	bge	zero,r16,142b90 <___vfprintf_internal_r+0x65c>
  143438:	04800404 	movi	r18,16
  14343c:	d8811f17 	ldw	r2,1148(sp)
  143440:	05400574 	movhi	r21,21
  143444:	ad445284 	addi	r21,r21,4426
  143448:	943fa50e 	bge	r18,r16,1432e0 <___vfprintf_internal_r+0xdac>
  14344c:	050001c4 	movi	r20,7
  143450:	dd812c17 	ldw	r22,1200(sp)
  143454:	00000306 	br	143464 <___vfprintf_internal_r+0xf30>
  143458:	42000204 	addi	r8,r8,8
  14345c:	843ffc04 	addi	r16,r16,-16
  143460:	943f9f0e 	bge	r18,r16,1432e0 <___vfprintf_internal_r+0xdac>
  143464:	18c00404 	addi	r3,r3,16
  143468:	10800044 	addi	r2,r2,1
  14346c:	44c00015 	stw	r19,0(r8)
  143470:	44800115 	stw	r18,4(r8)
  143474:	d8c12015 	stw	r3,1152(sp)
  143478:	d8811f15 	stw	r2,1148(sp)
  14347c:	a0bff60e 	bge	r20,r2,143458 <___vfprintf_internal_r+0xf24>
  143480:	b009883a 	mov	r4,r22
  143484:	b80b883a 	mov	r5,r23
  143488:	d9811e04 	addi	r6,sp,1144
  14348c:	014963c0 	call	14963c <__sprint_r>
  143490:	103e661e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143494:	d8c12017 	ldw	r3,1152(sp)
  143498:	d8811f17 	ldw	r2,1148(sp)
  14349c:	da000404 	addi	r8,sp,16
  1434a0:	003fee06 	br	14345c <___vfprintf_internal_r+0xf28>
  1434a4:	da813017 	ldw	r10,1216(sp)
  1434a8:	d8812b17 	ldw	r2,1196(sp)
  1434ac:	50adc83a 	sub	r22,r10,r2
  1434b0:	05bd790e 	bge	zero,r22,142a98 <___vfprintf_internal_r+0x564>
  1434b4:	07000404 	movi	fp,16
  1434b8:	d8811f17 	ldw	r2,1148(sp)
  1434bc:	05400574 	movhi	r21,21
  1434c0:	ad445284 	addi	r21,r21,4426
  1434c4:	e580230e 	bge	fp,r22,143554 <___vfprintf_internal_r+0x1020>
  1434c8:	a809883a 	mov	r4,r21
  1434cc:	dc012d15 	stw	r16,1204(sp)
  1434d0:	882b883a 	mov	r21,r17
  1434d4:	01c001c4 	movi	r7,7
  1434d8:	b023883a 	mov	r17,r22
  1434dc:	dc012c17 	ldw	r16,1200(sp)
  1434e0:	202d883a 	mov	r22,r4
  1434e4:	00000306 	br	1434f4 <___vfprintf_internal_r+0xfc0>
  1434e8:	8c7ffc04 	addi	r17,r17,-16
  1434ec:	42000204 	addi	r8,r8,8
  1434f0:	e440130e 	bge	fp,r17,143540 <___vfprintf_internal_r+0x100c>
  1434f4:	18c00404 	addi	r3,r3,16
  1434f8:	10800044 	addi	r2,r2,1
  1434fc:	44c00015 	stw	r19,0(r8)
  143500:	47000115 	stw	fp,4(r8)
  143504:	d8c12015 	stw	r3,1152(sp)
  143508:	d8811f15 	stw	r2,1148(sp)
  14350c:	38bff60e 	bge	r7,r2,1434e8 <___vfprintf_internal_r+0xfb4>
  143510:	8009883a 	mov	r4,r16
  143514:	b80b883a 	mov	r5,r23
  143518:	d9811e04 	addi	r6,sp,1144
  14351c:	d9c13e15 	stw	r7,1272(sp)
  143520:	014963c0 	call	14963c <__sprint_r>
  143524:	d9c13e17 	ldw	r7,1272(sp)
  143528:	103e401e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  14352c:	8c7ffc04 	addi	r17,r17,-16
  143530:	d8c12017 	ldw	r3,1152(sp)
  143534:	d8811f17 	ldw	r2,1148(sp)
  143538:	da000404 	addi	r8,sp,16
  14353c:	e47fed16 	blt	fp,r17,1434f4 <___vfprintf_internal_r+0xfc0>
  143540:	dc012d17 	ldw	r16,1204(sp)
  143544:	b009883a 	mov	r4,r22
  143548:	882d883a 	mov	r22,r17
  14354c:	a823883a 	mov	r17,r21
  143550:	202b883a 	mov	r21,r4
  143554:	1d87883a 	add	r3,r3,r22
  143558:	10800044 	addi	r2,r2,1
  14355c:	45400015 	stw	r21,0(r8)
  143560:	45800115 	stw	r22,4(r8)
  143564:	d8c12015 	stw	r3,1152(sp)
  143568:	d8811f15 	stw	r2,1148(sp)
  14356c:	010001c4 	movi	r4,7
  143570:	20817a16 	blt	r4,r2,143b5c <___vfprintf_internal_r+0x1628>
  143574:	42000204 	addi	r8,r8,8
  143578:	003d4706 	br	142a98 <___vfprintf_internal_r+0x564>
  14357c:	da813517 	ldw	r10,1236(sp)
  143580:	00800044 	movi	r2,1
  143584:	1280350e 	bge	r2,r10,14365c <___vfprintf_internal_r+0x1128>
  143588:	dc811f17 	ldw	r18,1148(sp)
  14358c:	00800044 	movi	r2,1
  143590:	18c00044 	addi	r3,r3,1
  143594:	94800044 	addi	r18,r18,1
  143598:	40800115 	stw	r2,4(r8)
  14359c:	44000015 	stw	r16,0(r8)
  1435a0:	d8c12015 	stw	r3,1152(sp)
  1435a4:	dc811f15 	stw	r18,1148(sp)
  1435a8:	008001c4 	movi	r2,7
  1435ac:	14814e16 	blt	r2,r18,143ae8 <___vfprintf_internal_r+0x15b4>
  1435b0:	42000204 	addi	r8,r8,8
  1435b4:	da813817 	ldw	r10,1248(sp)
  1435b8:	94800044 	addi	r18,r18,1
  1435bc:	dc811f15 	stw	r18,1148(sp)
  1435c0:	1aad883a 	add	r22,r3,r10
  1435c4:	da813417 	ldw	r10,1232(sp)
  1435c8:	dd812015 	stw	r22,1152(sp)
  1435cc:	008001c4 	movi	r2,7
  1435d0:	42800015 	stw	r10,0(r8)
  1435d4:	da813817 	ldw	r10,1248(sp)
  1435d8:	42800115 	stw	r10,4(r8)
  1435dc:	14814b16 	blt	r2,r18,143b0c <___vfprintf_internal_r+0x15d8>
  1435e0:	45000204 	addi	r20,r8,8
  1435e4:	d9013717 	ldw	r4,1244(sp)
  1435e8:	d9413917 	ldw	r5,1252(sp)
  1435ec:	000d883a 	mov	r6,zero
  1435f0:	000f883a 	mov	r7,zero
  1435f4:	014d0b40 	call	14d0b4 <__eqdf2>
  1435f8:	da813517 	ldw	r10,1236(sp)
  1435fc:	1000cc26 	beq	r2,zero,143930 <___vfprintf_internal_r+0x13fc>
  143600:	50bfffc4 	addi	r2,r10,-1
  143604:	b0ad883a 	add	r22,r22,r2
  143608:	84000044 	addi	r16,r16,1
  14360c:	94800044 	addi	r18,r18,1
  143610:	a0800115 	stw	r2,4(r20)
  143614:	a4000015 	stw	r16,0(r20)
  143618:	dd812015 	stw	r22,1152(sp)
  14361c:	dc811f15 	stw	r18,1148(sp)
  143620:	008001c4 	movi	r2,7
  143624:	14801916 	blt	r2,r18,14368c <___vfprintf_internal_r+0x1158>
  143628:	a5000204 	addi	r20,r20,8
  14362c:	da813a17 	ldw	r10,1256(sp)
  143630:	d88122c4 	addi	r2,sp,1163
  143634:	94800044 	addi	r18,r18,1
  143638:	5587883a 	add	r3,r10,r22
  14363c:	a0800015 	stw	r2,0(r20)
  143640:	a2800115 	stw	r10,4(r20)
  143644:	d8c12015 	stw	r3,1152(sp)
  143648:	dc811f15 	stw	r18,1148(sp)
  14364c:	008001c4 	movi	r2,7
  143650:	14bf2b16 	blt	r2,r18,143300 <___vfprintf_internal_r+0xdcc>
  143654:	a2000204 	addi	r8,r20,8
  143658:	003d4d06 	br	142b90 <___vfprintf_internal_r+0x65c>
  14365c:	da812a17 	ldw	r10,1192(sp)
  143660:	5088703a 	and	r4,r10,r2
  143664:	203fc81e 	bne	r4,zero,143588 <___vfprintf_internal_r+0x1054>
  143668:	dc811f17 	ldw	r18,1148(sp)
  14366c:	1d800044 	addi	r22,r3,1
  143670:	40800115 	stw	r2,4(r8)
  143674:	94800044 	addi	r18,r18,1
  143678:	44000015 	stw	r16,0(r8)
  14367c:	dd812015 	stw	r22,1152(sp)
  143680:	dc811f15 	stw	r18,1148(sp)
  143684:	008001c4 	movi	r2,7
  143688:	1482480e 	bge	r2,r18,143fac <___vfprintf_internal_r+0x1a78>
  14368c:	d9012c17 	ldw	r4,1200(sp)
  143690:	b80b883a 	mov	r5,r23
  143694:	d9811e04 	addi	r6,sp,1144
  143698:	014963c0 	call	14963c <__sprint_r>
  14369c:	103de31e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1436a0:	dd812017 	ldw	r22,1152(sp)
  1436a4:	dc811f17 	ldw	r18,1148(sp)
  1436a8:	dd000404 	addi	r20,sp,16
  1436ac:	003fdf06 	br	14362c <___vfprintf_internal_r+0x10f8>
  1436b0:	d9012c17 	ldw	r4,1200(sp)
  1436b4:	b80b883a 	mov	r5,r23
  1436b8:	d9811e04 	addi	r6,sp,1144
  1436bc:	014963c0 	call	14963c <__sprint_r>
  1436c0:	103d7026 	beq	r2,zero,142c84 <___vfprintf_internal_r+0x750>
  1436c4:	003dd906 	br	142e2c <___vfprintf_internal_r+0x8f8>
  1436c8:	d8c10dc4 	addi	r3,sp,1079
  1436cc:	a808d0fa 	srli	r4,r21,3
  1436d0:	b00a977a 	slli	r5,r22,29
  1436d4:	b02cd0fa 	srli	r22,r22,3
  1436d8:	ad4001cc 	andi	r21,r21,7
  1436dc:	a8800c04 	addi	r2,r21,48
  1436e0:	292ab03a 	or	r21,r5,r4
  1436e4:	18800005 	stb	r2,0(r3)
  1436e8:	ad88b03a 	or	r4,r21,r22
  1436ec:	1821883a 	mov	r16,r3
  1436f0:	18ffffc4 	addi	r3,r3,-1
  1436f4:	203ff51e 	bne	r4,zero,1436cc <___vfprintf_internal_r+0x1198>
  1436f8:	da812a17 	ldw	r10,1192(sp)
  1436fc:	800b883a 	mov	r5,r16
  143700:	5100004c 	andi	r4,r10,1
  143704:	20000726 	beq	r4,zero,143724 <___vfprintf_internal_r+0x11f0>
  143708:	10803fcc 	andi	r2,r2,255
  14370c:	1080201c 	xori	r2,r2,128
  143710:	10bfe004 	addi	r2,r2,-128
  143714:	01000c04 	movi	r4,48
  143718:	113f1426 	beq	r2,r4,14336c <___vfprintf_internal_r+0xe38>
  14371c:	1821883a 	mov	r16,r3
  143720:	293fffc5 	stb	r4,-1(r5)
  143724:	d8c12917 	ldw	r3,1188(sp)
  143728:	1c07c83a 	sub	r3,r3,r16
  14372c:	d8c12e15 	stw	r3,1208(sp)
  143730:	003c6c06 	br	1428e4 <___vfprintf_internal_r+0x3b0>
  143734:	d9012c17 	ldw	r4,1200(sp)
  143738:	b80b883a 	mov	r5,r23
  14373c:	d9811e04 	addi	r6,sp,1144
  143740:	014963c0 	call	14963c <__sprint_r>
  143744:	103db91e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143748:	d8c12017 	ldw	r3,1152(sp)
  14374c:	da000404 	addi	r8,sp,16
  143750:	003d0106 	br	142b58 <___vfprintf_internal_r+0x624>
  143754:	d9012c17 	ldw	r4,1200(sp)
  143758:	b80b883a 	mov	r5,r23
  14375c:	d9811e04 	addi	r6,sp,1144
  143760:	014963c0 	call	14963c <__sprint_r>
  143764:	103db11e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143768:	d8c12017 	ldw	r3,1152(sp)
  14376c:	da000404 	addi	r8,sp,16
  143770:	003cb806 	br	142a54 <___vfprintf_internal_r+0x520>
  143774:	d9012c17 	ldw	r4,1200(sp)
  143778:	b80b883a 	mov	r5,r23
  14377c:	d9811e04 	addi	r6,sp,1144
  143780:	014963c0 	call	14963c <__sprint_r>
  143784:	103da91e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143788:	d8c12017 	ldw	r3,1152(sp)
  14378c:	da000404 	addi	r8,sp,16
  143790:	003cbe06 	br	142a8c <___vfprintf_internal_r+0x558>
  143794:	b000021e 	bne	r22,zero,1437a0 <___vfprintf_internal_r+0x126c>
  143798:	00800244 	movi	r2,9
  14379c:	15401c2e 	bgeu	r2,r21,143810 <___vfprintf_internal_r+0x12dc>
  1437a0:	dc412b15 	stw	r17,1196(sp)
  1437a4:	d8810dc4 	addi	r2,sp,1079
  1437a8:	b023883a 	mov	r17,r22
  1437ac:	402d883a 	mov	r22,r8
  1437b0:	a809883a 	mov	r4,r21
  1437b4:	880b883a 	mov	r5,r17
  1437b8:	01800284 	movi	r6,10
  1437bc:	000f883a 	mov	r7,zero
  1437c0:	1021883a 	mov	r16,r2
  1437c4:	014b8b80 	call	14b8b8 <__umoddi3>
  1437c8:	10800c04 	addi	r2,r2,48
  1437cc:	a809883a 	mov	r4,r21
  1437d0:	880b883a 	mov	r5,r17
  1437d4:	80800005 	stb	r2,0(r16)
  1437d8:	01800284 	movi	r6,10
  1437dc:	000f883a 	mov	r7,zero
  1437e0:	014b2f40 	call	14b2f4 <__udivdi3>
  1437e4:	1823883a 	mov	r17,r3
  1437e8:	10c6b03a 	or	r3,r2,r3
  1437ec:	102b883a 	mov	r21,r2
  1437f0:	80bfffc4 	addi	r2,r16,-1
  1437f4:	183fee1e 	bne	r3,zero,1437b0 <___vfprintf_internal_r+0x127c>
  1437f8:	d8c12917 	ldw	r3,1188(sp)
  1437fc:	b011883a 	mov	r8,r22
  143800:	dc412b17 	ldw	r17,1196(sp)
  143804:	1c07c83a 	sub	r3,r3,r16
  143808:	d8c12e15 	stw	r3,1208(sp)
  14380c:	003c3506 	br	1428e4 <___vfprintf_internal_r+0x3b0>
  143810:	da813d17 	ldw	r10,1268(sp)
  143814:	ad400c04 	addi	r21,r21,48
  143818:	dd410dc5 	stb	r21,1079(sp)
  14381c:	da812e15 	stw	r10,1208(sp)
  143820:	dc010dc4 	addi	r16,sp,1079
  143824:	003c2f06 	br	1428e4 <___vfprintf_internal_r+0x3b0>
  143828:	d8012e15 	stw	zero,1208(sp)
  14382c:	dc010e04 	addi	r16,sp,1080
  143830:	003c2c06 	br	1428e4 <___vfprintf_internal_r+0x3b0>
  143834:	d8812617 	ldw	r2,1176(sp)
  143838:	0081860e 	bge	zero,r2,143e54 <___vfprintf_internal_r+0x1920>
  14383c:	da813517 	ldw	r10,1236(sp)
  143840:	82a5883a 	add	r18,r16,r10
  143844:	da813317 	ldw	r10,1228(sp)
  143848:	9429c83a 	sub	r20,r18,r16
  14384c:	5500010e 	bge	r10,r20,143854 <___vfprintf_internal_r+0x1320>
  143850:	5029883a 	mov	r20,r10
  143854:	05000a0e 	bge	zero,r20,143880 <___vfprintf_internal_r+0x134c>
  143858:	d8811f17 	ldw	r2,1148(sp)
  14385c:	1d07883a 	add	r3,r3,r20
  143860:	44000015 	stw	r16,0(r8)
  143864:	10800044 	addi	r2,r2,1
  143868:	45000115 	stw	r20,4(r8)
  14386c:	d8c12015 	stw	r3,1152(sp)
  143870:	d8811f15 	stw	r2,1148(sp)
  143874:	010001c4 	movi	r4,7
  143878:	2081fb16 	blt	r4,r2,144068 <___vfprintf_internal_r+0x1b34>
  14387c:	42000204 	addi	r8,r8,8
  143880:	a001f716 	blt	r20,zero,144060 <___vfprintf_internal_r+0x1b2c>
  143884:	da813317 	ldw	r10,1228(sp)
  143888:	5529c83a 	sub	r20,r10,r20
  14388c:	0500520e 	bge	zero,r20,1439d8 <___vfprintf_internal_r+0x14a4>
  143890:	05800404 	movi	r22,16
  143894:	d8811f17 	ldw	r2,1148(sp)
  143898:	05400574 	movhi	r21,21
  14389c:	ad445284 	addi	r21,r21,4426
  1438a0:	b5015a0e 	bge	r22,r20,143e0c <___vfprintf_internal_r+0x18d8>
  1438a4:	8809883a 	mov	r4,r17
  1438a8:	dc012e15 	stw	r16,1208(sp)
  1438ac:	a023883a 	mov	r17,r20
  1438b0:	070001c4 	movi	fp,7
  1438b4:	dc012c17 	ldw	r16,1200(sp)
  1438b8:	2029883a 	mov	r20,r4
  1438bc:	00000306 	br	1438cc <___vfprintf_internal_r+0x1398>
  1438c0:	42000204 	addi	r8,r8,8
  1438c4:	8c7ffc04 	addi	r17,r17,-16
  1438c8:	b4414c0e 	bge	r22,r17,143dfc <___vfprintf_internal_r+0x18c8>
  1438cc:	18c00404 	addi	r3,r3,16
  1438d0:	10800044 	addi	r2,r2,1
  1438d4:	44c00015 	stw	r19,0(r8)
  1438d8:	45800115 	stw	r22,4(r8)
  1438dc:	d8c12015 	stw	r3,1152(sp)
  1438e0:	d8811f15 	stw	r2,1148(sp)
  1438e4:	e0bff60e 	bge	fp,r2,1438c0 <___vfprintf_internal_r+0x138c>
  1438e8:	8009883a 	mov	r4,r16
  1438ec:	b80b883a 	mov	r5,r23
  1438f0:	d9811e04 	addi	r6,sp,1144
  1438f4:	014963c0 	call	14963c <__sprint_r>
  1438f8:	103d4c1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1438fc:	d8c12017 	ldw	r3,1152(sp)
  143900:	d8811f17 	ldw	r2,1148(sp)
  143904:	da000404 	addi	r8,sp,16
  143908:	003fee06 	br	1438c4 <___vfprintf_internal_r+0x1390>
  14390c:	d9012c17 	ldw	r4,1200(sp)
  143910:	b80b883a 	mov	r5,r23
  143914:	d9811e04 	addi	r6,sp,1144
  143918:	014963c0 	call	14963c <__sprint_r>
  14391c:	103d431e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143920:	d8c12017 	ldw	r3,1152(sp)
  143924:	d8812787 	ldb	r2,1182(sp)
  143928:	da000404 	addi	r8,sp,16
  14392c:	003c3c06 	br	142a20 <___vfprintf_internal_r+0x4ec>
  143930:	543fffc4 	addi	r16,r10,-1
  143934:	043f3d0e 	bge	zero,r16,14362c <___vfprintf_internal_r+0x10f8>
  143938:	07000404 	movi	fp,16
  14393c:	05400574 	movhi	r21,21
  143940:	ad445284 	addi	r21,r21,4426
  143944:	e4007c0e 	bge	fp,r16,143b38 <___vfprintf_internal_r+0x1604>
  143948:	dc412e15 	stw	r17,1208(sp)
  14394c:	00c001c4 	movi	r3,7
  143950:	8023883a 	mov	r17,r16
  143954:	dc012c17 	ldw	r16,1200(sp)
  143958:	00000306 	br	143968 <___vfprintf_internal_r+0x1434>
  14395c:	a5000204 	addi	r20,r20,8
  143960:	8c7ffc04 	addi	r17,r17,-16
  143964:	e440720e 	bge	fp,r17,143b30 <___vfprintf_internal_r+0x15fc>
  143968:	b5800404 	addi	r22,r22,16
  14396c:	94800044 	addi	r18,r18,1
  143970:	a4c00015 	stw	r19,0(r20)
  143974:	a7000115 	stw	fp,4(r20)
  143978:	dd812015 	stw	r22,1152(sp)
  14397c:	dc811f15 	stw	r18,1148(sp)
  143980:	1cbff60e 	bge	r3,r18,14395c <___vfprintf_internal_r+0x1428>
  143984:	8009883a 	mov	r4,r16
  143988:	b80b883a 	mov	r5,r23
  14398c:	d9811e04 	addi	r6,sp,1144
  143990:	d8c13e15 	stw	r3,1272(sp)
  143994:	014963c0 	call	14963c <__sprint_r>
  143998:	d8c13e17 	ldw	r3,1272(sp)
  14399c:	103d231e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1439a0:	dd812017 	ldw	r22,1152(sp)
  1439a4:	dc811f17 	ldw	r18,1148(sp)
  1439a8:	dd000404 	addi	r20,sp,16
  1439ac:	003fec06 	br	143960 <___vfprintf_internal_r+0x142c>
  1439b0:	00c00084 	movi	r3,2
  1439b4:	ad84b03a 	or	r2,r21,r22
  1439b8:	003cc506 	br	142cd0 <___vfprintf_internal_r+0x79c>
  1439bc:	d9012c17 	ldw	r4,1200(sp)
  1439c0:	b80b883a 	mov	r5,r23
  1439c4:	d9811e04 	addi	r6,sp,1144
  1439c8:	014963c0 	call	14963c <__sprint_r>
  1439cc:	103d171e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1439d0:	d8c12017 	ldw	r3,1152(sp)
  1439d4:	da000404 	addi	r8,sp,16
  1439d8:	da813317 	ldw	r10,1228(sp)
  1439dc:	d8812617 	ldw	r2,1176(sp)
  1439e0:	82a1883a 	add	r16,r16,r10
  1439e4:	da813517 	ldw	r10,1236(sp)
  1439e8:	12800316 	blt	r2,r10,1439f8 <___vfprintf_internal_r+0x14c4>
  1439ec:	da812a17 	ldw	r10,1192(sp)
  1439f0:	5100004c 	andi	r4,r10,1
  1439f4:	20000d26 	beq	r4,zero,143a2c <___vfprintf_internal_r+0x14f8>
  1439f8:	da813817 	ldw	r10,1248(sp)
  1439fc:	d9011f17 	ldw	r4,1148(sp)
  143a00:	014001c4 	movi	r5,7
  143a04:	1a87883a 	add	r3,r3,r10
  143a08:	da813417 	ldw	r10,1232(sp)
  143a0c:	21000044 	addi	r4,r4,1
  143a10:	d8c12015 	stw	r3,1152(sp)
  143a14:	42800015 	stw	r10,0(r8)
  143a18:	da813817 	ldw	r10,1248(sp)
  143a1c:	d9011f15 	stw	r4,1148(sp)
  143a20:	42800115 	stw	r10,4(r8)
  143a24:	2901a216 	blt	r5,r4,1440b0 <___vfprintf_internal_r+0x1b7c>
  143a28:	42000204 	addi	r8,r8,8
  143a2c:	da813517 	ldw	r10,1236(sp)
  143a30:	9425c83a 	sub	r18,r18,r16
  143a34:	5085c83a 	sub	r2,r10,r2
  143a38:	1029883a 	mov	r20,r2
  143a3c:	9080010e 	bge	r18,r2,143a44 <___vfprintf_internal_r+0x1510>
  143a40:	9029883a 	mov	r20,r18
  143a44:	05000a0e 	bge	zero,r20,143a70 <___vfprintf_internal_r+0x153c>
  143a48:	d9011f17 	ldw	r4,1148(sp)
  143a4c:	1d07883a 	add	r3,r3,r20
  143a50:	44000015 	stw	r16,0(r8)
  143a54:	21000044 	addi	r4,r4,1
  143a58:	45000115 	stw	r20,4(r8)
  143a5c:	d8c12015 	stw	r3,1152(sp)
  143a60:	d9011f15 	stw	r4,1148(sp)
  143a64:	014001c4 	movi	r5,7
  143a68:	29019c16 	blt	r5,r4,1440dc <___vfprintf_internal_r+0x1ba8>
  143a6c:	42000204 	addi	r8,r8,8
  143a70:	a0019816 	blt	r20,zero,1440d4 <___vfprintf_internal_r+0x1ba0>
  143a74:	1521c83a 	sub	r16,r2,r20
  143a78:	043c450e 	bge	zero,r16,142b90 <___vfprintf_internal_r+0x65c>
  143a7c:	04800404 	movi	r18,16
  143a80:	d8811f17 	ldw	r2,1148(sp)
  143a84:	05400574 	movhi	r21,21
  143a88:	ad445284 	addi	r21,r21,4426
  143a8c:	943e140e 	bge	r18,r16,1432e0 <___vfprintf_internal_r+0xdac>
  143a90:	050001c4 	movi	r20,7
  143a94:	dd812c17 	ldw	r22,1200(sp)
  143a98:	00000306 	br	143aa8 <___vfprintf_internal_r+0x1574>
  143a9c:	42000204 	addi	r8,r8,8
  143aa0:	843ffc04 	addi	r16,r16,-16
  143aa4:	943e0e0e 	bge	r18,r16,1432e0 <___vfprintf_internal_r+0xdac>
  143aa8:	18c00404 	addi	r3,r3,16
  143aac:	10800044 	addi	r2,r2,1
  143ab0:	44c00015 	stw	r19,0(r8)
  143ab4:	44800115 	stw	r18,4(r8)
  143ab8:	d8c12015 	stw	r3,1152(sp)
  143abc:	d8811f15 	stw	r2,1148(sp)
  143ac0:	a0bff60e 	bge	r20,r2,143a9c <___vfprintf_internal_r+0x1568>
  143ac4:	b009883a 	mov	r4,r22
  143ac8:	b80b883a 	mov	r5,r23
  143acc:	d9811e04 	addi	r6,sp,1144
  143ad0:	014963c0 	call	14963c <__sprint_r>
  143ad4:	103cd51e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143ad8:	d8c12017 	ldw	r3,1152(sp)
  143adc:	d8811f17 	ldw	r2,1148(sp)
  143ae0:	da000404 	addi	r8,sp,16
  143ae4:	003fee06 	br	143aa0 <___vfprintf_internal_r+0x156c>
  143ae8:	d9012c17 	ldw	r4,1200(sp)
  143aec:	b80b883a 	mov	r5,r23
  143af0:	d9811e04 	addi	r6,sp,1144
  143af4:	014963c0 	call	14963c <__sprint_r>
  143af8:	103ccc1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143afc:	d8c12017 	ldw	r3,1152(sp)
  143b00:	dc811f17 	ldw	r18,1148(sp)
  143b04:	da000404 	addi	r8,sp,16
  143b08:	003eaa06 	br	1435b4 <___vfprintf_internal_r+0x1080>
  143b0c:	d9012c17 	ldw	r4,1200(sp)
  143b10:	b80b883a 	mov	r5,r23
  143b14:	d9811e04 	addi	r6,sp,1144
  143b18:	014963c0 	call	14963c <__sprint_r>
  143b1c:	103cc31e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143b20:	dd812017 	ldw	r22,1152(sp)
  143b24:	dc811f17 	ldw	r18,1148(sp)
  143b28:	dd000404 	addi	r20,sp,16
  143b2c:	003ead06 	br	1435e4 <___vfprintf_internal_r+0x10b0>
  143b30:	8821883a 	mov	r16,r17
  143b34:	dc412e17 	ldw	r17,1208(sp)
  143b38:	b42d883a 	add	r22,r22,r16
  143b3c:	94800044 	addi	r18,r18,1
  143b40:	a5400015 	stw	r21,0(r20)
  143b44:	a4000115 	stw	r16,4(r20)
  143b48:	dd812015 	stw	r22,1152(sp)
  143b4c:	dc811f15 	stw	r18,1148(sp)
  143b50:	008001c4 	movi	r2,7
  143b54:	14beb40e 	bge	r2,r18,143628 <___vfprintf_internal_r+0x10f4>
  143b58:	003ecc06 	br	14368c <___vfprintf_internal_r+0x1158>
  143b5c:	d9012c17 	ldw	r4,1200(sp)
  143b60:	b80b883a 	mov	r5,r23
  143b64:	d9811e04 	addi	r6,sp,1144
  143b68:	014963c0 	call	14963c <__sprint_r>
  143b6c:	103caf1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143b70:	d8c12017 	ldw	r3,1152(sp)
  143b74:	da000404 	addi	r8,sp,16
  143b78:	003bc706 	br	142a98 <___vfprintf_internal_r+0x564>
  143b7c:	056bc83a 	sub	r21,zero,r21
  143b80:	a804c03a 	cmpne	r2,r21,zero
  143b84:	05adc83a 	sub	r22,zero,r22
  143b88:	07000b44 	movi	fp,45
  143b8c:	b0adc83a 	sub	r22,r22,r2
  143b90:	df012785 	stb	fp,1182(sp)
  143b94:	00c00044 	movi	r3,1
  143b98:	ad84b03a 	or	r2,r21,r22
  143b9c:	003b4006 	br	1428a0 <___vfprintf_internal_r+0x36c>
  143ba0:	da013f15 	stw	r8,1276(sp)
  143ba4:	01492940 	call	149294 <__fpclassifyd>
  143ba8:	da013f17 	ldw	r8,1276(sp)
  143bac:	1000e826 	beq	r2,zero,143f50 <___vfprintf_internal_r+0x1a1c>
  143bb0:	05bff7c4 	movi	r22,-33
  143bb4:	00bfffc4 	movi	r2,-1
  143bb8:	95ac703a 	and	r22,r18,r22
  143bbc:	a081d626 	beq	r20,r2,144318 <___vfprintf_internal_r+0x1de4>
  143bc0:	008011c4 	movi	r2,71
  143bc4:	b081d126 	beq	r22,r2,14430c <___vfprintf_internal_r+0x1dd8>
  143bc8:	d8c12a17 	ldw	r3,1192(sp)
  143bcc:	da813917 	ldw	r10,1252(sp)
  143bd0:	18c04014 	ori	r3,r3,256
  143bd4:	d8c12d15 	stw	r3,1204(sp)
  143bd8:	5001d116 	blt	r10,zero,144320 <___vfprintf_internal_r+0x1dec>
  143bdc:	dd413917 	ldw	r21,1252(sp)
  143be0:	d8012b05 	stb	zero,1196(sp)
  143be4:	00801984 	movi	r2,102
  143be8:	90816926 	beq	r18,r2,144190 <___vfprintf_internal_r+0x1c5c>
  143bec:	00801184 	movi	r2,70
  143bf0:	90816726 	beq	r18,r2,144190 <___vfprintf_internal_r+0x1c5c>
  143bf4:	00801144 	movi	r2,69
  143bf8:	b081cd26 	beq	r22,r2,144330 <___vfprintf_internal_r+0x1dfc>
  143bfc:	a039883a 	mov	fp,r20
  143c00:	d8812604 	addi	r2,sp,1176
  143c04:	d8800115 	stw	r2,4(sp)
  143c08:	d9012c17 	ldw	r4,1200(sp)
  143c0c:	d8812504 	addi	r2,sp,1172
  143c10:	d9413717 	ldw	r5,1244(sp)
  143c14:	d8800215 	stw	r2,8(sp)
  143c18:	d8812104 	addi	r2,sp,1156
  143c1c:	df000015 	stw	fp,0(sp)
  143c20:	d8800315 	stw	r2,12(sp)
  143c24:	a80d883a 	mov	r6,r21
  143c28:	01c00084 	movi	r7,2
  143c2c:	da013f15 	stw	r8,1276(sp)
  143c30:	01448700 	call	144870 <_dtoa_r>
  143c34:	1021883a 	mov	r16,r2
  143c38:	008019c4 	movi	r2,103
  143c3c:	da013f17 	ldw	r8,1276(sp)
  143c40:	90800226 	beq	r18,r2,143c4c <___vfprintf_internal_r+0x1718>
  143c44:	008011c4 	movi	r2,71
  143c48:	9080031e 	bne	r18,r2,143c58 <___vfprintf_internal_r+0x1724>
  143c4c:	da812a17 	ldw	r10,1192(sp)
  143c50:	5080004c 	andi	r2,r10,1
  143c54:	1001e926 	beq	r2,zero,1443fc <___vfprintf_internal_r+0x1ec8>
  143c58:	00801184 	movi	r2,70
  143c5c:	8713883a 	add	r9,r16,fp
  143c60:	b0815e26 	beq	r22,r2,1441dc <___vfprintf_internal_r+0x1ca8>
  143c64:	d9013717 	ldw	r4,1244(sp)
  143c68:	a80b883a 	mov	r5,r21
  143c6c:	000d883a 	mov	r6,zero
  143c70:	000f883a 	mov	r7,zero
  143c74:	da013f15 	stw	r8,1276(sp)
  143c78:	da413e15 	stw	r9,1272(sp)
  143c7c:	014d0b40 	call	14d0b4 <__eqdf2>
  143c80:	da013f17 	ldw	r8,1276(sp)
  143c84:	da413e17 	ldw	r9,1272(sp)
  143c88:	10015226 	beq	r2,zero,1441d4 <___vfprintf_internal_r+0x1ca0>
  143c8c:	d8812117 	ldw	r2,1156(sp)
  143c90:	1240062e 	bgeu	r2,r9,143cac <___vfprintf_internal_r+0x1778>
  143c94:	01000c04 	movi	r4,48
  143c98:	10c00044 	addi	r3,r2,1
  143c9c:	d8c12115 	stw	r3,1156(sp)
  143ca0:	11000005 	stb	r4,0(r2)
  143ca4:	d8812117 	ldw	r2,1156(sp)
  143ca8:	127ffb36 	bltu	r2,r9,143c98 <___vfprintf_internal_r+0x1764>
  143cac:	1405c83a 	sub	r2,r2,r16
  143cb0:	d8813515 	stw	r2,1236(sp)
  143cb4:	008011c4 	movi	r2,71
  143cb8:	b0812c26 	beq	r22,r2,14416c <___vfprintf_internal_r+0x1c38>
  143cbc:	00801944 	movi	r2,101
  143cc0:	1482060e 	bge	r2,r18,1444dc <___vfprintf_internal_r+0x1fa8>
  143cc4:	00801984 	movi	r2,102
  143cc8:	9081ce26 	beq	r18,r2,144404 <___vfprintf_internal_r+0x1ed0>
  143ccc:	da812617 	ldw	r10,1176(sp)
  143cd0:	da813315 	stw	r10,1228(sp)
  143cd4:	d8c13317 	ldw	r3,1228(sp)
  143cd8:	da813517 	ldw	r10,1236(sp)
  143cdc:	1a819616 	blt	r3,r10,144338 <___vfprintf_internal_r+0x1e04>
  143ce0:	da812a17 	ldw	r10,1192(sp)
  143ce4:	5080004c 	andi	r2,r10,1
  143ce8:	10019c1e 	bne	r2,zero,14435c <___vfprintf_internal_r+0x1e28>
  143cec:	1805883a 	mov	r2,r3
  143cf0:	18020516 	blt	r3,zero,144508 <___vfprintf_internal_r+0x1fd4>
  143cf4:	d8c13317 	ldw	r3,1228(sp)
  143cf8:	048019c4 	movi	r18,103
  143cfc:	d8c12e15 	stw	r3,1208(sp)
  143d00:	df012b07 	ldb	fp,1196(sp)
  143d04:	e001111e 	bne	fp,zero,14414c <___vfprintf_internal_r+0x1c18>
  143d08:	d8c12d17 	ldw	r3,1204(sp)
  143d0c:	df012783 	ldbu	fp,1182(sp)
  143d10:	d8812b15 	stw	r2,1196(sp)
  143d14:	d8c12a15 	stw	r3,1192(sp)
  143d18:	0029883a 	mov	r20,zero
  143d1c:	003af606 	br	1428f8 <___vfprintf_internal_r+0x3c4>
  143d20:	da812a17 	ldw	r10,1192(sp)
  143d24:	5080040c 	andi	r2,r10,16
  143d28:	10000a1e 	bne	r2,zero,143d54 <___vfprintf_internal_r+0x1820>
  143d2c:	da812a17 	ldw	r10,1192(sp)
  143d30:	5080100c 	andi	r2,r10,64
  143d34:	10000726 	beq	r2,zero,143d54 <___vfprintf_internal_r+0x1820>
  143d38:	da812f17 	ldw	r10,1212(sp)
  143d3c:	50800017 	ldw	r2,0(r10)
  143d40:	52800104 	addi	r10,r10,4
  143d44:	da812f15 	stw	r10,1212(sp)
  143d48:	da813117 	ldw	r10,1220(sp)
  143d4c:	1280000d 	sth	r10,0(r2)
  143d50:	003a3706 	br	142630 <___vfprintf_internal_r+0xfc>
  143d54:	da812f17 	ldw	r10,1212(sp)
  143d58:	50800017 	ldw	r2,0(r10)
  143d5c:	52800104 	addi	r10,r10,4
  143d60:	da812f15 	stw	r10,1212(sp)
  143d64:	da813117 	ldw	r10,1220(sp)
  143d68:	12800015 	stw	r10,0(r2)
  143d6c:	003a3006 	br	142630 <___vfprintf_internal_r+0xfc>
  143d70:	8c800007 	ldb	r18,0(r17)
  143d74:	003a5506 	br	1426cc <___vfprintf_internal_r+0x198>
  143d78:	da812a17 	ldw	r10,1192(sp)
  143d7c:	5080100c 	andi	r2,r10,64
  143d80:	da812f17 	ldw	r10,1212(sp)
  143d84:	10008126 	beq	r2,zero,143f8c <___vfprintf_internal_r+0x1a58>
  143d88:	5540000b 	ldhu	r21,0(r10)
  143d8c:	52800104 	addi	r10,r10,4
  143d90:	002d883a 	mov	r22,zero
  143d94:	da812f15 	stw	r10,1212(sp)
  143d98:	003caa06 	br	143044 <___vfprintf_internal_r+0xb10>
  143d9c:	00c00084 	movi	r3,2
  143da0:	003bcb06 	br	142cd0 <___vfprintf_internal_r+0x79c>
  143da4:	da812a17 	ldw	r10,1192(sp)
  143da8:	5080100c 	andi	r2,r10,64
  143dac:	da812f17 	ldw	r10,1212(sp)
  143db0:	103ab326 	beq	r2,zero,142880 <___vfprintf_internal_r+0x34c>
  143db4:	5540000b 	ldhu	r21,0(r10)
  143db8:	003ab206 	br	142884 <___vfprintf_internal_r+0x350>
  143dbc:	da812a17 	ldw	r10,1192(sp)
  143dc0:	5080100c 	andi	r2,r10,64
  143dc4:	da812f17 	ldw	r10,1212(sp)
  143dc8:	103c2426 	beq	r2,zero,142e5c <___vfprintf_internal_r+0x928>
  143dcc:	5540000b 	ldhu	r21,0(r10)
  143dd0:	003c2306 	br	142e60 <___vfprintf_internal_r+0x92c>
  143dd4:	da812a17 	ldw	r10,1192(sp)
  143dd8:	5080100c 	andi	r2,r10,64
  143ddc:	da812f17 	ldw	r10,1212(sp)
  143de0:	103cbc26 	beq	r2,zero,1430d4 <___vfprintf_internal_r+0xba0>
  143de4:	5540000f 	ldh	r21,0(r10)
  143de8:	52800104 	addi	r10,r10,4
  143dec:	da812f15 	stw	r10,1212(sp)
  143df0:	a82dd7fa 	srai	r22,r21,31
  143df4:	b005883a 	mov	r2,r22
  143df8:	003c5a06 	br	142f64 <___vfprintf_internal_r+0xa30>
  143dfc:	dc012e17 	ldw	r16,1208(sp)
  143e00:	a009883a 	mov	r4,r20
  143e04:	8829883a 	mov	r20,r17
  143e08:	2023883a 	mov	r17,r4
  143e0c:	1d07883a 	add	r3,r3,r20
  143e10:	10800044 	addi	r2,r2,1
  143e14:	45400015 	stw	r21,0(r8)
  143e18:	45000115 	stw	r20,4(r8)
  143e1c:	d8c12015 	stw	r3,1152(sp)
  143e20:	d8811f15 	stw	r2,1148(sp)
  143e24:	010001c4 	movi	r4,7
  143e28:	20bee416 	blt	r4,r2,1439bc <___vfprintf_internal_r+0x1488>
  143e2c:	42000204 	addi	r8,r8,8
  143e30:	003ee906 	br	1439d8 <___vfprintf_internal_r+0x14a4>
  143e34:	d9012c17 	ldw	r4,1200(sp)
  143e38:	b80b883a 	mov	r5,r23
  143e3c:	d9811e04 	addi	r6,sp,1144
  143e40:	014963c0 	call	14963c <__sprint_r>
  143e44:	103bf91e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143e48:	d8c12017 	ldw	r3,1152(sp)
  143e4c:	da000404 	addi	r8,sp,16
  143e50:	003d6306 	br	1433e0 <___vfprintf_internal_r+0xeac>
  143e54:	d9011f17 	ldw	r4,1148(sp)
  143e58:	01400574 	movhi	r5,21
  143e5c:	29445204 	addi	r5,r5,4424
  143e60:	18c00044 	addi	r3,r3,1
  143e64:	21000044 	addi	r4,r4,1
  143e68:	41400015 	stw	r5,0(r8)
  143e6c:	01400044 	movi	r5,1
  143e70:	41400115 	stw	r5,4(r8)
  143e74:	d8c12015 	stw	r3,1152(sp)
  143e78:	d9011f15 	stw	r4,1148(sp)
  143e7c:	014001c4 	movi	r5,7
  143e80:	29004c16 	blt	r5,r4,143fb4 <___vfprintf_internal_r+0x1a80>
  143e84:	42000204 	addi	r8,r8,8
  143e88:	1025883a 	mov	r18,r2
  143e8c:	9000051e 	bne	r18,zero,143ea4 <___vfprintf_internal_r+0x1970>
  143e90:	da813517 	ldw	r10,1236(sp)
  143e94:	5000031e 	bne	r10,zero,143ea4 <___vfprintf_internal_r+0x1970>
  143e98:	da812a17 	ldw	r10,1192(sp)
  143e9c:	5080004c 	andi	r2,r10,1
  143ea0:	103b3b26 	beq	r2,zero,142b90 <___vfprintf_internal_r+0x65c>
  143ea4:	da813817 	ldw	r10,1248(sp)
  143ea8:	d8811f17 	ldw	r2,1148(sp)
  143eac:	010001c4 	movi	r4,7
  143eb0:	1a87883a 	add	r3,r3,r10
  143eb4:	da813417 	ldw	r10,1232(sp)
  143eb8:	10800044 	addi	r2,r2,1
  143ebc:	d8c12015 	stw	r3,1152(sp)
  143ec0:	42800015 	stw	r10,0(r8)
  143ec4:	da813817 	ldw	r10,1248(sp)
  143ec8:	d8811f15 	stw	r2,1148(sp)
  143ecc:	42800115 	stw	r10,4(r8)
  143ed0:	20810416 	blt	r4,r2,1442e4 <___vfprintf_internal_r+0x1db0>
  143ed4:	42000204 	addi	r8,r8,8
  143ed8:	04a5c83a 	sub	r18,zero,r18
  143edc:	0480540e 	bge	zero,r18,144030 <___vfprintf_internal_r+0x1afc>
  143ee0:	05000404 	movi	r20,16
  143ee4:	05400574 	movhi	r21,21
  143ee8:	ad445284 	addi	r21,r21,4426
  143eec:	a480660e 	bge	r20,r18,144088 <___vfprintf_internal_r+0x1b54>
  143ef0:	058001c4 	movi	r22,7
  143ef4:	df012c17 	ldw	fp,1200(sp)
  143ef8:	00000306 	br	143f08 <___vfprintf_internal_r+0x19d4>
  143efc:	42000204 	addi	r8,r8,8
  143f00:	94bffc04 	addi	r18,r18,-16
  143f04:	a480600e 	bge	r20,r18,144088 <___vfprintf_internal_r+0x1b54>
  143f08:	18c00404 	addi	r3,r3,16
  143f0c:	10800044 	addi	r2,r2,1
  143f10:	44c00015 	stw	r19,0(r8)
  143f14:	45000115 	stw	r20,4(r8)
  143f18:	d8c12015 	stw	r3,1152(sp)
  143f1c:	d8811f15 	stw	r2,1148(sp)
  143f20:	b0bff60e 	bge	r22,r2,143efc <___vfprintf_internal_r+0x19c8>
  143f24:	e009883a 	mov	r4,fp
  143f28:	b80b883a 	mov	r5,r23
  143f2c:	d9811e04 	addi	r6,sp,1144
  143f30:	014963c0 	call	14963c <__sprint_r>
  143f34:	103bbd1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143f38:	d8c12017 	ldw	r3,1152(sp)
  143f3c:	d8811f17 	ldw	r2,1148(sp)
  143f40:	da000404 	addi	r8,sp,16
  143f44:	003fee06 	br	143f00 <___vfprintf_internal_r+0x19cc>
  143f48:	dd012e15 	stw	r20,1208(sp)
  143f4c:	003cb006 	br	143210 <___vfprintf_internal_r+0xcdc>
  143f50:	008011c4 	movi	r2,71
  143f54:	14808b16 	blt	r2,r18,144184 <___vfprintf_internal_r+0x1c50>
  143f58:	04000574 	movhi	r16,21
  143f5c:	84044404 	addi	r16,r16,4368
  143f60:	da812a17 	ldw	r10,1192(sp)
  143f64:	00bfdfc4 	movi	r2,-129
  143f68:	00c000c4 	movi	r3,3
  143f6c:	5094703a 	and	r10,r10,r2
  143f70:	d8c12b15 	stw	r3,1196(sp)
  143f74:	da812a15 	stw	r10,1192(sp)
  143f78:	df012783 	ldbu	fp,1182(sp)
  143f7c:	d8c12e15 	stw	r3,1208(sp)
  143f80:	0029883a 	mov	r20,zero
  143f84:	d8013315 	stw	zero,1228(sp)
  143f88:	003a5b06 	br	1428f8 <___vfprintf_internal_r+0x3c4>
  143f8c:	55400017 	ldw	r21,0(r10)
  143f90:	52800104 	addi	r10,r10,4
  143f94:	002d883a 	mov	r22,zero
  143f98:	da812f15 	stw	r10,1212(sp)
  143f9c:	003c2906 	br	143044 <___vfprintf_internal_r+0xb10>
  143fa0:	04000574 	movhi	r16,21
  143fa4:	84044204 	addi	r16,r16,4360
  143fa8:	003c1006 	br	142fec <___vfprintf_internal_r+0xab8>
  143fac:	45000204 	addi	r20,r8,8
  143fb0:	003d9e06 	br	14362c <___vfprintf_internal_r+0x10f8>
  143fb4:	d9012c17 	ldw	r4,1200(sp)
  143fb8:	b80b883a 	mov	r5,r23
  143fbc:	d9811e04 	addi	r6,sp,1144
  143fc0:	014963c0 	call	14963c <__sprint_r>
  143fc4:	103b991e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  143fc8:	dc812617 	ldw	r18,1176(sp)
  143fcc:	d8c12017 	ldw	r3,1152(sp)
  143fd0:	da000404 	addi	r8,sp,16
  143fd4:	003fad06 	br	143e8c <___vfprintf_internal_r+0x1958>
  143fd8:	da812a17 	ldw	r10,1192(sp)
  143fdc:	8c400044 	addi	r17,r17,1
  143fe0:	14800047 	ldb	r18,1(r2)
  143fe4:	52800814 	ori	r10,r10,32
  143fe8:	da812a15 	stw	r10,1192(sp)
  143fec:	0039b706 	br	1426cc <___vfprintf_internal_r+0x198>
  143ff0:	d9012c17 	ldw	r4,1200(sp)
  143ff4:	b80b883a 	mov	r5,r23
  143ff8:	d9811e04 	addi	r6,sp,1144
  143ffc:	014963c0 	call	14963c <__sprint_r>
  144000:	103b8a1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  144004:	d8c12017 	ldw	r3,1152(sp)
  144008:	da000404 	addi	r8,sp,16
  14400c:	003d0706 	br	14342c <___vfprintf_internal_r+0xef8>
  144010:	d9012c17 	ldw	r4,1200(sp)
  144014:	b80b883a 	mov	r5,r23
  144018:	d9811e04 	addi	r6,sp,1144
  14401c:	014963c0 	call	14963c <__sprint_r>
  144020:	103b821e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  144024:	d8c12017 	ldw	r3,1152(sp)
  144028:	d8811f17 	ldw	r2,1148(sp)
  14402c:	da000404 	addi	r8,sp,16
  144030:	da813517 	ldw	r10,1236(sp)
  144034:	10800044 	addi	r2,r2,1
  144038:	44000015 	stw	r16,0(r8)
  14403c:	50c7883a 	add	r3,r10,r3
  144040:	003acd06 	br	142b78 <___vfprintf_internal_r+0x644>
  144044:	da013f15 	stw	r8,1276(sp)
  144048:	01424a80 	call	1424a8 <strlen>
  14404c:	d8812e15 	stw	r2,1208(sp)
  144050:	da013f17 	ldw	r8,1276(sp)
  144054:	103c700e 	bge	r2,zero,143218 <___vfprintf_internal_r+0xce4>
  144058:	0005883a 	mov	r2,zero
  14405c:	003c6e06 	br	143218 <___vfprintf_internal_r+0xce4>
  144060:	0029883a 	mov	r20,zero
  144064:	003e0706 	br	143884 <___vfprintf_internal_r+0x1350>
  144068:	d9012c17 	ldw	r4,1200(sp)
  14406c:	b80b883a 	mov	r5,r23
  144070:	d9811e04 	addi	r6,sp,1144
  144074:	014963c0 	call	14963c <__sprint_r>
  144078:	103b6c1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  14407c:	d8c12017 	ldw	r3,1152(sp)
  144080:	da000404 	addi	r8,sp,16
  144084:	003dfe06 	br	143880 <___vfprintf_internal_r+0x134c>
  144088:	1c87883a 	add	r3,r3,r18
  14408c:	10800044 	addi	r2,r2,1
  144090:	45400015 	stw	r21,0(r8)
  144094:	44800115 	stw	r18,4(r8)
  144098:	d8c12015 	stw	r3,1152(sp)
  14409c:	d8811f15 	stw	r2,1148(sp)
  1440a0:	010001c4 	movi	r4,7
  1440a4:	20bfda16 	blt	r4,r2,144010 <___vfprintf_internal_r+0x1adc>
  1440a8:	42000204 	addi	r8,r8,8
  1440ac:	003fe006 	br	144030 <___vfprintf_internal_r+0x1afc>
  1440b0:	d9012c17 	ldw	r4,1200(sp)
  1440b4:	b80b883a 	mov	r5,r23
  1440b8:	d9811e04 	addi	r6,sp,1144
  1440bc:	014963c0 	call	14963c <__sprint_r>
  1440c0:	103b5a1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1440c4:	d8812617 	ldw	r2,1176(sp)
  1440c8:	d8c12017 	ldw	r3,1152(sp)
  1440cc:	da000404 	addi	r8,sp,16
  1440d0:	003e5606 	br	143a2c <___vfprintf_internal_r+0x14f8>
  1440d4:	0029883a 	mov	r20,zero
  1440d8:	003e6606 	br	143a74 <___vfprintf_internal_r+0x1540>
  1440dc:	d9012c17 	ldw	r4,1200(sp)
  1440e0:	b80b883a 	mov	r5,r23
  1440e4:	d9811e04 	addi	r6,sp,1144
  1440e8:	014963c0 	call	14963c <__sprint_r>
  1440ec:	103b4f1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1440f0:	d8812617 	ldw	r2,1176(sp)
  1440f4:	da813517 	ldw	r10,1236(sp)
  1440f8:	d8c12017 	ldw	r3,1152(sp)
  1440fc:	da000404 	addi	r8,sp,16
  144100:	5085c83a 	sub	r2,r10,r2
  144104:	003e5a06 	br	143a70 <___vfprintf_internal_r+0x153c>
  144108:	00800184 	movi	r2,6
  14410c:	1500012e 	bgeu	r2,r20,144114 <___vfprintf_internal_r+0x1be0>
  144110:	1029883a 	mov	r20,r2
  144114:	dd012e15 	stw	r20,1208(sp)
  144118:	a005883a 	mov	r2,r20
  14411c:	a000c516 	blt	r20,zero,144434 <___vfprintf_internal_r+0x1f00>
  144120:	d8812b15 	stw	r2,1196(sp)
  144124:	dd412f15 	stw	r21,1212(sp)
  144128:	0029883a 	mov	r20,zero
  14412c:	d8013315 	stw	zero,1228(sp)
  144130:	04000574 	movhi	r16,21
  144134:	84045004 	addi	r16,r16,4416
  144138:	0005883a 	mov	r2,zero
  14413c:	0039f506 	br	142914 <___vfprintf_internal_r+0x3e0>
  144140:	07000b44 	movi	fp,45
  144144:	df012785 	stb	fp,1182(sp)
  144148:	003ba406 	br	142fdc <___vfprintf_internal_r+0xaa8>
  14414c:	da812d17 	ldw	r10,1204(sp)
  144150:	00c00b44 	movi	r3,45
  144154:	d8812b15 	stw	r2,1196(sp)
  144158:	d8c12785 	stb	r3,1182(sp)
  14415c:	da812a15 	stw	r10,1192(sp)
  144160:	0029883a 	mov	r20,zero
  144164:	00800b44 	movi	r2,45
  144168:	0039e706 	br	142908 <___vfprintf_internal_r+0x3d4>
  14416c:	d8812617 	ldw	r2,1176(sp)
  144170:	00ffff44 	movi	r3,-3
  144174:	10c02e16 	blt	r2,r3,144230 <___vfprintf_internal_r+0x1cfc>
  144178:	a0802d16 	blt	r20,r2,144230 <___vfprintf_internal_r+0x1cfc>
  14417c:	d8813315 	stw	r2,1228(sp)
  144180:	003ed406 	br	143cd4 <___vfprintf_internal_r+0x17a0>
  144184:	04000574 	movhi	r16,21
  144188:	84044504 	addi	r16,r16,4372
  14418c:	003f7406 	br	143f60 <___vfprintf_internal_r+0x1a2c>
  144190:	d8812604 	addi	r2,sp,1176
  144194:	d8800115 	stw	r2,4(sp)
  144198:	d9012c17 	ldw	r4,1200(sp)
  14419c:	d8812504 	addi	r2,sp,1172
  1441a0:	d9413717 	ldw	r5,1244(sp)
  1441a4:	d8800215 	stw	r2,8(sp)
  1441a8:	d8812104 	addi	r2,sp,1156
  1441ac:	dd000015 	stw	r20,0(sp)
  1441b0:	d8800315 	stw	r2,12(sp)
  1441b4:	a80d883a 	mov	r6,r21
  1441b8:	01c000c4 	movi	r7,3
  1441bc:	da013f15 	stw	r8,1276(sp)
  1441c0:	01448700 	call	144870 <_dtoa_r>
  1441c4:	1021883a 	mov	r16,r2
  1441c8:	a039883a 	mov	fp,r20
  1441cc:	da013f17 	ldw	r8,1276(sp)
  1441d0:	003ea106 	br	143c58 <___vfprintf_internal_r+0x1724>
  1441d4:	4805883a 	mov	r2,r9
  1441d8:	003eb406 	br	143cac <___vfprintf_internal_r+0x1778>
  1441dc:	81000007 	ldb	r4,0(r16)
  1441e0:	00800c04 	movi	r2,48
  1441e4:	20800326 	beq	r4,r2,1441f4 <___vfprintf_internal_r+0x1cc0>
  1441e8:	d8c12617 	ldw	r3,1176(sp)
  1441ec:	48d3883a 	add	r9,r9,r3
  1441f0:	003e9c06 	br	143c64 <___vfprintf_internal_r+0x1730>
  1441f4:	d9013717 	ldw	r4,1244(sp)
  1441f8:	a80b883a 	mov	r5,r21
  1441fc:	000d883a 	mov	r6,zero
  144200:	000f883a 	mov	r7,zero
  144204:	da013f15 	stw	r8,1276(sp)
  144208:	da413e15 	stw	r9,1272(sp)
  14420c:	014d0b40 	call	14d0b4 <__eqdf2>
  144210:	da013f17 	ldw	r8,1276(sp)
  144214:	da413e17 	ldw	r9,1272(sp)
  144218:	103ff326 	beq	r2,zero,1441e8 <___vfprintf_internal_r+0x1cb4>
  14421c:	00800044 	movi	r2,1
  144220:	1707c83a 	sub	r3,r2,fp
  144224:	d8c12615 	stw	r3,1176(sp)
  144228:	48d3883a 	add	r9,r9,r3
  14422c:	003e8d06 	br	143c64 <___vfprintf_internal_r+0x1730>
  144230:	94bfff84 	addi	r18,r18,-2
  144234:	157fffc4 	addi	r21,r2,-1
  144238:	dd412615 	stw	r21,1176(sp)
  14423c:	dc8122c5 	stb	r18,1163(sp)
  144240:	a8008916 	blt	r21,zero,144468 <___vfprintf_internal_r+0x1f34>
  144244:	00800ac4 	movi	r2,43
  144248:	d8812305 	stb	r2,1164(sp)
  14424c:	05000244 	movi	r20,9
  144250:	a5404a16 	blt	r20,r21,14437c <___vfprintf_internal_r+0x1e48>
  144254:	00800c04 	movi	r2,48
  144258:	ad400c04 	addi	r21,r21,48
  14425c:	d8812345 	stb	r2,1165(sp)
  144260:	dd412385 	stb	r21,1166(sp)
  144264:	d8c123c4 	addi	r3,sp,1167
  144268:	d88122c4 	addi	r2,sp,1163
  14426c:	da813517 	ldw	r10,1236(sp)
  144270:	1885c83a 	sub	r2,r3,r2
  144274:	d8813a15 	stw	r2,1256(sp)
  144278:	5095883a 	add	r10,r10,r2
  14427c:	da812e15 	stw	r10,1208(sp)
  144280:	da813517 	ldw	r10,1236(sp)
  144284:	00800044 	movi	r2,1
  144288:	1280070e 	bge	r2,r10,1442a8 <___vfprintf_internal_r+0x1d74>
  14428c:	d8c12e17 	ldw	r3,1208(sp)
  144290:	18c00044 	addi	r3,r3,1
  144294:	d8c12e15 	stw	r3,1208(sp)
  144298:	1805883a 	mov	r2,r3
  14429c:	18000716 	blt	r3,zero,1442bc <___vfprintf_internal_r+0x1d88>
  1442a0:	d8013315 	stw	zero,1228(sp)
  1442a4:	003e9606 	br	143d00 <___vfprintf_internal_r+0x17cc>
  1442a8:	da812a17 	ldw	r10,1192(sp)
  1442ac:	5084703a 	and	r2,r10,r2
  1442b0:	103ff61e 	bne	r2,zero,14428c <___vfprintf_internal_r+0x1d58>
  1442b4:	d8812e17 	ldw	r2,1208(sp)
  1442b8:	103ff90e 	bge	r2,zero,1442a0 <___vfprintf_internal_r+0x1d6c>
  1442bc:	0005883a 	mov	r2,zero
  1442c0:	d8013315 	stw	zero,1228(sp)
  1442c4:	003e8e06 	br	143d00 <___vfprintf_internal_r+0x17cc>
  1442c8:	dd012b15 	stw	r20,1196(sp)
  1442cc:	dd012e15 	stw	r20,1208(sp)
  1442d0:	df012783 	ldbu	fp,1182(sp)
  1442d4:	dd412f15 	stw	r21,1212(sp)
  1442d8:	0029883a 	mov	r20,zero
  1442dc:	d8013315 	stw	zero,1228(sp)
  1442e0:	00398506 	br	1428f8 <___vfprintf_internal_r+0x3c4>
  1442e4:	d9012c17 	ldw	r4,1200(sp)
  1442e8:	b80b883a 	mov	r5,r23
  1442ec:	d9811e04 	addi	r6,sp,1144
  1442f0:	014963c0 	call	14963c <__sprint_r>
  1442f4:	103acd1e 	bne	r2,zero,142e2c <___vfprintf_internal_r+0x8f8>
  1442f8:	dc812617 	ldw	r18,1176(sp)
  1442fc:	d8c12017 	ldw	r3,1152(sp)
  144300:	d8811f17 	ldw	r2,1148(sp)
  144304:	da000404 	addi	r8,sp,16
  144308:	003ef306 	br	143ed8 <___vfprintf_internal_r+0x19a4>
  14430c:	a03e2e1e 	bne	r20,zero,143bc8 <___vfprintf_internal_r+0x1694>
  144310:	8029883a 	mov	r20,r16
  144314:	003e2c06 	br	143bc8 <___vfprintf_internal_r+0x1694>
  144318:	05000184 	movi	r20,6
  14431c:	003e2a06 	br	143bc8 <___vfprintf_internal_r+0x1694>
  144320:	00c00b44 	movi	r3,45
  144324:	5560003c 	xorhi	r21,r10,32768
  144328:	d8c12b05 	stb	r3,1196(sp)
  14432c:	003e2d06 	br	143be4 <___vfprintf_internal_r+0x16b0>
  144330:	a7000044 	addi	fp,r20,1
  144334:	003e3206 	br	143c00 <___vfprintf_internal_r+0x16cc>
  144338:	d8c13317 	ldw	r3,1228(sp)
  14433c:	00c0470e 	bge	zero,r3,14445c <___vfprintf_internal_r+0x1f28>
  144340:	00800044 	movi	r2,1
  144344:	da813517 	ldw	r10,1236(sp)
  144348:	1285883a 	add	r2,r2,r10
  14434c:	d8812e15 	stw	r2,1208(sp)
  144350:	10000716 	blt	r2,zero,144370 <___vfprintf_internal_r+0x1e3c>
  144354:	048019c4 	movi	r18,103
  144358:	003e6906 	br	143d00 <___vfprintf_internal_r+0x17cc>
  14435c:	da813317 	ldw	r10,1228(sp)
  144360:	52800044 	addi	r10,r10,1
  144364:	da812e15 	stw	r10,1208(sp)
  144368:	5005883a 	mov	r2,r10
  14436c:	503ff90e 	bge	r10,zero,144354 <___vfprintf_internal_r+0x1e20>
  144370:	0005883a 	mov	r2,zero
  144374:	048019c4 	movi	r18,103
  144378:	003e6106 	br	143d00 <___vfprintf_internal_r+0x17cc>
  14437c:	d8c12284 	addi	r3,sp,1162
  144380:	4039883a 	mov	fp,r8
  144384:	a809883a 	mov	r4,r21
  144388:	01400284 	movi	r5,10
  14438c:	182d883a 	mov	r22,r3
  144390:	014bf080 	call	14bf08 <__modsi3>
  144394:	10800c04 	addi	r2,r2,48
  144398:	a809883a 	mov	r4,r21
  14439c:	b0800005 	stb	r2,0(r22)
  1443a0:	01400284 	movi	r5,10
  1443a4:	014bec00 	call	14bec0 <__divsi3>
  1443a8:	102b883a 	mov	r21,r2
  1443ac:	b0ffffc4 	addi	r3,r22,-1
  1443b0:	a0bff416 	blt	r20,r2,144384 <___vfprintf_internal_r+0x1e50>
  1443b4:	11400c04 	addi	r5,r2,48
  1443b8:	b17fffc5 	stb	r5,-1(r22)
  1443bc:	d88122c4 	addi	r2,sp,1163
  1443c0:	e011883a 	mov	r8,fp
  1443c4:	18804e2e 	bgeu	r3,r2,144500 <___vfprintf_internal_r+0x1fcc>
  1443c8:	d9012344 	addi	r4,sp,1165
  1443cc:	b007883a 	mov	r3,r22
  1443d0:	00000206 	br	1443dc <___vfprintf_internal_r+0x1ea8>
  1443d4:	19400003 	ldbu	r5,0(r3)
  1443d8:	18c00044 	addi	r3,r3,1
  1443dc:	21400005 	stb	r5,0(r4)
  1443e0:	21000044 	addi	r4,r4,1
  1443e4:	10fffb1e 	bne	r2,r3,1443d4 <___vfprintf_internal_r+0x1ea0>
  1443e8:	d8c12304 	addi	r3,sp,1164
  1443ec:	1d87c83a 	sub	r3,r3,r22
  1443f0:	d9012344 	addi	r4,sp,1165
  1443f4:	20c7883a 	add	r3,r4,r3
  1443f8:	003f9c06 	br	14426c <___vfprintf_internal_r+0x1d38>
  1443fc:	d8812117 	ldw	r2,1156(sp)
  144400:	003e2a06 	br	143cac <___vfprintf_internal_r+0x1778>
  144404:	d8c12617 	ldw	r3,1176(sp)
  144408:	d8c13315 	stw	r3,1228(sp)
  14440c:	00c01a0e 	bge	zero,r3,144478 <___vfprintf_internal_r+0x1f44>
  144410:	a0000a1e 	bne	r20,zero,14443c <___vfprintf_internal_r+0x1f08>
  144414:	da812a17 	ldw	r10,1192(sp)
  144418:	5080004c 	andi	r2,r10,1
  14441c:	1000071e 	bne	r2,zero,14443c <___vfprintf_internal_r+0x1f08>
  144420:	1805883a 	mov	r2,r3
  144424:	18002f16 	blt	r3,zero,1444e4 <___vfprintf_internal_r+0x1fb0>
  144428:	d8c13317 	ldw	r3,1228(sp)
  14442c:	d8c12e15 	stw	r3,1208(sp)
  144430:	003e3306 	br	143d00 <___vfprintf_internal_r+0x17cc>
  144434:	0005883a 	mov	r2,zero
  144438:	003f3906 	br	144120 <___vfprintf_internal_r+0x1bec>
  14443c:	da813317 	ldw	r10,1228(sp)
  144440:	a5000044 	addi	r20,r20,1
  144444:	5529883a 	add	r20,r10,r20
  144448:	dd012e15 	stw	r20,1208(sp)
  14444c:	a005883a 	mov	r2,r20
  144450:	a03e2b0e 	bge	r20,zero,143d00 <___vfprintf_internal_r+0x17cc>
  144454:	0005883a 	mov	r2,zero
  144458:	003e2906 	br	143d00 <___vfprintf_internal_r+0x17cc>
  14445c:	00800084 	movi	r2,2
  144460:	10c5c83a 	sub	r2,r2,r3
  144464:	003fb706 	br	144344 <___vfprintf_internal_r+0x1e10>
  144468:	00800b44 	movi	r2,45
  14446c:	056bc83a 	sub	r21,zero,r21
  144470:	d8812305 	stb	r2,1164(sp)
  144474:	003f7506 	br	14424c <___vfprintf_internal_r+0x1d18>
  144478:	a000111e 	bne	r20,zero,1444c0 <___vfprintf_internal_r+0x1f8c>
  14447c:	da812a17 	ldw	r10,1192(sp)
  144480:	5080004c 	andi	r2,r10,1
  144484:	10000e1e 	bne	r2,zero,1444c0 <___vfprintf_internal_r+0x1f8c>
  144488:	00800044 	movi	r2,1
  14448c:	d8812e15 	stw	r2,1208(sp)
  144490:	003e1b06 	br	143d00 <___vfprintf_internal_r+0x17cc>
  144494:	da812f17 	ldw	r10,1212(sp)
  144498:	8c800043 	ldbu	r18,1(r17)
  14449c:	2823883a 	mov	r17,r5
  1444a0:	55000017 	ldw	r20,0(r10)
  1444a4:	50800104 	addi	r2,r10,4
  1444a8:	d8812f15 	stw	r2,1212(sp)
  1444ac:	a0000f16 	blt	r20,zero,1444ec <___vfprintf_internal_r+0x1fb8>
  1444b0:	94803fcc 	andi	r18,r18,255
  1444b4:	9480201c 	xori	r18,r18,128
  1444b8:	94bfe004 	addi	r18,r18,-128
  1444bc:	00388306 	br	1426cc <___vfprintf_internal_r+0x198>
  1444c0:	a5000084 	addi	r20,r20,2
  1444c4:	dd012e15 	stw	r20,1208(sp)
  1444c8:	a005883a 	mov	r2,r20
  1444cc:	a03e0c0e 	bge	r20,zero,143d00 <___vfprintf_internal_r+0x17cc>
  1444d0:	003fe006 	br	144454 <___vfprintf_internal_r+0x1f20>
  1444d4:	043fffc4 	movi	r16,-1
  1444d8:	003a3206 	br	142da4 <___vfprintf_internal_r+0x870>
  1444dc:	d8812617 	ldw	r2,1176(sp)
  1444e0:	003f5406 	br	144234 <___vfprintf_internal_r+0x1d00>
  1444e4:	0005883a 	mov	r2,zero
  1444e8:	003fcf06 	br	144428 <___vfprintf_internal_r+0x1ef4>
  1444ec:	94803fcc 	andi	r18,r18,255
  1444f0:	9480201c 	xori	r18,r18,128
  1444f4:	053fffc4 	movi	r20,-1
  1444f8:	94bfe004 	addi	r18,r18,-128
  1444fc:	00387306 	br	1426cc <___vfprintf_internal_r+0x198>
  144500:	d8c12344 	addi	r3,sp,1165
  144504:	003f5906 	br	14426c <___vfprintf_internal_r+0x1d38>
  144508:	0005883a 	mov	r2,zero
  14450c:	003df906 	br	143cf4 <___vfprintf_internal_r+0x17c0>

00144510 <__vfprintf_internal>:
  144510:	00800574 	movhi	r2,21
  144514:	108bab04 	addi	r2,r2,11948
  144518:	2007883a 	mov	r3,r4
  14451c:	11000017 	ldw	r4,0(r2)
  144520:	2805883a 	mov	r2,r5
  144524:	300f883a 	mov	r7,r6
  144528:	180b883a 	mov	r5,r3
  14452c:	100d883a 	mov	r6,r2
  144530:	01425341 	jmpi	142534 <___vfprintf_internal_r>

00144534 <__swsetup_r>:
  144534:	00800574 	movhi	r2,21
  144538:	108bab04 	addi	r2,r2,11948
  14453c:	10800017 	ldw	r2,0(r2)
  144540:	defffd04 	addi	sp,sp,-12
  144544:	dc400115 	stw	r17,4(sp)
  144548:	dc000015 	stw	r16,0(sp)
  14454c:	dfc00215 	stw	ra,8(sp)
  144550:	2023883a 	mov	r17,r4
  144554:	2821883a 	mov	r16,r5
  144558:	10000226 	beq	r2,zero,144564 <__swsetup_r+0x30>
  14455c:	10c00e17 	ldw	r3,56(r2)
  144560:	18002e26 	beq	r3,zero,14461c <__swsetup_r+0xe8>
  144564:	8080030b 	ldhu	r2,12(r16)
  144568:	10c0020c 	andi	r3,r2,8
  14456c:	100d883a 	mov	r6,r2
  144570:	18000f26 	beq	r3,zero,1445b0 <__swsetup_r+0x7c>
  144574:	80c00417 	ldw	r3,16(r16)
  144578:	18001526 	beq	r3,zero,1445d0 <__swsetup_r+0x9c>
  14457c:	1100004c 	andi	r4,r2,1
  144580:	20001c1e 	bne	r4,zero,1445f4 <__swsetup_r+0xc0>
  144584:	1080008c 	andi	r2,r2,2
  144588:	1000271e 	bne	r2,zero,144628 <__swsetup_r+0xf4>
  14458c:	80800517 	ldw	r2,20(r16)
  144590:	80800215 	stw	r2,8(r16)
  144594:	18001c26 	beq	r3,zero,144608 <__swsetup_r+0xd4>
  144598:	0005883a 	mov	r2,zero
  14459c:	dfc00217 	ldw	ra,8(sp)
  1445a0:	dc400117 	ldw	r17,4(sp)
  1445a4:	dc000017 	ldw	r16,0(sp)
  1445a8:	dec00304 	addi	sp,sp,12
  1445ac:	f800283a 	ret
  1445b0:	3080040c 	andi	r2,r6,16
  1445b4:	10001726 	beq	r2,zero,144614 <__swsetup_r+0xe0>
  1445b8:	3080010c 	andi	r2,r6,4
  1445bc:	10001d1e 	bne	r2,zero,144634 <__swsetup_r+0x100>
  1445c0:	80c00417 	ldw	r3,16(r16)
  1445c4:	30800214 	ori	r2,r6,8
  1445c8:	8080030d 	sth	r2,12(r16)
  1445cc:	183feb1e 	bne	r3,zero,14457c <__swsetup_r+0x48>
  1445d0:	1140a00c 	andi	r5,r2,640
  1445d4:	01008004 	movi	r4,512
  1445d8:	293fe826 	beq	r5,r4,14457c <__swsetup_r+0x48>
  1445dc:	8809883a 	mov	r4,r17
  1445e0:	800b883a 	mov	r5,r16
  1445e4:	0146f9c0 	call	146f9c <__smakebuf_r>
  1445e8:	8080030b 	ldhu	r2,12(r16)
  1445ec:	80c00417 	ldw	r3,16(r16)
  1445f0:	003fe206 	br	14457c <__swsetup_r+0x48>
  1445f4:	80800517 	ldw	r2,20(r16)
  1445f8:	80000215 	stw	zero,8(r16)
  1445fc:	0085c83a 	sub	r2,zero,r2
  144600:	80800615 	stw	r2,24(r16)
  144604:	183fe41e 	bne	r3,zero,144598 <__swsetup_r+0x64>
  144608:	8080030b 	ldhu	r2,12(r16)
  14460c:	1080200c 	andi	r2,r2,128
  144610:	103fe226 	beq	r2,zero,14459c <__swsetup_r+0x68>
  144614:	00bfffc4 	movi	r2,-1
  144618:	003fe006 	br	14459c <__swsetup_r+0x68>
  14461c:	1009883a 	mov	r4,r2
  144620:	01461b80 	call	1461b8 <__sinit>
  144624:	003fcf06 	br	144564 <__swsetup_r+0x30>
  144628:	0005883a 	mov	r2,zero
  14462c:	80800215 	stw	r2,8(r16)
  144630:	003fd806 	br	144594 <__swsetup_r+0x60>
  144634:	81400c17 	ldw	r5,48(r16)
  144638:	28000626 	beq	r5,zero,144654 <__swsetup_r+0x120>
  14463c:	80801004 	addi	r2,r16,64
  144640:	28800326 	beq	r5,r2,144650 <__swsetup_r+0x11c>
  144644:	8809883a 	mov	r4,r17
  144648:	01465ec0 	call	1465ec <_free_r>
  14464c:	8180030b 	ldhu	r6,12(r16)
  144650:	80000c15 	stw	zero,48(r16)
  144654:	80c00417 	ldw	r3,16(r16)
  144658:	00bff6c4 	movi	r2,-37
  14465c:	118c703a 	and	r6,r2,r6
  144660:	80000115 	stw	zero,4(r16)
  144664:	80c00015 	stw	r3,0(r16)
  144668:	003fd606 	br	1445c4 <__swsetup_r+0x90>

0014466c <quorem>:
  14466c:	defff704 	addi	sp,sp,-36
  144670:	dc000015 	stw	r16,0(sp)
  144674:	20800417 	ldw	r2,16(r4)
  144678:	2c000417 	ldw	r16,16(r5)
  14467c:	dd800615 	stw	r22,24(sp)
  144680:	dd400515 	stw	r21,20(sp)
  144684:	dfc00815 	stw	ra,32(sp)
  144688:	ddc00715 	stw	r23,28(sp)
  14468c:	dd000415 	stw	r20,16(sp)
  144690:	dcc00315 	stw	r19,12(sp)
  144694:	dc800215 	stw	r18,8(sp)
  144698:	dc400115 	stw	r17,4(sp)
  14469c:	202b883a 	mov	r21,r4
  1446a0:	282d883a 	mov	r22,r5
  1446a4:	14007016 	blt	r2,r16,144868 <quorem+0x1fc>
  1446a8:	843fffc4 	addi	r16,r16,-1
  1446ac:	842f883a 	add	r23,r16,r16
  1446b0:	bdef883a 	add	r23,r23,r23
  1446b4:	2c400504 	addi	r17,r5,20
  1446b8:	8de5883a 	add	r18,r17,r23
  1446bc:	25000504 	addi	r20,r4,20
  1446c0:	a5ef883a 	add	r23,r20,r23
  1446c4:	91400017 	ldw	r5,0(r18)
  1446c8:	b9000017 	ldw	r4,0(r23)
  1446cc:	29400044 	addi	r5,r5,1
  1446d0:	014bf540 	call	14bf54 <__udivsi3>
  1446d4:	1027883a 	mov	r19,r2
  1446d8:	10002c26 	beq	r2,zero,14478c <quorem+0x120>
  1446dc:	a00f883a 	mov	r7,r20
  1446e0:	880d883a 	mov	r6,r17
  1446e4:	0013883a 	mov	r9,zero
  1446e8:	0011883a 	mov	r8,zero
  1446ec:	30800017 	ldw	r2,0(r6)
  1446f0:	3ac00017 	ldw	r11,0(r7)
  1446f4:	31800104 	addi	r6,r6,4
  1446f8:	10ffffcc 	andi	r3,r2,65535
  1446fc:	1cc7383a 	mul	r3,r3,r19
  144700:	1004d43a 	srli	r2,r2,16
  144704:	5abfffcc 	andi	r10,r11,65535
  144708:	48c7883a 	add	r3,r9,r3
  14470c:	1812d43a 	srli	r9,r3,16
  144710:	14c5383a 	mul	r2,r2,r19
  144714:	5211883a 	add	r8,r10,r8
  144718:	18ffffcc 	andi	r3,r3,65535
  14471c:	40d5c83a 	sub	r10,r8,r3
  144720:	5810d43a 	srli	r8,r11,16
  144724:	4893883a 	add	r9,r9,r2
  144728:	5005d43a 	srai	r2,r10,16
  14472c:	48ffffcc 	andi	r3,r9,65535
  144730:	40d1c83a 	sub	r8,r8,r3
  144734:	4091883a 	add	r8,r8,r2
  144738:	4004943a 	slli	r2,r8,16
  14473c:	52bfffcc 	andi	r10,r10,65535
  144740:	4812d43a 	srli	r9,r9,16
  144744:	1294b03a 	or	r10,r2,r10
  144748:	3a800015 	stw	r10,0(r7)
  14474c:	4011d43a 	srai	r8,r8,16
  144750:	39c00104 	addi	r7,r7,4
  144754:	91bfe52e 	bgeu	r18,r6,1446ec <quorem+0x80>
  144758:	b8800017 	ldw	r2,0(r23)
  14475c:	10000b1e 	bne	r2,zero,14478c <quorem+0x120>
  144760:	b8bfff04 	addi	r2,r23,-4
  144764:	a080082e 	bgeu	r20,r2,144788 <quorem+0x11c>
  144768:	b8ffff17 	ldw	r3,-4(r23)
  14476c:	18000326 	beq	r3,zero,14477c <quorem+0x110>
  144770:	00000506 	br	144788 <quorem+0x11c>
  144774:	10c00017 	ldw	r3,0(r2)
  144778:	1800031e 	bne	r3,zero,144788 <quorem+0x11c>
  14477c:	10bfff04 	addi	r2,r2,-4
  144780:	843fffc4 	addi	r16,r16,-1
  144784:	a0bffb36 	bltu	r20,r2,144774 <quorem+0x108>
  144788:	ac000415 	stw	r16,16(r21)
  14478c:	a809883a 	mov	r4,r21
  144790:	b00b883a 	mov	r5,r22
  144794:	014850c0 	call	14850c <__mcmp>
  144798:	10002716 	blt	r2,zero,144838 <quorem+0x1cc>
  14479c:	9cc00044 	addi	r19,r19,1
  1447a0:	a00b883a 	mov	r5,r20
  1447a4:	8807883a 	mov	r3,r17
  1447a8:	000d883a 	mov	r6,zero
  1447ac:	2a400017 	ldw	r9,0(r5)
  1447b0:	1a000017 	ldw	r8,0(r3)
  1447b4:	29400104 	addi	r5,r5,4
  1447b8:	49ffffcc 	andi	r7,r9,65535
  1447bc:	40bfffcc 	andi	r2,r8,65535
  1447c0:	398d883a 	add	r6,r7,r6
  1447c4:	308fc83a 	sub	r7,r6,r2
  1447c8:	4010d43a 	srli	r8,r8,16
  1447cc:	480cd43a 	srli	r6,r9,16
  1447d0:	3805d43a 	srai	r2,r7,16
  1447d4:	39ffffcc 	andi	r7,r7,65535
  1447d8:	320dc83a 	sub	r6,r6,r8
  1447dc:	308d883a 	add	r6,r6,r2
  1447e0:	3004943a 	slli	r2,r6,16
  1447e4:	18c00104 	addi	r3,r3,4
  1447e8:	300dd43a 	srai	r6,r6,16
  1447ec:	11ceb03a 	or	r7,r2,r7
  1447f0:	29ffff15 	stw	r7,-4(r5)
  1447f4:	90ffed2e 	bgeu	r18,r3,1447ac <quorem+0x140>
  1447f8:	8405883a 	add	r2,r16,r16
  1447fc:	1085883a 	add	r2,r2,r2
  144800:	a087883a 	add	r3,r20,r2
  144804:	18800017 	ldw	r2,0(r3)
  144808:	10000b1e 	bne	r2,zero,144838 <quorem+0x1cc>
  14480c:	18bfff04 	addi	r2,r3,-4
  144810:	a080082e 	bgeu	r20,r2,144834 <quorem+0x1c8>
  144814:	18ffff17 	ldw	r3,-4(r3)
  144818:	18000326 	beq	r3,zero,144828 <quorem+0x1bc>
  14481c:	00000506 	br	144834 <quorem+0x1c8>
  144820:	10c00017 	ldw	r3,0(r2)
  144824:	1800031e 	bne	r3,zero,144834 <quorem+0x1c8>
  144828:	10bfff04 	addi	r2,r2,-4
  14482c:	843fffc4 	addi	r16,r16,-1
  144830:	a0bffb36 	bltu	r20,r2,144820 <quorem+0x1b4>
  144834:	ac000415 	stw	r16,16(r21)
  144838:	9805883a 	mov	r2,r19
  14483c:	dfc00817 	ldw	ra,32(sp)
  144840:	ddc00717 	ldw	r23,28(sp)
  144844:	dd800617 	ldw	r22,24(sp)
  144848:	dd400517 	ldw	r21,20(sp)
  14484c:	dd000417 	ldw	r20,16(sp)
  144850:	dcc00317 	ldw	r19,12(sp)
  144854:	dc800217 	ldw	r18,8(sp)
  144858:	dc400117 	ldw	r17,4(sp)
  14485c:	dc000017 	ldw	r16,0(sp)
  144860:	dec00904 	addi	sp,sp,36
  144864:	f800283a 	ret
  144868:	0005883a 	mov	r2,zero
  14486c:	003ff306 	br	14483c <quorem+0x1d0>

00144870 <_dtoa_r>:
  144870:	20801017 	ldw	r2,64(r4)
  144874:	deffdf04 	addi	sp,sp,-132
  144878:	dcc01a15 	stw	r19,104(sp)
  14487c:	dc801915 	stw	r18,100(sp)
  144880:	dc401815 	stw	r17,96(sp)
  144884:	dc001715 	stw	r16,92(sp)
  144888:	dfc02015 	stw	ra,128(sp)
  14488c:	df001f15 	stw	fp,124(sp)
  144890:	ddc01e15 	stw	r23,120(sp)
  144894:	dd801d15 	stw	r22,116(sp)
  144898:	dd401c15 	stw	r21,112(sp)
  14489c:	dd001b15 	stw	r20,108(sp)
  1448a0:	d9400315 	stw	r5,12(sp)
  1448a4:	d9c00415 	stw	r7,16(sp)
  1448a8:	2021883a 	mov	r16,r4
  1448ac:	3023883a 	mov	r17,r6
  1448b0:	dcc02317 	ldw	r19,140(sp)
  1448b4:	3025883a 	mov	r18,r6
  1448b8:	10000826 	beq	r2,zero,1448dc <_dtoa_r+0x6c>
  1448bc:	20c01117 	ldw	r3,68(r4)
  1448c0:	01800044 	movi	r6,1
  1448c4:	100b883a 	mov	r5,r2
  1448c8:	30cc983a 	sll	r6,r6,r3
  1448cc:	10c00115 	stw	r3,4(r2)
  1448d0:	11800215 	stw	r6,8(r2)
  1448d4:	0147cf40 	call	147cf4 <_Bfree>
  1448d8:	80001015 	stw	zero,64(r16)
  1448dc:	88002e16 	blt	r17,zero,144998 <_dtoa_r+0x128>
  1448e0:	98000015 	stw	zero,0(r19)
  1448e4:	88dffc2c 	andhi	r3,r17,32752
  1448e8:	009ffc34 	movhi	r2,32752
  1448ec:	18801b26 	beq	r3,r2,14495c <_dtoa_r+0xec>
  1448f0:	d9000317 	ldw	r4,12(sp)
  1448f4:	900b883a 	mov	r5,r18
  1448f8:	000d883a 	mov	r6,zero
  1448fc:	000f883a 	mov	r7,zero
  144900:	014d0b40 	call	14d0b4 <__eqdf2>
  144904:	10002b1e 	bne	r2,zero,1449b4 <_dtoa_r+0x144>
  144908:	d8c02217 	ldw	r3,136(sp)
  14490c:	d9002417 	ldw	r4,144(sp)
  144910:	00800044 	movi	r2,1
  144914:	18800015 	stw	r2,0(r3)
  144918:	2001a026 	beq	r4,zero,144f9c <_dtoa_r+0x72c>
  14491c:	00800574 	movhi	r2,21
  144920:	10845244 	addi	r2,r2,4425
  144924:	20800015 	stw	r2,0(r4)
  144928:	10bfffc4 	addi	r2,r2,-1
  14492c:	dfc02017 	ldw	ra,128(sp)
  144930:	df001f17 	ldw	fp,124(sp)
  144934:	ddc01e17 	ldw	r23,120(sp)
  144938:	dd801d17 	ldw	r22,116(sp)
  14493c:	dd401c17 	ldw	r21,112(sp)
  144940:	dd001b17 	ldw	r20,108(sp)
  144944:	dcc01a17 	ldw	r19,104(sp)
  144948:	dc801917 	ldw	r18,100(sp)
  14494c:	dc401817 	ldw	r17,96(sp)
  144950:	dc001717 	ldw	r16,92(sp)
  144954:	dec02104 	addi	sp,sp,132
  144958:	f800283a 	ret
  14495c:	d8c02217 	ldw	r3,136(sp)
  144960:	d9000317 	ldw	r4,12(sp)
  144964:	0089c3c4 	movi	r2,9999
  144968:	18800015 	stw	r2,0(r3)
  14496c:	20017926 	beq	r4,zero,144f54 <_dtoa_r+0x6e4>
  144970:	00800574 	movhi	r2,21
  144974:	10845e04 	addi	r2,r2,4472
  144978:	d9802417 	ldw	r6,144(sp)
  14497c:	303feb26 	beq	r6,zero,14492c <_dtoa_r+0xbc>
  144980:	10c000c7 	ldb	r3,3(r2)
  144984:	18017a1e 	bne	r3,zero,144f70 <_dtoa_r+0x700>
  144988:	10c000c4 	addi	r3,r2,3
  14498c:	d9c02417 	ldw	r7,144(sp)
  144990:	38c00015 	stw	r3,0(r7)
  144994:	003fe506 	br	14492c <_dtoa_r+0xbc>
  144998:	04a00034 	movhi	r18,32768
  14499c:	94bfffc4 	addi	r18,r18,-1
  1449a0:	8ca4703a 	and	r18,r17,r18
  1449a4:	00800044 	movi	r2,1
  1449a8:	98800015 	stw	r2,0(r19)
  1449ac:	9023883a 	mov	r17,r18
  1449b0:	003fcc06 	br	1448e4 <_dtoa_r+0x74>
  1449b4:	d9400317 	ldw	r5,12(sp)
  1449b8:	d8800204 	addi	r2,sp,8
  1449bc:	8828d53a 	srli	r20,r17,20
  1449c0:	d8800015 	stw	r2,0(sp)
  1449c4:	8009883a 	mov	r4,r16
  1449c8:	900d883a 	mov	r6,r18
  1449cc:	d9c00104 	addi	r7,sp,4
  1449d0:	014886c0 	call	14886c <__d2b>
  1449d4:	1039883a 	mov	fp,r2
  1449d8:	a001671e 	bne	r20,zero,144f78 <_dtoa_r+0x708>
  1449dc:	dd400217 	ldw	r21,8(sp)
  1449e0:	dd000117 	ldw	r20,4(sp)
  1449e4:	00befbc4 	movi	r2,-1041
  1449e8:	ad29883a 	add	r20,r21,r20
  1449ec:	a082d616 	blt	r20,r2,145548 <_dtoa_r+0xcd8>
  1449f0:	d9800317 	ldw	r6,12(sp)
  1449f4:	013f0384 	movi	r4,-1010
  1449f8:	2509c83a 	sub	r4,r4,r20
  1449fc:	a0810484 	addi	r2,r20,1042
  144a00:	8922983a 	sll	r17,r17,r4
  144a04:	3084d83a 	srl	r2,r6,r2
  144a08:	8888b03a 	or	r4,r17,r2
  144a0c:	014e3c00 	call	14e3c0 <__floatunsidf>
  144a10:	1009883a 	mov	r4,r2
  144a14:	017f8434 	movhi	r5,65040
  144a18:	00800044 	movi	r2,1
  144a1c:	194b883a 	add	r5,r3,r5
  144a20:	a53fffc4 	addi	r20,r20,-1
  144a24:	d8800f15 	stw	r2,60(sp)
  144a28:	000d883a 	mov	r6,zero
  144a2c:	01cffe34 	movhi	r7,16376
  144a30:	014d9e80 	call	14d9e8 <__subdf3>
  144a34:	1009883a 	mov	r4,r2
  144a38:	180b883a 	mov	r5,r3
  144a3c:	0198dbf4 	movhi	r6,25455
  144a40:	3190d844 	addi	r6,r6,17249
  144a44:	01cff4f4 	movhi	r7,16339
  144a48:	39e1e9c4 	addi	r7,r7,-30809
  144a4c:	014d2fc0 	call	14d2fc <__muldf3>
  144a50:	180b883a 	mov	r5,r3
  144a54:	01a2d874 	movhi	r6,35681
  144a58:	31b22cc4 	addi	r6,r6,-14157
  144a5c:	01cff1f4 	movhi	r7,16327
  144a60:	39e28a04 	addi	r7,r7,-30168
  144a64:	1009883a 	mov	r4,r2
  144a68:	014bf640 	call	14bf64 <__adddf3>
  144a6c:	a009883a 	mov	r4,r20
  144a70:	1027883a 	mov	r19,r2
  144a74:	1823883a 	mov	r17,r3
  144a78:	014e2f00 	call	14e2f0 <__floatsidf>
  144a7c:	1009883a 	mov	r4,r2
  144a80:	180b883a 	mov	r5,r3
  144a84:	019427f4 	movhi	r6,20639
  144a88:	319e7ec4 	addi	r6,r6,31227
  144a8c:	01cff4f4 	movhi	r7,16339
  144a90:	39d104c4 	addi	r7,r7,17427
  144a94:	014d2fc0 	call	14d2fc <__muldf3>
  144a98:	9809883a 	mov	r4,r19
  144a9c:	880b883a 	mov	r5,r17
  144aa0:	100d883a 	mov	r6,r2
  144aa4:	180f883a 	mov	r7,r3
  144aa8:	014bf640 	call	14bf64 <__adddf3>
  144aac:	1009883a 	mov	r4,r2
  144ab0:	180b883a 	mov	r5,r3
  144ab4:	1027883a 	mov	r19,r2
  144ab8:	1823883a 	mov	r17,r3
  144abc:	014e2700 	call	14e270 <__fixdfsi>
  144ac0:	9809883a 	mov	r4,r19
  144ac4:	880b883a 	mov	r5,r17
  144ac8:	000d883a 	mov	r6,zero
  144acc:	000f883a 	mov	r7,zero
  144ad0:	d8800615 	stw	r2,24(sp)
  144ad4:	014d2100 	call	14d210 <__ledf2>
  144ad8:	10028416 	blt	r2,zero,1454ec <_dtoa_r+0xc7c>
  144adc:	d9000617 	ldw	r4,24(sp)
  144ae0:	00800584 	movi	r2,22
  144ae4:	11027236 	bltu	r2,r4,1454b0 <_dtoa_r+0xc40>
  144ae8:	200490fa 	slli	r2,r4,3
  144aec:	00c00574 	movhi	r3,21
  144af0:	18c47a04 	addi	r3,r3,4584
  144af4:	d9800317 	ldw	r6,12(sp)
  144af8:	1885883a 	add	r2,r3,r2
  144afc:	11000017 	ldw	r4,0(r2)
  144b00:	11400117 	ldw	r5,4(r2)
  144b04:	900f883a 	mov	r7,r18
  144b08:	014d1380 	call	14d138 <__gedf2>
  144b0c:	0082930e 	bge	zero,r2,14555c <_dtoa_r+0xcec>
  144b10:	d9800617 	ldw	r6,24(sp)
  144b14:	d8000e15 	stw	zero,56(sp)
  144b18:	31bfffc4 	addi	r6,r6,-1
  144b1c:	d9800615 	stw	r6,24(sp)
  144b20:	ad2bc83a 	sub	r21,r21,r20
  144b24:	ad7fffc4 	addi	r21,r21,-1
  144b28:	a8026c16 	blt	r21,zero,1454dc <_dtoa_r+0xc6c>
  144b2c:	d8000815 	stw	zero,32(sp)
  144b30:	d8800617 	ldw	r2,24(sp)
  144b34:	10026116 	blt	r2,zero,1454bc <_dtoa_r+0xc4c>
  144b38:	a8ab883a 	add	r21,r21,r2
  144b3c:	d8800b15 	stw	r2,44(sp)
  144b40:	d8000a15 	stw	zero,40(sp)
  144b44:	d9c00417 	ldw	r7,16(sp)
  144b48:	00800244 	movi	r2,9
  144b4c:	11c11636 	bltu	r2,r7,144fa8 <_dtoa_r+0x738>
  144b50:	00800144 	movi	r2,5
  144b54:	11c4cc0e 	bge	r2,r7,145e88 <_dtoa_r+0x1618>
  144b58:	39ffff04 	addi	r7,r7,-4
  144b5c:	d9c00415 	stw	r7,16(sp)
  144b60:	0027883a 	mov	r19,zero
  144b64:	d8c00417 	ldw	r3,16(sp)
  144b68:	008000c4 	movi	r2,3
  144b6c:	1883aa26 	beq	r3,r2,145a18 <_dtoa_r+0x11a8>
  144b70:	10c35b0e 	bge	r2,r3,1458e0 <_dtoa_r+0x1070>
  144b74:	d9000417 	ldw	r4,16(sp)
  144b78:	00800104 	movi	r2,4
  144b7c:	2082da26 	beq	r4,r2,1456e8 <_dtoa_r+0xe78>
  144b80:	00800144 	movi	r2,5
  144b84:	2081091e 	bne	r4,r2,144fac <_dtoa_r+0x73c>
  144b88:	01c00044 	movi	r7,1
  144b8c:	d9c00c15 	stw	r7,48(sp)
  144b90:	d8c02117 	ldw	r3,132(sp)
  144b94:	d9000617 	ldw	r4,24(sp)
  144b98:	1907883a 	add	r3,r3,r4
  144b9c:	19800044 	addi	r6,r3,1
  144ba0:	d8c00d15 	stw	r3,52(sp)
  144ba4:	d9800915 	stw	r6,36(sp)
  144ba8:	0183a90e 	bge	zero,r6,145a50 <_dtoa_r+0x11e0>
  144bac:	d9800917 	ldw	r6,36(sp)
  144bb0:	80001115 	stw	zero,68(r16)
  144bb4:	008005c4 	movi	r2,23
  144bb8:	1184b52e 	bgeu	r2,r6,145e90 <_dtoa_r+0x1620>
  144bbc:	00c00044 	movi	r3,1
  144bc0:	00800104 	movi	r2,4
  144bc4:	1085883a 	add	r2,r2,r2
  144bc8:	11000504 	addi	r4,r2,20
  144bcc:	180b883a 	mov	r5,r3
  144bd0:	18c00044 	addi	r3,r3,1
  144bd4:	313ffb2e 	bgeu	r6,r4,144bc4 <_dtoa_r+0x354>
  144bd8:	81401115 	stw	r5,68(r16)
  144bdc:	3023883a 	mov	r17,r6
  144be0:	8009883a 	mov	r4,r16
  144be4:	0147c4c0 	call	147c4c <_Balloc>
  144be8:	d8800715 	stw	r2,28(sp)
  144bec:	80801015 	stw	r2,64(r16)
  144bf0:	00800384 	movi	r2,14
  144bf4:	1440f936 	bltu	r2,r17,144fdc <_dtoa_r+0x76c>
  144bf8:	9800f826 	beq	r19,zero,144fdc <_dtoa_r+0x76c>
  144bfc:	d9c00617 	ldw	r7,24(sp)
  144c00:	01c39c0e 	bge	zero,r7,145a74 <_dtoa_r+0x1204>
  144c04:	388003cc 	andi	r2,r7,15
  144c08:	100490fa 	slli	r2,r2,3
  144c0c:	382dd13a 	srai	r22,r7,4
  144c10:	00c00574 	movhi	r3,21
  144c14:	18c47a04 	addi	r3,r3,4584
  144c18:	1885883a 	add	r2,r3,r2
  144c1c:	b0c0040c 	andi	r3,r22,16
  144c20:	12800017 	ldw	r10,0(r2)
  144c24:	12400117 	ldw	r9,4(r2)
  144c28:	18038526 	beq	r3,zero,145a40 <_dtoa_r+0x11d0>
  144c2c:	00800574 	movhi	r2,21
  144c30:	10847004 	addi	r2,r2,4544
  144c34:	11800817 	ldw	r6,32(r2)
  144c38:	11c00917 	ldw	r7,36(r2)
  144c3c:	d9000317 	ldw	r4,12(sp)
  144c40:	900b883a 	mov	r5,r18
  144c44:	da401515 	stw	r9,84(sp)
  144c48:	da801615 	stw	r10,88(sp)
  144c4c:	014c7e00 	call	14c7e0 <__divdf3>
  144c50:	da401517 	ldw	r9,84(sp)
  144c54:	da801617 	ldw	r10,88(sp)
  144c58:	1027883a 	mov	r19,r2
  144c5c:	1829883a 	mov	r20,r3
  144c60:	b58003cc 	andi	r22,r22,15
  144c64:	044000c4 	movi	r17,3
  144c68:	b0001126 	beq	r22,zero,144cb0 <_dtoa_r+0x440>
  144c6c:	05c00574 	movhi	r23,21
  144c70:	bdc47004 	addi	r23,r23,4544
  144c74:	5005883a 	mov	r2,r10
  144c78:	4807883a 	mov	r3,r9
  144c7c:	b180004c 	andi	r6,r22,1
  144c80:	1009883a 	mov	r4,r2
  144c84:	b02dd07a 	srai	r22,r22,1
  144c88:	180b883a 	mov	r5,r3
  144c8c:	30000426 	beq	r6,zero,144ca0 <_dtoa_r+0x430>
  144c90:	b9800017 	ldw	r6,0(r23)
  144c94:	b9c00117 	ldw	r7,4(r23)
  144c98:	8c400044 	addi	r17,r17,1
  144c9c:	014d2fc0 	call	14d2fc <__muldf3>
  144ca0:	bdc00204 	addi	r23,r23,8
  144ca4:	b03ff51e 	bne	r22,zero,144c7c <_dtoa_r+0x40c>
  144ca8:	1015883a 	mov	r10,r2
  144cac:	1813883a 	mov	r9,r3
  144cb0:	9809883a 	mov	r4,r19
  144cb4:	a00b883a 	mov	r5,r20
  144cb8:	500d883a 	mov	r6,r10
  144cbc:	480f883a 	mov	r7,r9
  144cc0:	014c7e00 	call	14c7e0 <__divdf3>
  144cc4:	1027883a 	mov	r19,r2
  144cc8:	1829883a 	mov	r20,r3
  144ccc:	d8c00e17 	ldw	r3,56(sp)
  144cd0:	18000626 	beq	r3,zero,144cec <_dtoa_r+0x47c>
  144cd4:	9809883a 	mov	r4,r19
  144cd8:	a00b883a 	mov	r5,r20
  144cdc:	000d883a 	mov	r6,zero
  144ce0:	01cffc34 	movhi	r7,16368
  144ce4:	014d2100 	call	14d210 <__ledf2>
  144ce8:	10041516 	blt	r2,zero,145d40 <_dtoa_r+0x14d0>
  144cec:	8809883a 	mov	r4,r17
  144cf0:	014e2f00 	call	14e2f0 <__floatsidf>
  144cf4:	1009883a 	mov	r4,r2
  144cf8:	180b883a 	mov	r5,r3
  144cfc:	980d883a 	mov	r6,r19
  144d00:	a00f883a 	mov	r7,r20
  144d04:	014d2fc0 	call	14d2fc <__muldf3>
  144d08:	1009883a 	mov	r4,r2
  144d0c:	180b883a 	mov	r5,r3
  144d10:	000d883a 	mov	r6,zero
  144d14:	01d00734 	movhi	r7,16412
  144d18:	014bf640 	call	14bf64 <__adddf3>
  144d1c:	1023883a 	mov	r17,r2
  144d20:	d8800917 	ldw	r2,36(sp)
  144d24:	05bf3034 	movhi	r22,64704
  144d28:	1daf883a 	add	r23,r3,r22
  144d2c:	10031e26 	beq	r2,zero,1459a8 <_dtoa_r+0x1138>
  144d30:	d8c00617 	ldw	r3,24(sp)
  144d34:	dac00917 	ldw	r11,36(sp)
  144d38:	d8c01315 	stw	r3,76(sp)
  144d3c:	d9000c17 	ldw	r4,48(sp)
  144d40:	20039626 	beq	r4,zero,145b9c <_dtoa_r+0x132c>
  144d44:	58bfffc4 	addi	r2,r11,-1
  144d48:	100490fa 	slli	r2,r2,3
  144d4c:	00c00574 	movhi	r3,21
  144d50:	18c47a04 	addi	r3,r3,4584
  144d54:	0009883a 	mov	r4,zero
  144d58:	1885883a 	add	r2,r3,r2
  144d5c:	11800017 	ldw	r6,0(r2)
  144d60:	11c00117 	ldw	r7,4(r2)
  144d64:	d8800717 	ldw	r2,28(sp)
  144d68:	014ff834 	movhi	r5,16352
  144d6c:	dac01615 	stw	r11,88(sp)
  144d70:	15800044 	addi	r22,r2,1
  144d74:	014c7e00 	call	14c7e0 <__divdf3>
  144d78:	880d883a 	mov	r6,r17
  144d7c:	b80f883a 	mov	r7,r23
  144d80:	1009883a 	mov	r4,r2
  144d84:	180b883a 	mov	r5,r3
  144d88:	014d9e80 	call	14d9e8 <__subdf3>
  144d8c:	a00b883a 	mov	r5,r20
  144d90:	9809883a 	mov	r4,r19
  144d94:	102f883a 	mov	r23,r2
  144d98:	d8c01015 	stw	r3,64(sp)
  144d9c:	014e2700 	call	14e270 <__fixdfsi>
  144da0:	1009883a 	mov	r4,r2
  144da4:	d8801515 	stw	r2,84(sp)
  144da8:	014e2f00 	call	14e2f0 <__floatsidf>
  144dac:	9809883a 	mov	r4,r19
  144db0:	a00b883a 	mov	r5,r20
  144db4:	100d883a 	mov	r6,r2
  144db8:	180f883a 	mov	r7,r3
  144dbc:	014d9e80 	call	14d9e8 <__subdf3>
  144dc0:	da401517 	ldw	r9,84(sp)
  144dc4:	1827883a 	mov	r19,r3
  144dc8:	d8c00717 	ldw	r3,28(sp)
  144dcc:	d9401017 	ldw	r5,64(sp)
  144dd0:	4a400c04 	addi	r9,r9,48
  144dd4:	1023883a 	mov	r17,r2
  144dd8:	1a400005 	stb	r9,0(r3)
  144ddc:	b809883a 	mov	r4,r23
  144de0:	880d883a 	mov	r6,r17
  144de4:	980f883a 	mov	r7,r19
  144de8:	4829883a 	mov	r20,r9
  144dec:	014d1380 	call	14d138 <__gedf2>
  144df0:	00842216 	blt	zero,r2,145e7c <_dtoa_r+0x160c>
  144df4:	0009883a 	mov	r4,zero
  144df8:	014ffc34 	movhi	r5,16368
  144dfc:	880d883a 	mov	r6,r17
  144e00:	980f883a 	mov	r7,r19
  144e04:	014d9e80 	call	14d9e8 <__subdf3>
  144e08:	d9401017 	ldw	r5,64(sp)
  144e0c:	b809883a 	mov	r4,r23
  144e10:	100d883a 	mov	r6,r2
  144e14:	180f883a 	mov	r7,r3
  144e18:	014d1380 	call	14d138 <__gedf2>
  144e1c:	dac01617 	ldw	r11,88(sp)
  144e20:	00841316 	blt	zero,r2,145e70 <_dtoa_r+0x1600>
  144e24:	00800044 	movi	r2,1
  144e28:	12c06c0e 	bge	r2,r11,144fdc <_dtoa_r+0x76c>
  144e2c:	d9000717 	ldw	r4,28(sp)
  144e30:	dd401215 	stw	r21,72(sp)
  144e34:	dc001115 	stw	r16,68(sp)
  144e38:	22d7883a 	add	r11,r4,r11
  144e3c:	dc801415 	stw	r18,80(sp)
  144e40:	582b883a 	mov	r21,r11
  144e44:	b021883a 	mov	r16,r22
  144e48:	dc801017 	ldw	r18,64(sp)
  144e4c:	00000906 	br	144e74 <_dtoa_r+0x604>
  144e50:	014d9e80 	call	14d9e8 <__subdf3>
  144e54:	1009883a 	mov	r4,r2
  144e58:	180b883a 	mov	r5,r3
  144e5c:	b80d883a 	mov	r6,r23
  144e60:	900f883a 	mov	r7,r18
  144e64:	014d2100 	call	14d210 <__ledf2>
  144e68:	1003ea16 	blt	r2,zero,145e14 <_dtoa_r+0x15a4>
  144e6c:	b543ed26 	beq	r22,r21,145e24 <_dtoa_r+0x15b4>
  144e70:	b021883a 	mov	r16,r22
  144e74:	b809883a 	mov	r4,r23
  144e78:	900b883a 	mov	r5,r18
  144e7c:	000d883a 	mov	r6,zero
  144e80:	01d00934 	movhi	r7,16420
  144e84:	014d2fc0 	call	14d2fc <__muldf3>
  144e88:	000d883a 	mov	r6,zero
  144e8c:	01d00934 	movhi	r7,16420
  144e90:	8809883a 	mov	r4,r17
  144e94:	980b883a 	mov	r5,r19
  144e98:	102f883a 	mov	r23,r2
  144e9c:	1825883a 	mov	r18,r3
  144ea0:	014d2fc0 	call	14d2fc <__muldf3>
  144ea4:	180b883a 	mov	r5,r3
  144ea8:	1009883a 	mov	r4,r2
  144eac:	1823883a 	mov	r17,r3
  144eb0:	1027883a 	mov	r19,r2
  144eb4:	014e2700 	call	14e270 <__fixdfsi>
  144eb8:	1009883a 	mov	r4,r2
  144ebc:	1029883a 	mov	r20,r2
  144ec0:	014e2f00 	call	14e2f0 <__floatsidf>
  144ec4:	9809883a 	mov	r4,r19
  144ec8:	880b883a 	mov	r5,r17
  144ecc:	100d883a 	mov	r6,r2
  144ed0:	180f883a 	mov	r7,r3
  144ed4:	014d9e80 	call	14d9e8 <__subdf3>
  144ed8:	a5000c04 	addi	r20,r20,48
  144edc:	1009883a 	mov	r4,r2
  144ee0:	180b883a 	mov	r5,r3
  144ee4:	b80d883a 	mov	r6,r23
  144ee8:	900f883a 	mov	r7,r18
  144eec:	85000005 	stb	r20,0(r16)
  144ef0:	1023883a 	mov	r17,r2
  144ef4:	1827883a 	mov	r19,r3
  144ef8:	014d2100 	call	14d210 <__ledf2>
  144efc:	b5800044 	addi	r22,r22,1
  144f00:	0009883a 	mov	r4,zero
  144f04:	014ffc34 	movhi	r5,16368
  144f08:	880d883a 	mov	r6,r17
  144f0c:	980f883a 	mov	r7,r19
  144f10:	103fcf0e 	bge	r2,zero,144e50 <_dtoa_r+0x5e0>
  144f14:	d8c01317 	ldw	r3,76(sp)
  144f18:	dc001117 	ldw	r16,68(sp)
  144f1c:	d8c00615 	stw	r3,24(sp)
  144f20:	8009883a 	mov	r4,r16
  144f24:	e00b883a 	mov	r5,fp
  144f28:	0147cf40 	call	147cf4 <_Bfree>
  144f2c:	d9800617 	ldw	r6,24(sp)
  144f30:	d9c02217 	ldw	r7,136(sp)
  144f34:	b0000005 	stb	zero,0(r22)
  144f38:	30800044 	addi	r2,r6,1
  144f3c:	38800015 	stw	r2,0(r7)
  144f40:	d8802417 	ldw	r2,144(sp)
  144f44:	10026426 	beq	r2,zero,1458d8 <_dtoa_r+0x1068>
  144f48:	15800015 	stw	r22,0(r2)
  144f4c:	d8800717 	ldw	r2,28(sp)
  144f50:	003e7606 	br	14492c <_dtoa_r+0xbc>
  144f54:	00800434 	movhi	r2,16
  144f58:	10bfffc4 	addi	r2,r2,-1
  144f5c:	88a2703a 	and	r17,r17,r2
  144f60:	883e831e 	bne	r17,zero,144970 <_dtoa_r+0x100>
  144f64:	00800574 	movhi	r2,21
  144f68:	10845b04 	addi	r2,r2,4460
  144f6c:	003e8206 	br	144978 <_dtoa_r+0x108>
  144f70:	10c00204 	addi	r3,r2,8
  144f74:	003e8506 	br	14498c <_dtoa_r+0x11c>
  144f78:	01400434 	movhi	r5,16
  144f7c:	297fffc4 	addi	r5,r5,-1
  144f80:	914a703a 	and	r5,r18,r5
  144f84:	d9000317 	ldw	r4,12(sp)
  144f88:	294ffc34 	orhi	r5,r5,16368
  144f8c:	a53f0044 	addi	r20,r20,-1023
  144f90:	dd400217 	ldw	r21,8(sp)
  144f94:	d8000f15 	stw	zero,60(sp)
  144f98:	003ea306 	br	144a28 <_dtoa_r+0x1b8>
  144f9c:	00800574 	movhi	r2,21
  144fa0:	10845204 	addi	r2,r2,4424
  144fa4:	003e6106 	br	14492c <_dtoa_r+0xbc>
  144fa8:	d8000415 	stw	zero,16(sp)
  144fac:	8009883a 	mov	r4,r16
  144fb0:	80001115 	stw	zero,68(r16)
  144fb4:	000b883a 	mov	r5,zero
  144fb8:	0147c4c0 	call	147c4c <_Balloc>
  144fbc:	00ffffc4 	movi	r3,-1
  144fc0:	01000044 	movi	r4,1
  144fc4:	d8800715 	stw	r2,28(sp)
  144fc8:	d8c00d15 	stw	r3,52(sp)
  144fcc:	80801015 	stw	r2,64(r16)
  144fd0:	d8002115 	stw	zero,132(sp)
  144fd4:	d8c00915 	stw	r3,36(sp)
  144fd8:	d9000c15 	stw	r4,48(sp)
  144fdc:	d8800117 	ldw	r2,4(sp)
  144fe0:	10008e16 	blt	r2,zero,14521c <_dtoa_r+0x9ac>
  144fe4:	d9000617 	ldw	r4,24(sp)
  144fe8:	00c00384 	movi	r3,14
  144fec:	19008b16 	blt	r3,r4,14521c <_dtoa_r+0x9ac>
  144ff0:	200490fa 	slli	r2,r4,3
  144ff4:	d9802117 	ldw	r6,132(sp)
  144ff8:	00c00574 	movhi	r3,21
  144ffc:	18c47a04 	addi	r3,r3,4584
  145000:	1885883a 	add	r2,r3,r2
  145004:	14400017 	ldw	r17,0(r2)
  145008:	14c00117 	ldw	r19,4(r2)
  14500c:	3001be16 	blt	r6,zero,145708 <_dtoa_r+0xe98>
  145010:	d9000317 	ldw	r4,12(sp)
  145014:	880d883a 	mov	r6,r17
  145018:	980f883a 	mov	r7,r19
  14501c:	900b883a 	mov	r5,r18
  145020:	014c7e00 	call	14c7e0 <__divdf3>
  145024:	180b883a 	mov	r5,r3
  145028:	1009883a 	mov	r4,r2
  14502c:	014e2700 	call	14e270 <__fixdfsi>
  145030:	1009883a 	mov	r4,r2
  145034:	102f883a 	mov	r23,r2
  145038:	014e2f00 	call	14e2f0 <__floatsidf>
  14503c:	1009883a 	mov	r4,r2
  145040:	180b883a 	mov	r5,r3
  145044:	880d883a 	mov	r6,r17
  145048:	980f883a 	mov	r7,r19
  14504c:	014d2fc0 	call	14d2fc <__muldf3>
  145050:	d9000317 	ldw	r4,12(sp)
  145054:	900b883a 	mov	r5,r18
  145058:	100d883a 	mov	r6,r2
  14505c:	180f883a 	mov	r7,r3
  145060:	014d9e80 	call	14d9e8 <__subdf3>
  145064:	d9c00717 	ldw	r7,28(sp)
  145068:	1009883a 	mov	r4,r2
  14506c:	b8800c04 	addi	r2,r23,48
  145070:	38800005 	stb	r2,0(r7)
  145074:	3d800044 	addi	r22,r7,1
  145078:	d9c00917 	ldw	r7,36(sp)
  14507c:	01800044 	movi	r6,1
  145080:	180b883a 	mov	r5,r3
  145084:	2005883a 	mov	r2,r4
  145088:	39803e26 	beq	r7,r6,145184 <_dtoa_r+0x914>
  14508c:	000d883a 	mov	r6,zero
  145090:	01d00934 	movhi	r7,16420
  145094:	014d2fc0 	call	14d2fc <__muldf3>
  145098:	1009883a 	mov	r4,r2
  14509c:	180b883a 	mov	r5,r3
  1450a0:	000d883a 	mov	r6,zero
  1450a4:	000f883a 	mov	r7,zero
  1450a8:	1029883a 	mov	r20,r2
  1450ac:	182b883a 	mov	r21,r3
  1450b0:	014d0b40 	call	14d0b4 <__eqdf2>
  1450b4:	103f9a26 	beq	r2,zero,144f20 <_dtoa_r+0x6b0>
  1450b8:	d8c00717 	ldw	r3,28(sp)
  1450bc:	d9000917 	ldw	r4,36(sp)
  1450c0:	b025883a 	mov	r18,r22
  1450c4:	df000415 	stw	fp,16(sp)
  1450c8:	1905883a 	add	r2,r3,r4
  1450cc:	15ffffc4 	addi	r23,r2,-1
  1450d0:	dc000315 	stw	r16,12(sp)
  1450d4:	00000a06 	br	145100 <_dtoa_r+0x890>
  1450d8:	014d2fc0 	call	14d2fc <__muldf3>
  1450dc:	1009883a 	mov	r4,r2
  1450e0:	180b883a 	mov	r5,r3
  1450e4:	000d883a 	mov	r6,zero
  1450e8:	000f883a 	mov	r7,zero
  1450ec:	1029883a 	mov	r20,r2
  1450f0:	182b883a 	mov	r21,r3
  1450f4:	014d0b40 	call	14d0b4 <__eqdf2>
  1450f8:	10021926 	beq	r2,zero,145960 <_dtoa_r+0x10f0>
  1450fc:	e025883a 	mov	r18,fp
  145100:	880d883a 	mov	r6,r17
  145104:	980f883a 	mov	r7,r19
  145108:	a009883a 	mov	r4,r20
  14510c:	a80b883a 	mov	r5,r21
  145110:	014c7e00 	call	14c7e0 <__divdf3>
  145114:	180b883a 	mov	r5,r3
  145118:	1009883a 	mov	r4,r2
  14511c:	014e2700 	call	14e270 <__fixdfsi>
  145120:	1009883a 	mov	r4,r2
  145124:	1021883a 	mov	r16,r2
  145128:	014e2f00 	call	14e2f0 <__floatsidf>
  14512c:	1009883a 	mov	r4,r2
  145130:	180b883a 	mov	r5,r3
  145134:	880d883a 	mov	r6,r17
  145138:	980f883a 	mov	r7,r19
  14513c:	014d2fc0 	call	14d2fc <__muldf3>
  145140:	a009883a 	mov	r4,r20
  145144:	a80b883a 	mov	r5,r21
  145148:	100d883a 	mov	r6,r2
  14514c:	180f883a 	mov	r7,r3
  145150:	014d9e80 	call	14d9e8 <__subdf3>
  145154:	82800c04 	addi	r10,r16,48
  145158:	97000044 	addi	fp,r18,1
  14515c:	92800005 	stb	r10,0(r18)
  145160:	000d883a 	mov	r6,zero
  145164:	01d00934 	movhi	r7,16420
  145168:	1009883a 	mov	r4,r2
  14516c:	180b883a 	mov	r5,r3
  145170:	e02d883a 	mov	r22,fp
  145174:	95ffd81e 	bne	r18,r23,1450d8 <_dtoa_r+0x868>
  145178:	802f883a 	mov	r23,r16
  14517c:	df000417 	ldw	fp,16(sp)
  145180:	dc000317 	ldw	r16,12(sp)
  145184:	1009883a 	mov	r4,r2
  145188:	180b883a 	mov	r5,r3
  14518c:	100d883a 	mov	r6,r2
  145190:	180f883a 	mov	r7,r3
  145194:	014bf640 	call	14bf64 <__adddf3>
  145198:	8809883a 	mov	r4,r17
  14519c:	980b883a 	mov	r5,r19
  1451a0:	100d883a 	mov	r6,r2
  1451a4:	180f883a 	mov	r7,r3
  1451a8:	1025883a 	mov	r18,r2
  1451ac:	1829883a 	mov	r20,r3
  1451b0:	014d2100 	call	14d210 <__ledf2>
  1451b4:	10000816 	blt	r2,zero,1451d8 <_dtoa_r+0x968>
  1451b8:	8809883a 	mov	r4,r17
  1451bc:	980b883a 	mov	r5,r19
  1451c0:	900d883a 	mov	r6,r18
  1451c4:	a00f883a 	mov	r7,r20
  1451c8:	014d0b40 	call	14d0b4 <__eqdf2>
  1451cc:	103f541e 	bne	r2,zero,144f20 <_dtoa_r+0x6b0>
  1451d0:	bdc0004c 	andi	r23,r23,1
  1451d4:	b83f5226 	beq	r23,zero,144f20 <_dtoa_r+0x6b0>
  1451d8:	b53fffc3 	ldbu	r20,-1(r22)
  1451dc:	b0ffff84 	addi	r3,r22,-2
  1451e0:	01400e44 	movi	r5,57
  1451e4:	d9800717 	ldw	r6,28(sp)
  1451e8:	00000406 	br	1451fc <_dtoa_r+0x98c>
  1451ec:	30824326 	beq	r6,r2,145afc <_dtoa_r+0x128c>
  1451f0:	1d000003 	ldbu	r20,0(r3)
  1451f4:	102d883a 	mov	r22,r2
  1451f8:	18ffffc4 	addi	r3,r3,-1
  1451fc:	a1003fcc 	andi	r4,r20,255
  145200:	2100201c 	xori	r4,r4,128
  145204:	213fe004 	addi	r4,r4,-128
  145208:	b0bfffc4 	addi	r2,r22,-1
  14520c:	217ff726 	beq	r4,r5,1451ec <_dtoa_r+0x97c>
  145210:	a2400044 	addi	r9,r20,1
  145214:	12400005 	stb	r9,0(r2)
  145218:	003f4106 	br	144f20 <_dtoa_r+0x6b0>
  14521c:	d9000c17 	ldw	r4,48(sp)
  145220:	2000be26 	beq	r4,zero,14551c <_dtoa_r+0xcac>
  145224:	d9800417 	ldw	r6,16(sp)
  145228:	00c00044 	movi	r3,1
  14522c:	19815e0e 	bge	r3,r6,1457a8 <_dtoa_r+0xf38>
  145230:	d8800917 	ldw	r2,36(sp)
  145234:	d8c00a17 	ldw	r3,40(sp)
  145238:	153fffc4 	addi	r20,r2,-1
  14523c:	1d01f816 	blt	r3,r20,145a20 <_dtoa_r+0x11b0>
  145240:	1d29c83a 	sub	r20,r3,r20
  145244:	d9c00917 	ldw	r7,36(sp)
  145248:	3802ad16 	blt	r7,zero,145d00 <_dtoa_r+0x1490>
  14524c:	dcc00817 	ldw	r19,32(sp)
  145250:	d8800917 	ldw	r2,36(sp)
  145254:	d8c00817 	ldw	r3,32(sp)
  145258:	8009883a 	mov	r4,r16
  14525c:	01400044 	movi	r5,1
  145260:	1887883a 	add	r3,r3,r2
  145264:	d8c00815 	stw	r3,32(sp)
  145268:	a8ab883a 	add	r21,r21,r2
  14526c:	014804c0 	call	14804c <__i2b>
  145270:	1023883a 	mov	r17,r2
  145274:	98000826 	beq	r19,zero,145298 <_dtoa_r+0xa28>
  145278:	0540070e 	bge	zero,r21,145298 <_dtoa_r+0xa28>
  14527c:	a805883a 	mov	r2,r21
  145280:	9d411716 	blt	r19,r21,1456e0 <_dtoa_r+0xe70>
  145284:	d9000817 	ldw	r4,32(sp)
  145288:	98a7c83a 	sub	r19,r19,r2
  14528c:	a8abc83a 	sub	r21,r21,r2
  145290:	2089c83a 	sub	r4,r4,r2
  145294:	d9000815 	stw	r4,32(sp)
  145298:	d9800a17 	ldw	r6,40(sp)
  14529c:	0180140e 	bge	zero,r6,1452f0 <_dtoa_r+0xa80>
  1452a0:	d9c00c17 	ldw	r7,48(sp)
  1452a4:	3801d626 	beq	r7,zero,145a00 <_dtoa_r+0x1190>
  1452a8:	05000e0e 	bge	zero,r20,1452e4 <_dtoa_r+0xa74>
  1452ac:	880b883a 	mov	r5,r17
  1452b0:	8009883a 	mov	r4,r16
  1452b4:	a00d883a 	mov	r6,r20
  1452b8:	01482740 	call	148274 <__pow5mult>
  1452bc:	e00d883a 	mov	r6,fp
  1452c0:	8009883a 	mov	r4,r16
  1452c4:	100b883a 	mov	r5,r2
  1452c8:	1023883a 	mov	r17,r2
  1452cc:	01480880 	call	148088 <__multiply>
  1452d0:	102d883a 	mov	r22,r2
  1452d4:	e00b883a 	mov	r5,fp
  1452d8:	8009883a 	mov	r4,r16
  1452dc:	0147cf40 	call	147cf4 <_Bfree>
  1452e0:	b039883a 	mov	fp,r22
  1452e4:	d8800a17 	ldw	r2,40(sp)
  1452e8:	150dc83a 	sub	r6,r2,r20
  1452ec:	30011f1e 	bne	r6,zero,14576c <_dtoa_r+0xefc>
  1452f0:	8009883a 	mov	r4,r16
  1452f4:	01400044 	movi	r5,1
  1452f8:	014804c0 	call	14804c <__i2b>
  1452fc:	d8c00b17 	ldw	r3,44(sp)
  145300:	1029883a 	mov	r20,r2
  145304:	00c0050e 	bge	zero,r3,14531c <_dtoa_r+0xaac>
  145308:	8009883a 	mov	r4,r16
  14530c:	100b883a 	mov	r5,r2
  145310:	180d883a 	mov	r6,r3
  145314:	01482740 	call	148274 <__pow5mult>
  145318:	1029883a 	mov	r20,r2
  14531c:	d9000417 	ldw	r4,16(sp)
  145320:	00800044 	movi	r2,1
  145324:	1100e00e 	bge	r2,r4,1456a8 <_dtoa_r+0xe38>
  145328:	0025883a 	mov	r18,zero
  14532c:	d8800b17 	ldw	r2,44(sp)
  145330:	10015f1e 	bne	r2,zero,1458b0 <_dtoa_r+0x1040>
  145334:	00800044 	movi	r2,1
  145338:	1545883a 	add	r2,r2,r21
  14533c:	108007cc 	andi	r2,r2,31
  145340:	10007a26 	beq	r2,zero,14552c <_dtoa_r+0xcbc>
  145344:	01000804 	movi	r4,32
  145348:	2089c83a 	sub	r4,r4,r2
  14534c:	00c00104 	movi	r3,4
  145350:	1902d20e 	bge	r3,r4,145e9c <_dtoa_r+0x162c>
  145354:	00c00704 	movi	r3,28
  145358:	1885c83a 	sub	r2,r3,r2
  14535c:	d8c00817 	ldw	r3,32(sp)
  145360:	98a7883a 	add	r19,r19,r2
  145364:	a8ab883a 	add	r21,r21,r2
  145368:	1887883a 	add	r3,r3,r2
  14536c:	d8c00815 	stw	r3,32(sp)
  145370:	d9800817 	ldw	r6,32(sp)
  145374:	0180040e 	bge	zero,r6,145388 <_dtoa_r+0xb18>
  145378:	e00b883a 	mov	r5,fp
  14537c:	8009883a 	mov	r4,r16
  145380:	01483bc0 	call	1483bc <__lshift>
  145384:	1039883a 	mov	fp,r2
  145388:	0540050e 	bge	zero,r21,1453a0 <_dtoa_r+0xb30>
  14538c:	a00b883a 	mov	r5,r20
  145390:	8009883a 	mov	r4,r16
  145394:	a80d883a 	mov	r6,r21
  145398:	01483bc0 	call	1483bc <__lshift>
  14539c:	1029883a 	mov	r20,r2
  1453a0:	d9c00e17 	ldw	r7,56(sp)
  1453a4:	3801301e 	bne	r7,zero,145868 <_dtoa_r+0xff8>
  1453a8:	d9c00917 	ldw	r7,36(sp)
  1453ac:	01c1500e 	bge	zero,r7,1458f0 <_dtoa_r+0x1080>
  1453b0:	d8800c17 	ldw	r2,48(sp)
  1453b4:	10006b1e 	bne	r2,zero,145564 <_dtoa_r+0xcf4>
  1453b8:	dc800717 	ldw	r18,28(sp)
  1453bc:	dcc00917 	ldw	r19,36(sp)
  1453c0:	902b883a 	mov	r21,r18
  1453c4:	00000206 	br	1453d0 <_dtoa_r+0xb60>
  1453c8:	0147d1c0 	call	147d1c <__multadd>
  1453cc:	1039883a 	mov	fp,r2
  1453d0:	e009883a 	mov	r4,fp
  1453d4:	a00b883a 	mov	r5,r20
  1453d8:	014466c0 	call	14466c <quorem>
  1453dc:	10800c04 	addi	r2,r2,48
  1453e0:	90800005 	stb	r2,0(r18)
  1453e4:	94800044 	addi	r18,r18,1
  1453e8:	9547c83a 	sub	r3,r18,r21
  1453ec:	8009883a 	mov	r4,r16
  1453f0:	e00b883a 	mov	r5,fp
  1453f4:	01800284 	movi	r6,10
  1453f8:	000f883a 	mov	r7,zero
  1453fc:	1cfff216 	blt	r3,r19,1453c8 <_dtoa_r+0xb58>
  145400:	102f883a 	mov	r23,r2
  145404:	d8800917 	ldw	r2,36(sp)
  145408:	0082410e 	bge	zero,r2,145d10 <_dtoa_r+0x14a0>
  14540c:	d9000717 	ldw	r4,28(sp)
  145410:	002b883a 	mov	r21,zero
  145414:	20ad883a 	add	r22,r4,r2
  145418:	e00b883a 	mov	r5,fp
  14541c:	8009883a 	mov	r4,r16
  145420:	01800044 	movi	r6,1
  145424:	01483bc0 	call	1483bc <__lshift>
  145428:	1009883a 	mov	r4,r2
  14542c:	a00b883a 	mov	r5,r20
  145430:	1039883a 	mov	fp,r2
  145434:	014850c0 	call	14850c <__mcmp>
  145438:	0080d10e 	bge	zero,r2,145780 <_dtoa_r+0xf10>
  14543c:	b13fffc3 	ldbu	r4,-1(r22)
  145440:	b0ffff84 	addi	r3,r22,-2
  145444:	01800e44 	movi	r6,57
  145448:	d9c00717 	ldw	r7,28(sp)
  14544c:	00000406 	br	145460 <_dtoa_r+0xbf0>
  145450:	38813c26 	beq	r7,r2,145944 <_dtoa_r+0x10d4>
  145454:	19000003 	ldbu	r4,0(r3)
  145458:	102d883a 	mov	r22,r2
  14545c:	18ffffc4 	addi	r3,r3,-1
  145460:	21403fcc 	andi	r5,r4,255
  145464:	2940201c 	xori	r5,r5,128
  145468:	297fe004 	addi	r5,r5,-128
  14546c:	b0bfffc4 	addi	r2,r22,-1
  145470:	29bff726 	beq	r5,r6,145450 <_dtoa_r+0xbe0>
  145474:	21000044 	addi	r4,r4,1
  145478:	11000005 	stb	r4,0(r2)
  14547c:	8009883a 	mov	r4,r16
  145480:	a00b883a 	mov	r5,r20
  145484:	0147cf40 	call	147cf4 <_Bfree>
  145488:	883ea526 	beq	r17,zero,144f20 <_dtoa_r+0x6b0>
  14548c:	a8000426 	beq	r21,zero,1454a0 <_dtoa_r+0xc30>
  145490:	ac400326 	beq	r21,r17,1454a0 <_dtoa_r+0xc30>
  145494:	8009883a 	mov	r4,r16
  145498:	a80b883a 	mov	r5,r21
  14549c:	0147cf40 	call	147cf4 <_Bfree>
  1454a0:	8009883a 	mov	r4,r16
  1454a4:	880b883a 	mov	r5,r17
  1454a8:	0147cf40 	call	147cf4 <_Bfree>
  1454ac:	003e9c06 	br	144f20 <_dtoa_r+0x6b0>
  1454b0:	01c00044 	movi	r7,1
  1454b4:	d9c00e15 	stw	r7,56(sp)
  1454b8:	003d9906 	br	144b20 <_dtoa_r+0x2b0>
  1454bc:	d8c00817 	ldw	r3,32(sp)
  1454c0:	d9000617 	ldw	r4,24(sp)
  1454c4:	d8000b15 	stw	zero,44(sp)
  1454c8:	1907c83a 	sub	r3,r3,r4
  1454cc:	010dc83a 	sub	r6,zero,r4
  1454d0:	d8c00815 	stw	r3,32(sp)
  1454d4:	d9800a15 	stw	r6,40(sp)
  1454d8:	003d9a06 	br	144b44 <_dtoa_r+0x2d4>
  1454dc:	056bc83a 	sub	r21,zero,r21
  1454e0:	dd400815 	stw	r21,32(sp)
  1454e4:	002b883a 	mov	r21,zero
  1454e8:	003d9106 	br	144b30 <_dtoa_r+0x2c0>
  1454ec:	d9000617 	ldw	r4,24(sp)
  1454f0:	014e2f00 	call	14e2f0 <__floatsidf>
  1454f4:	1009883a 	mov	r4,r2
  1454f8:	180b883a 	mov	r5,r3
  1454fc:	980d883a 	mov	r6,r19
  145500:	880f883a 	mov	r7,r17
  145504:	014d0b40 	call	14d0b4 <__eqdf2>
  145508:	103d7426 	beq	r2,zero,144adc <_dtoa_r+0x26c>
  14550c:	d8c00617 	ldw	r3,24(sp)
  145510:	18ffffc4 	addi	r3,r3,-1
  145514:	d8c00615 	stw	r3,24(sp)
  145518:	003d7006 	br	144adc <_dtoa_r+0x26c>
  14551c:	dd000a17 	ldw	r20,40(sp)
  145520:	dcc00817 	ldw	r19,32(sp)
  145524:	0023883a 	mov	r17,zero
  145528:	003f5206 	br	145274 <_dtoa_r+0xa04>
  14552c:	00800704 	movi	r2,28
  145530:	d9000817 	ldw	r4,32(sp)
  145534:	98a7883a 	add	r19,r19,r2
  145538:	a8ab883a 	add	r21,r21,r2
  14553c:	2089883a 	add	r4,r4,r2
  145540:	d9000815 	stw	r4,32(sp)
  145544:	003f8a06 	br	145370 <_dtoa_r+0xb00>
  145548:	d9c00317 	ldw	r7,12(sp)
  14554c:	013efb84 	movi	r4,-1042
  145550:	2509c83a 	sub	r4,r4,r20
  145554:	3908983a 	sll	r4,r7,r4
  145558:	003d2c06 	br	144a0c <_dtoa_r+0x19c>
  14555c:	d8000e15 	stw	zero,56(sp)
  145560:	003d6f06 	br	144b20 <_dtoa_r+0x2b0>
  145564:	04c0050e 	bge	zero,r19,14557c <_dtoa_r+0xd0c>
  145568:	880b883a 	mov	r5,r17
  14556c:	8009883a 	mov	r4,r16
  145570:	980d883a 	mov	r6,r19
  145574:	01483bc0 	call	1483bc <__lshift>
  145578:	1023883a 	mov	r17,r2
  14557c:	9001681e 	bne	r18,zero,145b20 <_dtoa_r+0x12b0>
  145580:	8827883a 	mov	r19,r17
  145584:	d8c00717 	ldw	r3,28(sp)
  145588:	d9000917 	ldw	r4,36(sp)
  14558c:	1dffffc4 	addi	r23,r3,-1
  145590:	1825883a 	mov	r18,r3
  145594:	d8c00317 	ldw	r3,12(sp)
  145598:	b92f883a 	add	r23,r23,r4
  14559c:	ddc00515 	stw	r23,20(sp)
  1455a0:	18c0004c 	andi	r3,r3,1
  1455a4:	d8c00315 	stw	r3,12(sp)
  1455a8:	e009883a 	mov	r4,fp
  1455ac:	a00b883a 	mov	r5,r20
  1455b0:	014466c0 	call	14466c <quorem>
  1455b4:	e009883a 	mov	r4,fp
  1455b8:	880b883a 	mov	r5,r17
  1455bc:	102d883a 	mov	r22,r2
  1455c0:	014850c0 	call	14850c <__mcmp>
  1455c4:	8009883a 	mov	r4,r16
  1455c8:	a00b883a 	mov	r5,r20
  1455cc:	980d883a 	mov	r6,r19
  1455d0:	102b883a 	mov	r21,r2
  1455d4:	014856c0 	call	14856c <__mdiff>
  1455d8:	1007883a 	mov	r3,r2
  1455dc:	10800317 	ldw	r2,12(r2)
  1455e0:	b5c00c04 	addi	r23,r22,48
  1455e4:	10009b1e 	bne	r2,zero,145854 <_dtoa_r+0xfe4>
  1455e8:	180b883a 	mov	r5,r3
  1455ec:	e009883a 	mov	r4,fp
  1455f0:	d8c01515 	stw	r3,84(sp)
  1455f4:	014850c0 	call	14850c <__mcmp>
  1455f8:	d8c01517 	ldw	r3,84(sp)
  1455fc:	8009883a 	mov	r4,r16
  145600:	d8801515 	stw	r2,84(sp)
  145604:	180b883a 	mov	r5,r3
  145608:	0147cf40 	call	147cf4 <_Bfree>
  14560c:	d8801517 	ldw	r2,84(sp)
  145610:	1000041e 	bne	r2,zero,145624 <_dtoa_r+0xdb4>
  145614:	d9000417 	ldw	r4,16(sp)
  145618:	2000021e 	bne	r4,zero,145624 <_dtoa_r+0xdb4>
  14561c:	d8c00317 	ldw	r3,12(sp)
  145620:	18007926 	beq	r3,zero,145808 <_dtoa_r+0xf98>
  145624:	a8006616 	blt	r21,zero,1457c0 <_dtoa_r+0xf50>
  145628:	a800041e 	bne	r21,zero,14563c <_dtoa_r+0xdcc>
  14562c:	d9000417 	ldw	r4,16(sp)
  145630:	2000021e 	bne	r4,zero,14563c <_dtoa_r+0xdcc>
  145634:	d8c00317 	ldw	r3,12(sp)
  145638:	18006126 	beq	r3,zero,1457c0 <_dtoa_r+0xf50>
  14563c:	00814916 	blt	zero,r2,145b64 <_dtoa_r+0x12f4>
  145640:	d8c00517 	ldw	r3,20(sp)
  145644:	95400044 	addi	r21,r18,1
  145648:	95c00005 	stb	r23,0(r18)
  14564c:	a82d883a 	mov	r22,r21
  145650:	90c14c26 	beq	r18,r3,145b84 <_dtoa_r+0x1314>
  145654:	e00b883a 	mov	r5,fp
  145658:	8009883a 	mov	r4,r16
  14565c:	01800284 	movi	r6,10
  145660:	000f883a 	mov	r7,zero
  145664:	0147d1c0 	call	147d1c <__multadd>
  145668:	1039883a 	mov	fp,r2
  14566c:	8cc07026 	beq	r17,r19,145830 <_dtoa_r+0xfc0>
  145670:	880b883a 	mov	r5,r17
  145674:	01800284 	movi	r6,10
  145678:	000f883a 	mov	r7,zero
  14567c:	8009883a 	mov	r4,r16
  145680:	0147d1c0 	call	147d1c <__multadd>
  145684:	980b883a 	mov	r5,r19
  145688:	8009883a 	mov	r4,r16
  14568c:	01800284 	movi	r6,10
  145690:	000f883a 	mov	r7,zero
  145694:	1023883a 	mov	r17,r2
  145698:	0147d1c0 	call	147d1c <__multadd>
  14569c:	1027883a 	mov	r19,r2
  1456a0:	a825883a 	mov	r18,r21
  1456a4:	003fc006 	br	1455a8 <_dtoa_r+0xd38>
  1456a8:	d9800317 	ldw	r6,12(sp)
  1456ac:	303f1e1e 	bne	r6,zero,145328 <_dtoa_r+0xab8>
  1456b0:	00c00434 	movhi	r3,16
  1456b4:	18ffffc4 	addi	r3,r3,-1
  1456b8:	90c6703a 	and	r3,r18,r3
  1456bc:	183f1a1e 	bne	r3,zero,145328 <_dtoa_r+0xab8>
  1456c0:	949ffc2c 	andhi	r18,r18,32752
  1456c4:	903f1826 	beq	r18,zero,145328 <_dtoa_r+0xab8>
  1456c8:	d9c00817 	ldw	r7,32(sp)
  1456cc:	a8ab883a 	add	r21,r21,r2
  1456d0:	1025883a 	mov	r18,r2
  1456d4:	388f883a 	add	r7,r7,r2
  1456d8:	d9c00815 	stw	r7,32(sp)
  1456dc:	003f1306 	br	14532c <_dtoa_r+0xabc>
  1456e0:	9805883a 	mov	r2,r19
  1456e4:	003ee706 	br	145284 <_dtoa_r+0xa14>
  1456e8:	01800044 	movi	r6,1
  1456ec:	d9800c15 	stw	r6,48(sp)
  1456f0:	d8802117 	ldw	r2,132(sp)
  1456f4:	0080da0e 	bge	zero,r2,145a60 <_dtoa_r+0x11f0>
  1456f8:	100d883a 	mov	r6,r2
  1456fc:	d8800d15 	stw	r2,52(sp)
  145700:	d8800915 	stw	r2,36(sp)
  145704:	003d2a06 	br	144bb0 <_dtoa_r+0x340>
  145708:	d8800917 	ldw	r2,36(sp)
  14570c:	00be4016 	blt	zero,r2,145010 <_dtoa_r+0x7a0>
  145710:	1000b81e 	bne	r2,zero,1459f4 <_dtoa_r+0x1184>
  145714:	8809883a 	mov	r4,r17
  145718:	980b883a 	mov	r5,r19
  14571c:	000d883a 	mov	r6,zero
  145720:	01d00534 	movhi	r7,16404
  145724:	014d2fc0 	call	14d2fc <__muldf3>
  145728:	d9800317 	ldw	r6,12(sp)
  14572c:	1009883a 	mov	r4,r2
  145730:	180b883a 	mov	r5,r3
  145734:	900f883a 	mov	r7,r18
  145738:	014d1380 	call	14d138 <__gedf2>
  14573c:	0029883a 	mov	r20,zero
  145740:	0023883a 	mov	r17,zero
  145744:	10007716 	blt	r2,zero,145924 <_dtoa_r+0x10b4>
  145748:	d9002117 	ldw	r4,132(sp)
  14574c:	dd800717 	ldw	r22,28(sp)
  145750:	0108303a 	nor	r4,zero,r4
  145754:	d9000615 	stw	r4,24(sp)
  145758:	8009883a 	mov	r4,r16
  14575c:	a00b883a 	mov	r5,r20
  145760:	0147cf40 	call	147cf4 <_Bfree>
  145764:	883f4e1e 	bne	r17,zero,1454a0 <_dtoa_r+0xc30>
  145768:	003ded06 	br	144f20 <_dtoa_r+0x6b0>
  14576c:	e00b883a 	mov	r5,fp
  145770:	8009883a 	mov	r4,r16
  145774:	01482740 	call	148274 <__pow5mult>
  145778:	1039883a 	mov	fp,r2
  14577c:	003edc06 	br	1452f0 <_dtoa_r+0xa80>
  145780:	1000021e 	bne	r2,zero,14578c <_dtoa_r+0xf1c>
  145784:	ba40004c 	andi	r9,r23,1
  145788:	483f2c1e 	bne	r9,zero,14543c <_dtoa_r+0xbcc>
  14578c:	01000c04 	movi	r4,48
  145790:	00000106 	br	145798 <_dtoa_r+0xf28>
  145794:	102d883a 	mov	r22,r2
  145798:	b0bfffc4 	addi	r2,r22,-1
  14579c:	10c00007 	ldb	r3,0(r2)
  1457a0:	193ffc26 	beq	r3,r4,145794 <_dtoa_r+0xf24>
  1457a4:	003f3506 	br	14547c <_dtoa_r+0xc0c>
  1457a8:	d9c00f17 	ldw	r7,60(sp)
  1457ac:	38015a26 	beq	r7,zero,145d18 <_dtoa_r+0x14a8>
  1457b0:	10810cc4 	addi	r2,r2,1075
  1457b4:	dd000a17 	ldw	r20,40(sp)
  1457b8:	dcc00817 	ldw	r19,32(sp)
  1457bc:	003ea506 	br	145254 <_dtoa_r+0x9e4>
  1457c0:	00800c0e 	bge	zero,r2,1457f4 <_dtoa_r+0xf84>
  1457c4:	e00b883a 	mov	r5,fp
  1457c8:	8009883a 	mov	r4,r16
  1457cc:	01800044 	movi	r6,1
  1457d0:	01483bc0 	call	1483bc <__lshift>
  1457d4:	1009883a 	mov	r4,r2
  1457d8:	a00b883a 	mov	r5,r20
  1457dc:	1039883a 	mov	fp,r2
  1457e0:	014850c0 	call	14850c <__mcmp>
  1457e4:	0081930e 	bge	zero,r2,145e34 <_dtoa_r+0x15c4>
  1457e8:	00800e44 	movi	r2,57
  1457ec:	b8800a26 	beq	r23,r2,145818 <_dtoa_r+0xfa8>
  1457f0:	b5c00c44 	addi	r23,r22,49
  1457f4:	882b883a 	mov	r21,r17
  1457f8:	95800044 	addi	r22,r18,1
  1457fc:	95c00005 	stb	r23,0(r18)
  145800:	9823883a 	mov	r17,r19
  145804:	003f1d06 	br	14547c <_dtoa_r+0xc0c>
  145808:	00800e44 	movi	r2,57
  14580c:	b8800226 	beq	r23,r2,145818 <_dtoa_r+0xfa8>
  145810:	057ff716 	blt	zero,r21,1457f0 <_dtoa_r+0xf80>
  145814:	003ff706 	br	1457f4 <_dtoa_r+0xf84>
  145818:	01000e44 	movi	r4,57
  14581c:	882b883a 	mov	r21,r17
  145820:	95800044 	addi	r22,r18,1
  145824:	91000005 	stb	r4,0(r18)
  145828:	9823883a 	mov	r17,r19
  14582c:	003f0406 	br	145440 <_dtoa_r+0xbd0>
  145830:	880b883a 	mov	r5,r17
  145834:	8009883a 	mov	r4,r16
  145838:	01800284 	movi	r6,10
  14583c:	000f883a 	mov	r7,zero
  145840:	0147d1c0 	call	147d1c <__multadd>
  145844:	1023883a 	mov	r17,r2
  145848:	1027883a 	mov	r19,r2
  14584c:	a825883a 	mov	r18,r21
  145850:	003f5506 	br	1455a8 <_dtoa_r+0xd38>
  145854:	8009883a 	mov	r4,r16
  145858:	180b883a 	mov	r5,r3
  14585c:	0147cf40 	call	147cf4 <_Bfree>
  145860:	00800044 	movi	r2,1
  145864:	003f6f06 	br	145624 <_dtoa_r+0xdb4>
  145868:	e009883a 	mov	r4,fp
  14586c:	a00b883a 	mov	r5,r20
  145870:	014850c0 	call	14850c <__mcmp>
  145874:	103ecc0e 	bge	r2,zero,1453a8 <_dtoa_r+0xb38>
  145878:	e00b883a 	mov	r5,fp
  14587c:	8009883a 	mov	r4,r16
  145880:	01800284 	movi	r6,10
  145884:	000f883a 	mov	r7,zero
  145888:	0147d1c0 	call	147d1c <__multadd>
  14588c:	1039883a 	mov	fp,r2
  145890:	d8800617 	ldw	r2,24(sp)
  145894:	d8c00c17 	ldw	r3,48(sp)
  145898:	10bfffc4 	addi	r2,r2,-1
  14589c:	d8800615 	stw	r2,24(sp)
  1458a0:	1801681e 	bne	r3,zero,145e44 <_dtoa_r+0x15d4>
  1458a4:	d9800d17 	ldw	r6,52(sp)
  1458a8:	d9800915 	stw	r6,36(sp)
  1458ac:	003ebe06 	br	1453a8 <_dtoa_r+0xb38>
  1458b0:	a0800417 	ldw	r2,16(r20)
  1458b4:	10800104 	addi	r2,r2,4
  1458b8:	1085883a 	add	r2,r2,r2
  1458bc:	1085883a 	add	r2,r2,r2
  1458c0:	a085883a 	add	r2,r20,r2
  1458c4:	11000017 	ldw	r4,0(r2)
  1458c8:	0147f340 	call	147f34 <__hi0bits>
  1458cc:	00c00804 	movi	r3,32
  1458d0:	1885c83a 	sub	r2,r3,r2
  1458d4:	003e9806 	br	145338 <_dtoa_r+0xac8>
  1458d8:	d8800717 	ldw	r2,28(sp)
  1458dc:	003c1306 	br	14492c <_dtoa_r+0xbc>
  1458e0:	00800084 	movi	r2,2
  1458e4:	18bdb11e 	bne	r3,r2,144fac <_dtoa_r+0x73c>
  1458e8:	d8000c15 	stw	zero,48(sp)
  1458ec:	003f8006 	br	1456f0 <_dtoa_r+0xe80>
  1458f0:	d8c00417 	ldw	r3,16(sp)
  1458f4:	00800084 	movi	r2,2
  1458f8:	10fead0e 	bge	r2,r3,1453b0 <_dtoa_r+0xb40>
  1458fc:	383f921e 	bne	r7,zero,145748 <_dtoa_r+0xed8>
  145900:	a00b883a 	mov	r5,r20
  145904:	8009883a 	mov	r4,r16
  145908:	01800144 	movi	r6,5
  14590c:	0147d1c0 	call	147d1c <__multadd>
  145910:	e009883a 	mov	r4,fp
  145914:	100b883a 	mov	r5,r2
  145918:	1029883a 	mov	r20,r2
  14591c:	014850c0 	call	14850c <__mcmp>
  145920:	00bf890e 	bge	zero,r2,145748 <_dtoa_r+0xed8>
  145924:	d9c00617 	ldw	r7,24(sp)
  145928:	d9800717 	ldw	r6,28(sp)
  14592c:	00800c44 	movi	r2,49
  145930:	39c00044 	addi	r7,r7,1
  145934:	35800044 	addi	r22,r6,1
  145938:	30800005 	stb	r2,0(r6)
  14593c:	d9c00615 	stw	r7,24(sp)
  145940:	003f8506 	br	145758 <_dtoa_r+0xee8>
  145944:	d9800617 	ldw	r6,24(sp)
  145948:	d9c00717 	ldw	r7,28(sp)
  14594c:	00800c44 	movi	r2,49
  145950:	31800044 	addi	r6,r6,1
  145954:	d9800615 	stw	r6,24(sp)
  145958:	38800005 	stb	r2,0(r7)
  14595c:	003ec706 	br	14547c <_dtoa_r+0xc0c>
  145960:	df000417 	ldw	fp,16(sp)
  145964:	dc000317 	ldw	r16,12(sp)
  145968:	003d6d06 	br	144f20 <_dtoa_r+0x6b0>
  14596c:	8809883a 	mov	r4,r17
  145970:	014e2f00 	call	14e2f0 <__floatsidf>
  145974:	9809883a 	mov	r4,r19
  145978:	a00b883a 	mov	r5,r20
  14597c:	100d883a 	mov	r6,r2
  145980:	180f883a 	mov	r7,r3
  145984:	014d2fc0 	call	14d2fc <__muldf3>
  145988:	1009883a 	mov	r4,r2
  14598c:	180b883a 	mov	r5,r3
  145990:	000d883a 	mov	r6,zero
  145994:	01d00734 	movhi	r7,16412
  145998:	014bf640 	call	14bf64 <__adddf3>
  14599c:	05bf3034 	movhi	r22,64704
  1459a0:	1023883a 	mov	r17,r2
  1459a4:	1daf883a 	add	r23,r3,r22
  1459a8:	9809883a 	mov	r4,r19
  1459ac:	a00b883a 	mov	r5,r20
  1459b0:	000d883a 	mov	r6,zero
  1459b4:	01d00534 	movhi	r7,16404
  1459b8:	014d9e80 	call	14d9e8 <__subdf3>
  1459bc:	1009883a 	mov	r4,r2
  1459c0:	180b883a 	mov	r5,r3
  1459c4:	880d883a 	mov	r6,r17
  1459c8:	b80f883a 	mov	r7,r23
  1459cc:	1027883a 	mov	r19,r2
  1459d0:	1829883a 	mov	r20,r3
  1459d4:	014d1380 	call	14d138 <__gedf2>
  1459d8:	00806d16 	blt	zero,r2,145b90 <_dtoa_r+0x1320>
  1459dc:	b9e0003c 	xorhi	r7,r23,32768
  1459e0:	9809883a 	mov	r4,r19
  1459e4:	a00b883a 	mov	r5,r20
  1459e8:	880d883a 	mov	r6,r17
  1459ec:	014d2100 	call	14d210 <__ledf2>
  1459f0:	103d7a0e 	bge	r2,zero,144fdc <_dtoa_r+0x76c>
  1459f4:	0029883a 	mov	r20,zero
  1459f8:	0023883a 	mov	r17,zero
  1459fc:	003f5206 	br	145748 <_dtoa_r+0xed8>
  145a00:	d9800a17 	ldw	r6,40(sp)
  145a04:	e00b883a 	mov	r5,fp
  145a08:	8009883a 	mov	r4,r16
  145a0c:	01482740 	call	148274 <__pow5mult>
  145a10:	1039883a 	mov	fp,r2
  145a14:	003e3606 	br	1452f0 <_dtoa_r+0xa80>
  145a18:	d8000c15 	stw	zero,48(sp)
  145a1c:	003c5c06 	br	144b90 <_dtoa_r+0x320>
  145a20:	d9000a17 	ldw	r4,40(sp)
  145a24:	d9800b17 	ldw	r6,44(sp)
  145a28:	dd000a15 	stw	r20,40(sp)
  145a2c:	a105c83a 	sub	r2,r20,r4
  145a30:	308d883a 	add	r6,r6,r2
  145a34:	d9800b15 	stw	r6,44(sp)
  145a38:	0029883a 	mov	r20,zero
  145a3c:	003e0106 	br	145244 <_dtoa_r+0x9d4>
  145a40:	dcc00317 	ldw	r19,12(sp)
  145a44:	9029883a 	mov	r20,r18
  145a48:	04400084 	movi	r17,2
  145a4c:	003c8606 	br	144c68 <_dtoa_r+0x3f8>
  145a50:	3023883a 	mov	r17,r6
  145a54:	80001115 	stw	zero,68(r16)
  145a58:	000b883a 	mov	r5,zero
  145a5c:	003c6006 	br	144be0 <_dtoa_r+0x370>
  145a60:	04400044 	movi	r17,1
  145a64:	dc400d15 	stw	r17,52(sp)
  145a68:	dc400915 	stw	r17,36(sp)
  145a6c:	dc402115 	stw	r17,132(sp)
  145a70:	003ff806 	br	145a54 <_dtoa_r+0x11e4>
  145a74:	d8800617 	ldw	r2,24(sp)
  145a78:	00adc83a 	sub	r22,zero,r2
  145a7c:	b000ac26 	beq	r22,zero,145d30 <_dtoa_r+0x14c0>
  145a80:	b08003cc 	andi	r2,r22,15
  145a84:	100490fa 	slli	r2,r2,3
  145a88:	00c00574 	movhi	r3,21
  145a8c:	18c47a04 	addi	r3,r3,4584
  145a90:	d9000317 	ldw	r4,12(sp)
  145a94:	1885883a 	add	r2,r3,r2
  145a98:	11800017 	ldw	r6,0(r2)
  145a9c:	11c00117 	ldw	r7,4(r2)
  145aa0:	b02dd13a 	srai	r22,r22,4
  145aa4:	900b883a 	mov	r5,r18
  145aa8:	014d2fc0 	call	14d2fc <__muldf3>
  145aac:	1027883a 	mov	r19,r2
  145ab0:	1829883a 	mov	r20,r3
  145ab4:	b000ec26 	beq	r22,zero,145e68 <_dtoa_r+0x15f8>
  145ab8:	05c00574 	movhi	r23,21
  145abc:	bdc47004 	addi	r23,r23,4544
  145ac0:	04400084 	movi	r17,2
  145ac4:	b180004c 	andi	r6,r22,1
  145ac8:	1009883a 	mov	r4,r2
  145acc:	b02dd07a 	srai	r22,r22,1
  145ad0:	180b883a 	mov	r5,r3
  145ad4:	30000426 	beq	r6,zero,145ae8 <_dtoa_r+0x1278>
  145ad8:	b9800017 	ldw	r6,0(r23)
  145adc:	b9c00117 	ldw	r7,4(r23)
  145ae0:	8c400044 	addi	r17,r17,1
  145ae4:	014d2fc0 	call	14d2fc <__muldf3>
  145ae8:	bdc00204 	addi	r23,r23,8
  145aec:	b03ff51e 	bne	r22,zero,145ac4 <_dtoa_r+0x1254>
  145af0:	1027883a 	mov	r19,r2
  145af4:	1829883a 	mov	r20,r3
  145af8:	003c7406 	br	144ccc <_dtoa_r+0x45c>
  145afc:	d9800617 	ldw	r6,24(sp)
  145b00:	d9c00717 	ldw	r7,28(sp)
  145b04:	00c00c04 	movi	r3,48
  145b08:	31800044 	addi	r6,r6,1
  145b0c:	38c00005 	stb	r3,0(r7)
  145b10:	02400c44 	movi	r9,49
  145b14:	d9800615 	stw	r6,24(sp)
  145b18:	12400005 	stb	r9,0(r2)
  145b1c:	003d0006 	br	144f20 <_dtoa_r+0x6b0>
  145b20:	89400117 	ldw	r5,4(r17)
  145b24:	8009883a 	mov	r4,r16
  145b28:	0147c4c0 	call	147c4c <_Balloc>
  145b2c:	89800417 	ldw	r6,16(r17)
  145b30:	11000304 	addi	r4,r2,12
  145b34:	89400304 	addi	r5,r17,12
  145b38:	31800084 	addi	r6,r6,2
  145b3c:	318d883a 	add	r6,r6,r6
  145b40:	318d883a 	add	r6,r6,r6
  145b44:	1025883a 	mov	r18,r2
  145b48:	01422440 	call	142244 <memcpy>
  145b4c:	8009883a 	mov	r4,r16
  145b50:	900b883a 	mov	r5,r18
  145b54:	01800044 	movi	r6,1
  145b58:	01483bc0 	call	1483bc <__lshift>
  145b5c:	1027883a 	mov	r19,r2
  145b60:	003e8806 	br	145584 <_dtoa_r+0xd14>
  145b64:	00800e44 	movi	r2,57
  145b68:	b8bf2b26 	beq	r23,r2,145818 <_dtoa_r+0xfa8>
  145b6c:	ba400044 	addi	r9,r23,1
  145b70:	882b883a 	mov	r21,r17
  145b74:	95800044 	addi	r22,r18,1
  145b78:	92400005 	stb	r9,0(r18)
  145b7c:	9823883a 	mov	r17,r19
  145b80:	003e3e06 	br	14547c <_dtoa_r+0xc0c>
  145b84:	882b883a 	mov	r21,r17
  145b88:	9823883a 	mov	r17,r19
  145b8c:	003e2206 	br	145418 <_dtoa_r+0xba8>
  145b90:	0029883a 	mov	r20,zero
  145b94:	0023883a 	mov	r17,zero
  145b98:	003f6206 	br	145924 <_dtoa_r+0x10b4>
  145b9c:	59bfffc4 	addi	r6,r11,-1
  145ba0:	300490fa 	slli	r2,r6,3
  145ba4:	00c00574 	movhi	r3,21
  145ba8:	18c47a04 	addi	r3,r3,4584
  145bac:	b80f883a 	mov	r7,r23
  145bb0:	1885883a 	add	r2,r3,r2
  145bb4:	11000017 	ldw	r4,0(r2)
  145bb8:	11400117 	ldw	r5,4(r2)
  145bbc:	d8800717 	ldw	r2,28(sp)
  145bc0:	d9801015 	stw	r6,64(sp)
  145bc4:	880d883a 	mov	r6,r17
  145bc8:	dac01615 	stw	r11,88(sp)
  145bcc:	15800044 	addi	r22,r2,1
  145bd0:	014d2fc0 	call	14d2fc <__muldf3>
  145bd4:	a00b883a 	mov	r5,r20
  145bd8:	9809883a 	mov	r4,r19
  145bdc:	d8c01215 	stw	r3,72(sp)
  145be0:	d8801115 	stw	r2,68(sp)
  145be4:	014e2700 	call	14e270 <__fixdfsi>
  145be8:	1009883a 	mov	r4,r2
  145bec:	1023883a 	mov	r17,r2
  145bf0:	014e2f00 	call	14e2f0 <__floatsidf>
  145bf4:	9809883a 	mov	r4,r19
  145bf8:	a00b883a 	mov	r5,r20
  145bfc:	100d883a 	mov	r6,r2
  145c00:	180f883a 	mov	r7,r3
  145c04:	014d9e80 	call	14d9e8 <__subdf3>
  145c08:	1815883a 	mov	r10,r3
  145c0c:	d8c00717 	ldw	r3,28(sp)
  145c10:	8c400c04 	addi	r17,r17,48
  145c14:	102f883a 	mov	r23,r2
  145c18:	1c400005 	stb	r17,0(r3)
  145c1c:	dac01617 	ldw	r11,88(sp)
  145c20:	00800044 	movi	r2,1
  145c24:	58802426 	beq	r11,r2,145cb8 <_dtoa_r+0x1448>
  145c28:	d9800717 	ldw	r6,28(sp)
  145c2c:	dc001415 	stw	r16,80(sp)
  145c30:	b805883a 	mov	r2,r23
  145c34:	32d7883a 	add	r11,r6,r11
  145c38:	b027883a 	mov	r19,r22
  145c3c:	5821883a 	mov	r16,r11
  145c40:	5007883a 	mov	r3,r10
  145c44:	902f883a 	mov	r23,r18
  145c48:	000d883a 	mov	r6,zero
  145c4c:	01d00934 	movhi	r7,16420
  145c50:	1009883a 	mov	r4,r2
  145c54:	180b883a 	mov	r5,r3
  145c58:	014d2fc0 	call	14d2fc <__muldf3>
  145c5c:	180b883a 	mov	r5,r3
  145c60:	1009883a 	mov	r4,r2
  145c64:	1829883a 	mov	r20,r3
  145c68:	1025883a 	mov	r18,r2
  145c6c:	014e2700 	call	14e270 <__fixdfsi>
  145c70:	1009883a 	mov	r4,r2
  145c74:	1023883a 	mov	r17,r2
  145c78:	014e2f00 	call	14e2f0 <__floatsidf>
  145c7c:	9009883a 	mov	r4,r18
  145c80:	a00b883a 	mov	r5,r20
  145c84:	100d883a 	mov	r6,r2
  145c88:	180f883a 	mov	r7,r3
  145c8c:	8c400c04 	addi	r17,r17,48
  145c90:	014d9e80 	call	14d9e8 <__subdf3>
  145c94:	9cc00044 	addi	r19,r19,1
  145c98:	9c7fffc5 	stb	r17,-1(r19)
  145c9c:	9c3fea1e 	bne	r19,r16,145c48 <_dtoa_r+0x13d8>
  145ca0:	d9c01017 	ldw	r7,64(sp)
  145ca4:	dc001417 	ldw	r16,80(sp)
  145ca8:	b825883a 	mov	r18,r23
  145cac:	1815883a 	mov	r10,r3
  145cb0:	102f883a 	mov	r23,r2
  145cb4:	b1ed883a 	add	r22,r22,r7
  145cb8:	d9001117 	ldw	r4,68(sp)
  145cbc:	d9401217 	ldw	r5,72(sp)
  145cc0:	000d883a 	mov	r6,zero
  145cc4:	01cff834 	movhi	r7,16352
  145cc8:	da801615 	stw	r10,88(sp)
  145ccc:	014bf640 	call	14bf64 <__adddf3>
  145cd0:	da801617 	ldw	r10,88(sp)
  145cd4:	1009883a 	mov	r4,r2
  145cd8:	180b883a 	mov	r5,r3
  145cdc:	500f883a 	mov	r7,r10
  145ce0:	b80d883a 	mov	r6,r23
  145ce4:	014d2100 	call	14d210 <__ledf2>
  145ce8:	da801617 	ldw	r10,88(sp)
  145cec:	1000330e 	bge	r2,zero,145dbc <_dtoa_r+0x154c>
  145cf0:	d9001317 	ldw	r4,76(sp)
  145cf4:	b53fffc3 	ldbu	r20,-1(r22)
  145cf8:	d9000615 	stw	r4,24(sp)
  145cfc:	003d3706 	br	1451dc <_dtoa_r+0x96c>
  145d00:	d8800817 	ldw	r2,32(sp)
  145d04:	11e7c83a 	sub	r19,r2,r7
  145d08:	0005883a 	mov	r2,zero
  145d0c:	003d5106 	br	145254 <_dtoa_r+0x9e4>
  145d10:	00800044 	movi	r2,1
  145d14:	003dbd06 	br	14540c <_dtoa_r+0xb9c>
  145d18:	d8800217 	ldw	r2,8(sp)
  145d1c:	00c00d84 	movi	r3,54
  145d20:	dd000a17 	ldw	r20,40(sp)
  145d24:	1885c83a 	sub	r2,r3,r2
  145d28:	dcc00817 	ldw	r19,32(sp)
  145d2c:	003d4906 	br	145254 <_dtoa_r+0x9e4>
  145d30:	dcc00317 	ldw	r19,12(sp)
  145d34:	9029883a 	mov	r20,r18
  145d38:	04400084 	movi	r17,2
  145d3c:	003be306 	br	144ccc <_dtoa_r+0x45c>
  145d40:	d9000917 	ldw	r4,36(sp)
  145d44:	203f0926 	beq	r4,zero,14596c <_dtoa_r+0x10fc>
  145d48:	d9800d17 	ldw	r6,52(sp)
  145d4c:	01bca30e 	bge	zero,r6,144fdc <_dtoa_r+0x76c>
  145d50:	a00b883a 	mov	r5,r20
  145d54:	9809883a 	mov	r4,r19
  145d58:	000d883a 	mov	r6,zero
  145d5c:	01d00934 	movhi	r7,16420
  145d60:	014d2fc0 	call	14d2fc <__muldf3>
  145d64:	89000044 	addi	r4,r17,1
  145d68:	1027883a 	mov	r19,r2
  145d6c:	1829883a 	mov	r20,r3
  145d70:	014e2f00 	call	14e2f0 <__floatsidf>
  145d74:	9809883a 	mov	r4,r19
  145d78:	a00b883a 	mov	r5,r20
  145d7c:	100d883a 	mov	r6,r2
  145d80:	180f883a 	mov	r7,r3
  145d84:	014d2fc0 	call	14d2fc <__muldf3>
  145d88:	01d00734 	movhi	r7,16412
  145d8c:	1009883a 	mov	r4,r2
  145d90:	180b883a 	mov	r5,r3
  145d94:	000d883a 	mov	r6,zero
  145d98:	014bf640 	call	14bf64 <__adddf3>
  145d9c:	d9c00617 	ldw	r7,24(sp)
  145da0:	05bf3034 	movhi	r22,64704
  145da4:	1023883a 	mov	r17,r2
  145da8:	39ffffc4 	addi	r7,r7,-1
  145dac:	d9c01315 	stw	r7,76(sp)
  145db0:	1daf883a 	add	r23,r3,r22
  145db4:	dac00d17 	ldw	r11,52(sp)
  145db8:	003be006 	br	144d3c <_dtoa_r+0x4cc>
  145dbc:	d9801117 	ldw	r6,68(sp)
  145dc0:	d9c01217 	ldw	r7,72(sp)
  145dc4:	0009883a 	mov	r4,zero
  145dc8:	014ff834 	movhi	r5,16352
  145dcc:	da801615 	stw	r10,88(sp)
  145dd0:	014d9e80 	call	14d9e8 <__subdf3>
  145dd4:	da801617 	ldw	r10,88(sp)
  145dd8:	1009883a 	mov	r4,r2
  145ddc:	180b883a 	mov	r5,r3
  145de0:	b80d883a 	mov	r6,r23
  145de4:	500f883a 	mov	r7,r10
  145de8:	014d1380 	call	14d138 <__gedf2>
  145dec:	00bc7b0e 	bge	zero,r2,144fdc <_dtoa_r+0x76c>
  145df0:	01000c04 	movi	r4,48
  145df4:	00000106 	br	145dfc <_dtoa_r+0x158c>
  145df8:	102d883a 	mov	r22,r2
  145dfc:	b0bfffc4 	addi	r2,r22,-1
  145e00:	10c00007 	ldb	r3,0(r2)
  145e04:	193ffc26 	beq	r3,r4,145df8 <_dtoa_r+0x1588>
  145e08:	d9001317 	ldw	r4,76(sp)
  145e0c:	d9000615 	stw	r4,24(sp)
  145e10:	003c4306 	br	144f20 <_dtoa_r+0x6b0>
  145e14:	d8c01317 	ldw	r3,76(sp)
  145e18:	dc001117 	ldw	r16,68(sp)
  145e1c:	d8c00615 	stw	r3,24(sp)
  145e20:	003cee06 	br	1451dc <_dtoa_r+0x96c>
  145e24:	dd401217 	ldw	r21,72(sp)
  145e28:	dc001117 	ldw	r16,68(sp)
  145e2c:	dc801417 	ldw	r18,80(sp)
  145e30:	003c6a06 	br	144fdc <_dtoa_r+0x76c>
  145e34:	103e6f1e 	bne	r2,zero,1457f4 <_dtoa_r+0xf84>
  145e38:	b880004c 	andi	r2,r23,1
  145e3c:	103e6d26 	beq	r2,zero,1457f4 <_dtoa_r+0xf84>
  145e40:	003e6906 	br	1457e8 <_dtoa_r+0xf78>
  145e44:	8009883a 	mov	r4,r16
  145e48:	880b883a 	mov	r5,r17
  145e4c:	01800284 	movi	r6,10
  145e50:	000f883a 	mov	r7,zero
  145e54:	0147d1c0 	call	147d1c <__multadd>
  145e58:	d9000d17 	ldw	r4,52(sp)
  145e5c:	1023883a 	mov	r17,r2
  145e60:	d9000915 	stw	r4,36(sp)
  145e64:	003d5006 	br	1453a8 <_dtoa_r+0xb38>
  145e68:	04400084 	movi	r17,2
  145e6c:	003b9706 	br	144ccc <_dtoa_r+0x45c>
  145e70:	d8801317 	ldw	r2,76(sp)
  145e74:	d8800615 	stw	r2,24(sp)
  145e78:	003cd806 	br	1451dc <_dtoa_r+0x96c>
  145e7c:	d8801317 	ldw	r2,76(sp)
  145e80:	d8800615 	stw	r2,24(sp)
  145e84:	003c2606 	br	144f20 <_dtoa_r+0x6b0>
  145e88:	04c00044 	movi	r19,1
  145e8c:	003b3506 	br	144b64 <_dtoa_r+0x2f4>
  145e90:	3023883a 	mov	r17,r6
  145e94:	000b883a 	mov	r5,zero
  145e98:	003b5106 	br	144be0 <_dtoa_r+0x370>
  145e9c:	20fd3426 	beq	r4,r3,145370 <_dtoa_r+0xb00>
  145ea0:	00c00f04 	movi	r3,60
  145ea4:	1885c83a 	sub	r2,r3,r2
  145ea8:	003da106 	br	145530 <_dtoa_r+0xcc0>

00145eac <_fflush_r>:
  145eac:	defffb04 	addi	sp,sp,-20
  145eb0:	dcc00315 	stw	r19,12(sp)
  145eb4:	dc400115 	stw	r17,4(sp)
  145eb8:	dfc00415 	stw	ra,16(sp)
  145ebc:	dc800215 	stw	r18,8(sp)
  145ec0:	dc000015 	stw	r16,0(sp)
  145ec4:	2027883a 	mov	r19,r4
  145ec8:	2823883a 	mov	r17,r5
  145ecc:	20000226 	beq	r4,zero,145ed8 <_fflush_r+0x2c>
  145ed0:	20800e17 	ldw	r2,56(r4)
  145ed4:	10005826 	beq	r2,zero,146038 <_fflush_r+0x18c>
  145ed8:	8880030b 	ldhu	r2,12(r17)
  145edc:	10ffffcc 	andi	r3,r2,65535
  145ee0:	18e0001c 	xori	r3,r3,32768
  145ee4:	18e00004 	addi	r3,r3,-32768
  145ee8:	18002b26 	beq	r3,zero,145f98 <_fflush_r+0xec>
  145eec:	10c0020c 	andi	r3,r2,8
  145ef0:	1800311e 	bne	r3,zero,145fb8 <_fflush_r+0x10c>
  145ef4:	88c00117 	ldw	r3,4(r17)
  145ef8:	10820014 	ori	r2,r2,2048
  145efc:	8880030d 	sth	r2,12(r17)
  145f00:	00c05c0e 	bge	zero,r3,146074 <_fflush_r+0x1c8>
  145f04:	88c00a17 	ldw	r3,40(r17)
  145f08:	18002326 	beq	r3,zero,145f98 <_fflush_r+0xec>
  145f0c:	9c000017 	ldw	r16,0(r19)
  145f10:	1104000c 	andi	r4,r2,4096
  145f14:	98000015 	stw	zero,0(r19)
  145f18:	20004b26 	beq	r4,zero,146048 <_fflush_r+0x19c>
  145f1c:	89801417 	ldw	r6,80(r17)
  145f20:	1080010c 	andi	r2,r2,4
  145f24:	10000626 	beq	r2,zero,145f40 <_fflush_r+0x94>
  145f28:	89000117 	ldw	r4,4(r17)
  145f2c:	88800c17 	ldw	r2,48(r17)
  145f30:	310dc83a 	sub	r6,r6,r4
  145f34:	10000226 	beq	r2,zero,145f40 <_fflush_r+0x94>
  145f38:	88800f17 	ldw	r2,60(r17)
  145f3c:	308dc83a 	sub	r6,r6,r2
  145f40:	89400717 	ldw	r5,28(r17)
  145f44:	9809883a 	mov	r4,r19
  145f48:	000f883a 	mov	r7,zero
  145f4c:	183ee83a 	callr	r3
  145f50:	00ffffc4 	movi	r3,-1
  145f54:	10c04a26 	beq	r2,r3,146080 <_fflush_r+0x1d4>
  145f58:	88c0030b 	ldhu	r3,12(r17)
  145f5c:	89000417 	ldw	r4,16(r17)
  145f60:	88000115 	stw	zero,4(r17)
  145f64:	197dffcc 	andi	r5,r3,63487
  145f68:	8940030d 	sth	r5,12(r17)
  145f6c:	89000015 	stw	r4,0(r17)
  145f70:	18c4000c 	andi	r3,r3,4096
  145f74:	1800581e 	bne	r3,zero,1460d8 <_fflush_r+0x22c>
  145f78:	89400c17 	ldw	r5,48(r17)
  145f7c:	9c000015 	stw	r16,0(r19)
  145f80:	28000526 	beq	r5,zero,145f98 <_fflush_r+0xec>
  145f84:	88801004 	addi	r2,r17,64
  145f88:	28800226 	beq	r5,r2,145f94 <_fflush_r+0xe8>
  145f8c:	9809883a 	mov	r4,r19
  145f90:	01465ec0 	call	1465ec <_free_r>
  145f94:	88000c15 	stw	zero,48(r17)
  145f98:	0005883a 	mov	r2,zero
  145f9c:	dfc00417 	ldw	ra,16(sp)
  145fa0:	dcc00317 	ldw	r19,12(sp)
  145fa4:	dc800217 	ldw	r18,8(sp)
  145fa8:	dc400117 	ldw	r17,4(sp)
  145fac:	dc000017 	ldw	r16,0(sp)
  145fb0:	dec00504 	addi	sp,sp,20
  145fb4:	f800283a 	ret
  145fb8:	8c800417 	ldw	r18,16(r17)
  145fbc:	903ff626 	beq	r18,zero,145f98 <_fflush_r+0xec>
  145fc0:	8c000017 	ldw	r16,0(r17)
  145fc4:	108000cc 	andi	r2,r2,3
  145fc8:	8c800015 	stw	r18,0(r17)
  145fcc:	84a1c83a 	sub	r16,r16,r18
  145fd0:	10001b26 	beq	r2,zero,146040 <_fflush_r+0x194>
  145fd4:	0005883a 	mov	r2,zero
  145fd8:	88800215 	stw	r2,8(r17)
  145fdc:	04000316 	blt	zero,r16,145fec <_fflush_r+0x140>
  145fe0:	003fed06 	br	145f98 <_fflush_r+0xec>
  145fe4:	90a5883a 	add	r18,r18,r2
  145fe8:	043feb0e 	bge	zero,r16,145f98 <_fflush_r+0xec>
  145fec:	88800917 	ldw	r2,36(r17)
  145ff0:	89400717 	ldw	r5,28(r17)
  145ff4:	800f883a 	mov	r7,r16
  145ff8:	900d883a 	mov	r6,r18
  145ffc:	9809883a 	mov	r4,r19
  146000:	103ee83a 	callr	r2
  146004:	80a1c83a 	sub	r16,r16,r2
  146008:	00bff616 	blt	zero,r2,145fe4 <_fflush_r+0x138>
  14600c:	88c0030b 	ldhu	r3,12(r17)
  146010:	00bfffc4 	movi	r2,-1
  146014:	18c01014 	ori	r3,r3,64
  146018:	88c0030d 	sth	r3,12(r17)
  14601c:	dfc00417 	ldw	ra,16(sp)
  146020:	dcc00317 	ldw	r19,12(sp)
  146024:	dc800217 	ldw	r18,8(sp)
  146028:	dc400117 	ldw	r17,4(sp)
  14602c:	dc000017 	ldw	r16,0(sp)
  146030:	dec00504 	addi	sp,sp,20
  146034:	f800283a 	ret
  146038:	01461b80 	call	1461b8 <__sinit>
  14603c:	003fa606 	br	145ed8 <_fflush_r+0x2c>
  146040:	88800517 	ldw	r2,20(r17)
  146044:	003fe406 	br	145fd8 <_fflush_r+0x12c>
  146048:	89400717 	ldw	r5,28(r17)
  14604c:	000d883a 	mov	r6,zero
  146050:	9809883a 	mov	r4,r19
  146054:	01c00044 	movi	r7,1
  146058:	183ee83a 	callr	r3
  14605c:	100d883a 	mov	r6,r2
  146060:	00bfffc4 	movi	r2,-1
  146064:	30801326 	beq	r6,r2,1460b4 <_fflush_r+0x208>
  146068:	8880030b 	ldhu	r2,12(r17)
  14606c:	88c00a17 	ldw	r3,40(r17)
  146070:	003fab06 	br	145f20 <_fflush_r+0x74>
  146074:	88c00f17 	ldw	r3,60(r17)
  146078:	00ffa216 	blt	zero,r3,145f04 <_fflush_r+0x58>
  14607c:	003fc606 	br	145f98 <_fflush_r+0xec>
  146080:	98c00017 	ldw	r3,0(r19)
  146084:	183fb426 	beq	r3,zero,145f58 <_fflush_r+0xac>
  146088:	01000744 	movi	r4,29
  14608c:	19000226 	beq	r3,r4,146098 <_fflush_r+0x1ec>
  146090:	01000584 	movi	r4,22
  146094:	1900121e 	bne	r3,r4,1460e0 <_fflush_r+0x234>
  146098:	88c0030b 	ldhu	r3,12(r17)
  14609c:	88800417 	ldw	r2,16(r17)
  1460a0:	88000115 	stw	zero,4(r17)
  1460a4:	18fdffcc 	andi	r3,r3,63487
  1460a8:	88c0030d 	sth	r3,12(r17)
  1460ac:	88800015 	stw	r2,0(r17)
  1460b0:	003fb106 	br	145f78 <_fflush_r+0xcc>
  1460b4:	98800017 	ldw	r2,0(r19)
  1460b8:	103feb26 	beq	r2,zero,146068 <_fflush_r+0x1bc>
  1460bc:	00c00744 	movi	r3,29
  1460c0:	10c00226 	beq	r2,r3,1460cc <_fflush_r+0x220>
  1460c4:	00c00584 	movi	r3,22
  1460c8:	10ffd01e 	bne	r2,r3,14600c <_fflush_r+0x160>
  1460cc:	9c000015 	stw	r16,0(r19)
  1460d0:	0005883a 	mov	r2,zero
  1460d4:	003fb106 	br	145f9c <_fflush_r+0xf0>
  1460d8:	88801415 	stw	r2,80(r17)
  1460dc:	003fa606 	br	145f78 <_fflush_r+0xcc>
  1460e0:	88c0030b 	ldhu	r3,12(r17)
  1460e4:	18c01014 	ori	r3,r3,64
  1460e8:	88c0030d 	sth	r3,12(r17)
  1460ec:	003fab06 	br	145f9c <_fflush_r+0xf0>

001460f0 <fflush>:
  1460f0:	200b883a 	mov	r5,r4
  1460f4:	20000426 	beq	r4,zero,146108 <fflush+0x18>
  1460f8:	00800574 	movhi	r2,21
  1460fc:	108bab04 	addi	r2,r2,11948
  146100:	11000017 	ldw	r4,0(r2)
  146104:	0145eac1 	jmpi	145eac <_fflush_r>
  146108:	00800574 	movhi	r2,21
  14610c:	108baa04 	addi	r2,r2,11944
  146110:	11000017 	ldw	r4,0(r2)
  146114:	01400534 	movhi	r5,20
  146118:	2957ab04 	addi	r5,r5,24236
  14611c:	0146e101 	jmpi	146e10 <_fwalk_reent>

00146120 <__fp_lock>:
  146120:	0005883a 	mov	r2,zero
  146124:	f800283a 	ret

00146128 <__fp_unlock>:
  146128:	0005883a 	mov	r2,zero
  14612c:	f800283a 	ret

00146130 <_cleanup_r>:
  146130:	01400574 	movhi	r5,21
  146134:	296b5004 	addi	r5,r5,-21184
  146138:	0146d681 	jmpi	146d68 <_fwalk>

0014613c <__sfmoreglue>:
  14613c:	defffc04 	addi	sp,sp,-16
  146140:	dc400115 	stw	r17,4(sp)
  146144:	2c401a24 	muli	r17,r5,104
  146148:	dc800215 	stw	r18,8(sp)
  14614c:	2825883a 	mov	r18,r5
  146150:	89400304 	addi	r5,r17,12
  146154:	dc000015 	stw	r16,0(sp)
  146158:	dfc00315 	stw	ra,12(sp)
  14615c:	01471500 	call	147150 <_malloc_r>
  146160:	1021883a 	mov	r16,r2
  146164:	10000726 	beq	r2,zero,146184 <__sfmoreglue+0x48>
  146168:	11000304 	addi	r4,r2,12
  14616c:	10000015 	stw	zero,0(r2)
  146170:	14800115 	stw	r18,4(r2)
  146174:	11000215 	stw	r4,8(r2)
  146178:	000b883a 	mov	r5,zero
  14617c:	880d883a 	mov	r6,r17
  146180:	0147b380 	call	147b38 <memset>
  146184:	8005883a 	mov	r2,r16
  146188:	dfc00317 	ldw	ra,12(sp)
  14618c:	dc800217 	ldw	r18,8(sp)
  146190:	dc400117 	ldw	r17,4(sp)
  146194:	dc000017 	ldw	r16,0(sp)
  146198:	dec00404 	addi	sp,sp,16
  14619c:	f800283a 	ret

001461a0 <_cleanup>:
  1461a0:	00800574 	movhi	r2,21
  1461a4:	108baa04 	addi	r2,r2,11944
  1461a8:	11000017 	ldw	r4,0(r2)
  1461ac:	01400574 	movhi	r5,21
  1461b0:	296b5004 	addi	r5,r5,-21184
  1461b4:	0146d681 	jmpi	146d68 <_fwalk>

001461b8 <__sinit>:
  1461b8:	20800e17 	ldw	r2,56(r4)
  1461bc:	defff704 	addi	sp,sp,-36
  1461c0:	dc800215 	stw	r18,8(sp)
  1461c4:	dfc00815 	stw	ra,32(sp)
  1461c8:	ddc00715 	stw	r23,28(sp)
  1461cc:	dd800615 	stw	r22,24(sp)
  1461d0:	dd400515 	stw	r21,20(sp)
  1461d4:	dd000415 	stw	r20,16(sp)
  1461d8:	dcc00315 	stw	r19,12(sp)
  1461dc:	dc400115 	stw	r17,4(sp)
  1461e0:	dc000015 	stw	r16,0(sp)
  1461e4:	2025883a 	mov	r18,r4
  1461e8:	10004f1e 	bne	r2,zero,146328 <__sinit+0x170>
  1461ec:	24000117 	ldw	r16,4(r4)
  1461f0:	00c00534 	movhi	r3,20
  1461f4:	18d84c04 	addi	r3,r3,24880
  1461f8:	20c00f15 	stw	r3,60(r4)
  1461fc:	2080bb04 	addi	r2,r4,748
  146200:	00c000c4 	movi	r3,3
  146204:	05c00044 	movi	r23,1
  146208:	20c0b915 	stw	r3,740(r4)
  14620c:	2080ba15 	stw	r2,744(r4)
  146210:	25c00e15 	stw	r23,56(r4)
  146214:	2000b815 	stw	zero,736(r4)
  146218:	00800104 	movi	r2,4
  14621c:	81001704 	addi	r4,r16,92
  146220:	000b883a 	mov	r5,zero
  146224:	01800204 	movi	r6,8
  146228:	80000015 	stw	zero,0(r16)
  14622c:	80000115 	stw	zero,4(r16)
  146230:	80000215 	stw	zero,8(r16)
  146234:	8080030d 	sth	r2,12(r16)
  146238:	80001915 	stw	zero,100(r16)
  14623c:	8000038d 	sth	zero,14(r16)
  146240:	80000415 	stw	zero,16(r16)
  146244:	80000515 	stw	zero,20(r16)
  146248:	80000615 	stw	zero,24(r16)
  14624c:	0147b380 	call	147b38 <memset>
  146250:	94400217 	ldw	r17,8(r18)
  146254:	05800574 	movhi	r22,21
  146258:	b5a4d804 	addi	r22,r22,-27808
  14625c:	05400574 	movhi	r21,21
  146260:	ad64ef04 	addi	r21,r21,-27716
  146264:	05000574 	movhi	r20,21
  146268:	a5250e04 	addi	r20,r20,-27592
  14626c:	04c00574 	movhi	r19,21
  146270:	9ce52504 	addi	r19,r19,-27500
  146274:	84000715 	stw	r16,28(r16)
  146278:	85800815 	stw	r22,32(r16)
  14627c:	85400915 	stw	r21,36(r16)
  146280:	85000a15 	stw	r20,40(r16)
  146284:	84c00b15 	stw	r19,44(r16)
  146288:	00800284 	movi	r2,10
  14628c:	89001704 	addi	r4,r17,92
  146290:	000b883a 	mov	r5,zero
  146294:	01800204 	movi	r6,8
  146298:	88000015 	stw	zero,0(r17)
  14629c:	88000115 	stw	zero,4(r17)
  1462a0:	88000215 	stw	zero,8(r17)
  1462a4:	8880030d 	sth	r2,12(r17)
  1462a8:	88001915 	stw	zero,100(r17)
  1462ac:	8dc0038d 	sth	r23,14(r17)
  1462b0:	88000415 	stw	zero,16(r17)
  1462b4:	88000515 	stw	zero,20(r17)
  1462b8:	88000615 	stw	zero,24(r17)
  1462bc:	0147b380 	call	147b38 <memset>
  1462c0:	94000317 	ldw	r16,12(r18)
  1462c4:	00800484 	movi	r2,18
  1462c8:	8c400715 	stw	r17,28(r17)
  1462cc:	8d800815 	stw	r22,32(r17)
  1462d0:	8d400915 	stw	r21,36(r17)
  1462d4:	8d000a15 	stw	r20,40(r17)
  1462d8:	8cc00b15 	stw	r19,44(r17)
  1462dc:	8080030d 	sth	r2,12(r16)
  1462e0:	00800084 	movi	r2,2
  1462e4:	80000015 	stw	zero,0(r16)
  1462e8:	80000115 	stw	zero,4(r16)
  1462ec:	80000215 	stw	zero,8(r16)
  1462f0:	80001915 	stw	zero,100(r16)
  1462f4:	8080038d 	sth	r2,14(r16)
  1462f8:	80000415 	stw	zero,16(r16)
  1462fc:	80000515 	stw	zero,20(r16)
  146300:	80000615 	stw	zero,24(r16)
  146304:	81001704 	addi	r4,r16,92
  146308:	000b883a 	mov	r5,zero
  14630c:	01800204 	movi	r6,8
  146310:	0147b380 	call	147b38 <memset>
  146314:	84000715 	stw	r16,28(r16)
  146318:	85800815 	stw	r22,32(r16)
  14631c:	85400915 	stw	r21,36(r16)
  146320:	85000a15 	stw	r20,40(r16)
  146324:	84c00b15 	stw	r19,44(r16)
  146328:	dfc00817 	ldw	ra,32(sp)
  14632c:	ddc00717 	ldw	r23,28(sp)
  146330:	dd800617 	ldw	r22,24(sp)
  146334:	dd400517 	ldw	r21,20(sp)
  146338:	dd000417 	ldw	r20,16(sp)
  14633c:	dcc00317 	ldw	r19,12(sp)
  146340:	dc800217 	ldw	r18,8(sp)
  146344:	dc400117 	ldw	r17,4(sp)
  146348:	dc000017 	ldw	r16,0(sp)
  14634c:	dec00904 	addi	sp,sp,36
  146350:	f800283a 	ret

00146354 <__sfp>:
  146354:	defffb04 	addi	sp,sp,-20
  146358:	00800574 	movhi	r2,21
  14635c:	108baa04 	addi	r2,r2,11944
  146360:	dc800215 	stw	r18,8(sp)
  146364:	14800017 	ldw	r18,0(r2)
  146368:	dcc00315 	stw	r19,12(sp)
  14636c:	dfc00415 	stw	ra,16(sp)
  146370:	90800e17 	ldw	r2,56(r18)
  146374:	dc400115 	stw	r17,4(sp)
  146378:	dc000015 	stw	r16,0(sp)
  14637c:	2027883a 	mov	r19,r4
  146380:	10002f26 	beq	r2,zero,146440 <__sfp+0xec>
  146384:	9480b804 	addi	r18,r18,736
  146388:	047fffc4 	movi	r17,-1
  14638c:	91400117 	ldw	r5,4(r18)
  146390:	94000217 	ldw	r16,8(r18)
  146394:	297fffc4 	addi	r5,r5,-1
  146398:	28000a16 	blt	r5,zero,1463c4 <__sfp+0x70>
  14639c:	8080030f 	ldh	r2,12(r16)
  1463a0:	10000c26 	beq	r2,zero,1463d4 <__sfp+0x80>
  1463a4:	80c01d04 	addi	r3,r16,116
  1463a8:	00000206 	br	1463b4 <__sfp+0x60>
  1463ac:	18bfe60f 	ldh	r2,-104(r3)
  1463b0:	10000826 	beq	r2,zero,1463d4 <__sfp+0x80>
  1463b4:	297fffc4 	addi	r5,r5,-1
  1463b8:	1c3ffd04 	addi	r16,r3,-12
  1463bc:	18c01a04 	addi	r3,r3,104
  1463c0:	2c7ffa1e 	bne	r5,r17,1463ac <__sfp+0x58>
  1463c4:	90800017 	ldw	r2,0(r18)
  1463c8:	10002026 	beq	r2,zero,14644c <__sfp+0xf8>
  1463cc:	1025883a 	mov	r18,r2
  1463d0:	003fee06 	br	14638c <__sfp+0x38>
  1463d4:	00bfffc4 	movi	r2,-1
  1463d8:	8080038d 	sth	r2,14(r16)
  1463dc:	00800044 	movi	r2,1
  1463e0:	8080030d 	sth	r2,12(r16)
  1463e4:	80001915 	stw	zero,100(r16)
  1463e8:	80000015 	stw	zero,0(r16)
  1463ec:	80000215 	stw	zero,8(r16)
  1463f0:	80000115 	stw	zero,4(r16)
  1463f4:	80000415 	stw	zero,16(r16)
  1463f8:	80000515 	stw	zero,20(r16)
  1463fc:	80000615 	stw	zero,24(r16)
  146400:	81001704 	addi	r4,r16,92
  146404:	000b883a 	mov	r5,zero
  146408:	01800204 	movi	r6,8
  14640c:	0147b380 	call	147b38 <memset>
  146410:	8005883a 	mov	r2,r16
  146414:	80000c15 	stw	zero,48(r16)
  146418:	80000d15 	stw	zero,52(r16)
  14641c:	80001115 	stw	zero,68(r16)
  146420:	80001215 	stw	zero,72(r16)
  146424:	dfc00417 	ldw	ra,16(sp)
  146428:	dcc00317 	ldw	r19,12(sp)
  14642c:	dc800217 	ldw	r18,8(sp)
  146430:	dc400117 	ldw	r17,4(sp)
  146434:	dc000017 	ldw	r16,0(sp)
  146438:	dec00504 	addi	sp,sp,20
  14643c:	f800283a 	ret
  146440:	9009883a 	mov	r4,r18
  146444:	01461b80 	call	1461b8 <__sinit>
  146448:	003fce06 	br	146384 <__sfp+0x30>
  14644c:	9809883a 	mov	r4,r19
  146450:	01400104 	movi	r5,4
  146454:	014613c0 	call	14613c <__sfmoreglue>
  146458:	90800015 	stw	r2,0(r18)
  14645c:	103fdb1e 	bne	r2,zero,1463cc <__sfp+0x78>
  146460:	00800304 	movi	r2,12
  146464:	98800015 	stw	r2,0(r19)
  146468:	0005883a 	mov	r2,zero
  14646c:	003fed06 	br	146424 <__sfp+0xd0>

00146470 <__sfp_lock_acquire>:
  146470:	f800283a 	ret

00146474 <__sfp_lock_release>:
  146474:	f800283a 	ret

00146478 <__sinit_lock_acquire>:
  146478:	f800283a 	ret

0014647c <__sinit_lock_release>:
  14647c:	f800283a 	ret

00146480 <__fp_lock_all>:
  146480:	00800574 	movhi	r2,21
  146484:	108bab04 	addi	r2,r2,11948
  146488:	11000017 	ldw	r4,0(r2)
  14648c:	01400534 	movhi	r5,20
  146490:	29584804 	addi	r5,r5,24864
  146494:	0146d681 	jmpi	146d68 <_fwalk>

00146498 <__fp_unlock_all>:
  146498:	00800574 	movhi	r2,21
  14649c:	108bab04 	addi	r2,r2,11948
  1464a0:	11000017 	ldw	r4,0(r2)
  1464a4:	01400534 	movhi	r5,20
  1464a8:	29584a04 	addi	r5,r5,24872
  1464ac:	0146d681 	jmpi	146d68 <_fwalk>

001464b0 <_malloc_trim_r>:
  1464b0:	defffb04 	addi	sp,sp,-20
  1464b4:	dcc00315 	stw	r19,12(sp)
  1464b8:	dc800215 	stw	r18,8(sp)
  1464bc:	dc400115 	stw	r17,4(sp)
  1464c0:	dc000015 	stw	r16,0(sp)
  1464c4:	2827883a 	mov	r19,r5
  1464c8:	dfc00415 	stw	ra,16(sp)
  1464cc:	04400574 	movhi	r17,21
  1464d0:	8c462604 	addi	r17,r17,6296
  1464d4:	2021883a 	mov	r16,r4
  1464d8:	014e9280 	call	14e928 <__malloc_lock>
  1464dc:	88800217 	ldw	r2,8(r17)
  1464e0:	14800117 	ldw	r18,4(r2)
  1464e4:	00bfff04 	movi	r2,-4
  1464e8:	90a4703a 	and	r18,r18,r2
  1464ec:	94e7c83a 	sub	r19,r18,r19
  1464f0:	9cc3fbc4 	addi	r19,r19,4079
  1464f4:	9826d33a 	srli	r19,r19,12
  1464f8:	0083ffc4 	movi	r2,4095
  1464fc:	9cffffc4 	addi	r19,r19,-1
  146500:	9826933a 	slli	r19,r19,12
  146504:	14c0060e 	bge	r2,r19,146520 <_malloc_trim_r+0x70>
  146508:	8009883a 	mov	r4,r16
  14650c:	000b883a 	mov	r5,zero
  146510:	01492fc0 	call	1492fc <_sbrk_r>
  146514:	88c00217 	ldw	r3,8(r17)
  146518:	1c87883a 	add	r3,r3,r18
  14651c:	10c00a26 	beq	r2,r3,146548 <_malloc_trim_r+0x98>
  146520:	8009883a 	mov	r4,r16
  146524:	014e9480 	call	14e948 <__malloc_unlock>
  146528:	0005883a 	mov	r2,zero
  14652c:	dfc00417 	ldw	ra,16(sp)
  146530:	dcc00317 	ldw	r19,12(sp)
  146534:	dc800217 	ldw	r18,8(sp)
  146538:	dc400117 	ldw	r17,4(sp)
  14653c:	dc000017 	ldw	r16,0(sp)
  146540:	dec00504 	addi	sp,sp,20
  146544:	f800283a 	ret
  146548:	8009883a 	mov	r4,r16
  14654c:	04cbc83a 	sub	r5,zero,r19
  146550:	01492fc0 	call	1492fc <_sbrk_r>
  146554:	00ffffc4 	movi	r3,-1
  146558:	10c01326 	beq	r2,r3,1465a8 <_malloc_trim_r+0xf8>
  14655c:	00800574 	movhi	r2,21
  146560:	108bc904 	addi	r2,r2,12068
  146564:	11000017 	ldw	r4,0(r2)
  146568:	88c00217 	ldw	r3,8(r17)
  14656c:	94e5c83a 	sub	r18,r18,r19
  146570:	94800054 	ori	r18,r18,1
  146574:	24e7c83a 	sub	r19,r4,r19
  146578:	1c800115 	stw	r18,4(r3)
  14657c:	8009883a 	mov	r4,r16
  146580:	14c00015 	stw	r19,0(r2)
  146584:	014e9480 	call	14e948 <__malloc_unlock>
  146588:	00800044 	movi	r2,1
  14658c:	dfc00417 	ldw	ra,16(sp)
  146590:	dcc00317 	ldw	r19,12(sp)
  146594:	dc800217 	ldw	r18,8(sp)
  146598:	dc400117 	ldw	r17,4(sp)
  14659c:	dc000017 	ldw	r16,0(sp)
  1465a0:	dec00504 	addi	sp,sp,20
  1465a4:	f800283a 	ret
  1465a8:	8009883a 	mov	r4,r16
  1465ac:	000b883a 	mov	r5,zero
  1465b0:	01492fc0 	call	1492fc <_sbrk_r>
  1465b4:	88c00217 	ldw	r3,8(r17)
  1465b8:	014003c4 	movi	r5,15
  1465bc:	10c9c83a 	sub	r4,r2,r3
  1465c0:	293fd70e 	bge	r5,r4,146520 <_malloc_trim_r+0x70>
  1465c4:	01400574 	movhi	r5,21
  1465c8:	294bad04 	addi	r5,r5,11956
  1465cc:	29400017 	ldw	r5,0(r5)
  1465d0:	21000054 	ori	r4,r4,1
  1465d4:	19000115 	stw	r4,4(r3)
  1465d8:	1145c83a 	sub	r2,r2,r5
  1465dc:	01400574 	movhi	r5,21
  1465e0:	294bc904 	addi	r5,r5,12068
  1465e4:	28800015 	stw	r2,0(r5)
  1465e8:	003fcd06 	br	146520 <_malloc_trim_r+0x70>

001465ec <_free_r>:
  1465ec:	defffd04 	addi	sp,sp,-12
  1465f0:	dc000015 	stw	r16,0(sp)
  1465f4:	dfc00215 	stw	ra,8(sp)
  1465f8:	dc400115 	stw	r17,4(sp)
  1465fc:	2821883a 	mov	r16,r5
  146600:	28004c26 	beq	r5,zero,146734 <_free_r+0x148>
  146604:	2023883a 	mov	r17,r4
  146608:	014e9280 	call	14e928 <__malloc_lock>
  14660c:	823fff17 	ldw	r8,-4(r16)
  146610:	00bfff84 	movi	r2,-2
  146614:	81bffe04 	addi	r6,r16,-8
  146618:	4084703a 	and	r2,r8,r2
  14661c:	3087883a 	add	r3,r6,r2
  146620:	01400574 	movhi	r5,21
  146624:	29462604 	addi	r5,r5,6296
  146628:	1a400117 	ldw	r9,4(r3)
  14662c:	29000217 	ldw	r4,8(r5)
  146630:	01ffff04 	movi	r7,-4
  146634:	49ce703a 	and	r7,r9,r7
  146638:	20c06526 	beq	r4,r3,1467d0 <_free_r+0x1e4>
  14663c:	19c00115 	stw	r7,4(r3)
  146640:	4200004c 	andi	r8,r8,1
  146644:	40003026 	beq	r8,zero,146708 <_free_r+0x11c>
  146648:	0009883a 	mov	r4,zero
  14664c:	19d1883a 	add	r8,r3,r7
  146650:	42000117 	ldw	r8,4(r8)
  146654:	4200004c 	andi	r8,r8,1
  146658:	4000061e 	bne	r8,zero,146674 <_free_r+0x88>
  14665c:	11c5883a 	add	r2,r2,r7
  146660:	19c00217 	ldw	r7,8(r3)
  146664:	20004e26 	beq	r4,zero,1467a0 <_free_r+0x1b4>
  146668:	18c00317 	ldw	r3,12(r3)
  14666c:	38c00315 	stw	r3,12(r7)
  146670:	19c00215 	stw	r7,8(r3)
  146674:	10c00054 	ori	r3,r2,1
  146678:	30c00115 	stw	r3,4(r6)
  14667c:	3087883a 	add	r3,r6,r2
  146680:	18800015 	stw	r2,0(r3)
  146684:	20001a1e 	bne	r4,zero,1466f0 <_free_r+0x104>
  146688:	00c07fc4 	movi	r3,511
  14668c:	18802e2e 	bgeu	r3,r2,146748 <_free_r+0x15c>
  146690:	1006d27a 	srli	r3,r2,9
  146694:	01000104 	movi	r4,4
  146698:	20c06636 	bltu	r4,r3,146834 <_free_r+0x248>
  14669c:	1008d1ba 	srli	r4,r2,6
  1466a0:	21000e04 	addi	r4,r4,56
  1466a4:	210f883a 	add	r7,r4,r4
  1466a8:	39cf883a 	add	r7,r7,r7
  1466ac:	39cf883a 	add	r7,r7,r7
  1466b0:	29cf883a 	add	r7,r5,r7
  1466b4:	38c00217 	ldw	r3,8(r7)
  1466b8:	01400574 	movhi	r5,21
  1466bc:	29462604 	addi	r5,r5,6296
  1466c0:	19c06126 	beq	r3,r7,146848 <_free_r+0x25c>
  1466c4:	013fff04 	movi	r4,-4
  1466c8:	19400117 	ldw	r5,4(r3)
  1466cc:	290a703a 	and	r5,r5,r4
  1466d0:	1140022e 	bgeu	r2,r5,1466dc <_free_r+0xf0>
  1466d4:	18c00217 	ldw	r3,8(r3)
  1466d8:	38fffb1e 	bne	r7,r3,1466c8 <_free_r+0xdc>
  1466dc:	18800317 	ldw	r2,12(r3)
  1466e0:	30800315 	stw	r2,12(r6)
  1466e4:	30c00215 	stw	r3,8(r6)
  1466e8:	11800215 	stw	r6,8(r2)
  1466ec:	19800315 	stw	r6,12(r3)
  1466f0:	8809883a 	mov	r4,r17
  1466f4:	dfc00217 	ldw	ra,8(sp)
  1466f8:	dc400117 	ldw	r17,4(sp)
  1466fc:	dc000017 	ldw	r16,0(sp)
  146700:	dec00304 	addi	sp,sp,12
  146704:	014e9481 	jmpi	14e948 <__malloc_unlock>
  146708:	813ffe17 	ldw	r4,-8(r16)
  14670c:	2a400204 	addi	r9,r5,8
  146710:	310dc83a 	sub	r6,r6,r4
  146714:	32000217 	ldw	r8,8(r6)
  146718:	1105883a 	add	r2,r2,r4
  14671c:	42404326 	beq	r8,r9,14682c <_free_r+0x240>
  146720:	32400317 	ldw	r9,12(r6)
  146724:	0009883a 	mov	r4,zero
  146728:	42400315 	stw	r9,12(r8)
  14672c:	4a000215 	stw	r8,8(r9)
  146730:	003fc606 	br	14664c <_free_r+0x60>
  146734:	dfc00217 	ldw	ra,8(sp)
  146738:	dc400117 	ldw	r17,4(sp)
  14673c:	dc000017 	ldw	r16,0(sp)
  146740:	dec00304 	addi	sp,sp,12
  146744:	f800283a 	ret
  146748:	1004d0fa 	srli	r2,r2,3
  14674c:	02000044 	movi	r8,1
  146750:	29c00117 	ldw	r7,4(r5)
  146754:	1087883a 	add	r3,r2,r2
  146758:	18c7883a 	add	r3,r3,r3
  14675c:	18c7883a 	add	r3,r3,r3
  146760:	28c7883a 	add	r3,r5,r3
  146764:	1005d0ba 	srai	r2,r2,2
  146768:	19000217 	ldw	r4,8(r3)
  14676c:	30c00315 	stw	r3,12(r6)
  146770:	4084983a 	sll	r2,r8,r2
  146774:	31000215 	stw	r4,8(r6)
  146778:	19800215 	stw	r6,8(r3)
  14677c:	11c4b03a 	or	r2,r2,r7
  146780:	21800315 	stw	r6,12(r4)
  146784:	8809883a 	mov	r4,r17
  146788:	28800115 	stw	r2,4(r5)
  14678c:	dfc00217 	ldw	ra,8(sp)
  146790:	dc400117 	ldw	r17,4(sp)
  146794:	dc000017 	ldw	r16,0(sp)
  146798:	dec00304 	addi	sp,sp,12
  14679c:	014e9481 	jmpi	14e948 <__malloc_unlock>
  1467a0:	02000574 	movhi	r8,21
  1467a4:	42062804 	addi	r8,r8,6304
  1467a8:	3a3faf1e 	bne	r7,r8,146668 <_free_r+0x7c>
  1467ac:	29800515 	stw	r6,20(r5)
  1467b0:	29800415 	stw	r6,16(r5)
  1467b4:	10c00054 	ori	r3,r2,1
  1467b8:	31c00315 	stw	r7,12(r6)
  1467bc:	31c00215 	stw	r7,8(r6)
  1467c0:	30c00115 	stw	r3,4(r6)
  1467c4:	308d883a 	add	r6,r6,r2
  1467c8:	30800015 	stw	r2,0(r6)
  1467cc:	003fc806 	br	1466f0 <_free_r+0x104>
  1467d0:	4200004c 	andi	r8,r8,1
  1467d4:	3885883a 	add	r2,r7,r2
  1467d8:	4000071e 	bne	r8,zero,1467f8 <_free_r+0x20c>
  1467dc:	81fffe17 	ldw	r7,-8(r16)
  1467e0:	31cdc83a 	sub	r6,r6,r7
  1467e4:	30c00317 	ldw	r3,12(r6)
  1467e8:	31000217 	ldw	r4,8(r6)
  1467ec:	11c5883a 	add	r2,r2,r7
  1467f0:	20c00315 	stw	r3,12(r4)
  1467f4:	19000215 	stw	r4,8(r3)
  1467f8:	00c00574 	movhi	r3,21
  1467fc:	18cbae04 	addi	r3,r3,11960
  146800:	11000054 	ori	r4,r2,1
  146804:	18c00017 	ldw	r3,0(r3)
  146808:	31000115 	stw	r4,4(r6)
  14680c:	29800215 	stw	r6,8(r5)
  146810:	10ffb736 	bltu	r2,r3,1466f0 <_free_r+0x104>
  146814:	00800574 	movhi	r2,21
  146818:	108bbf04 	addi	r2,r2,12028
  14681c:	11400017 	ldw	r5,0(r2)
  146820:	8809883a 	mov	r4,r17
  146824:	01464b00 	call	1464b0 <_malloc_trim_r>
  146828:	003fb106 	br	1466f0 <_free_r+0x104>
  14682c:	01000044 	movi	r4,1
  146830:	003f8606 	br	14664c <_free_r+0x60>
  146834:	01000504 	movi	r4,20
  146838:	20c00b36 	bltu	r4,r3,146868 <_free_r+0x27c>
  14683c:	190016c4 	addi	r4,r3,91
  146840:	210f883a 	add	r7,r4,r4
  146844:	003f9806 	br	1466a8 <_free_r+0xbc>
  146848:	2009d0ba 	srai	r4,r4,2
  14684c:	00800044 	movi	r2,1
  146850:	29c00117 	ldw	r7,4(r5)
  146854:	1108983a 	sll	r4,r2,r4
  146858:	1805883a 	mov	r2,r3
  14685c:	21c8b03a 	or	r4,r4,r7
  146860:	29000115 	stw	r4,4(r5)
  146864:	003f9e06 	br	1466e0 <_free_r+0xf4>
  146868:	01001504 	movi	r4,84
  14686c:	20c00436 	bltu	r4,r3,146880 <_free_r+0x294>
  146870:	1008d33a 	srli	r4,r2,12
  146874:	21001b84 	addi	r4,r4,110
  146878:	210f883a 	add	r7,r4,r4
  14687c:	003f8a06 	br	1466a8 <_free_r+0xbc>
  146880:	01005504 	movi	r4,340
  146884:	20c00436 	bltu	r4,r3,146898 <_free_r+0x2ac>
  146888:	1008d3fa 	srli	r4,r2,15
  14688c:	21001dc4 	addi	r4,r4,119
  146890:	210f883a 	add	r7,r4,r4
  146894:	003f8406 	br	1466a8 <_free_r+0xbc>
  146898:	01015504 	movi	r4,1364
  14689c:	20c00436 	bltu	r4,r3,1468b0 <_free_r+0x2c4>
  1468a0:	1008d4ba 	srli	r4,r2,18
  1468a4:	21001f04 	addi	r4,r4,124
  1468a8:	210f883a 	add	r7,r4,r4
  1468ac:	003f7e06 	br	1466a8 <_free_r+0xbc>
  1468b0:	01c03f04 	movi	r7,252
  1468b4:	01001f84 	movi	r4,126
  1468b8:	003f7b06 	br	1466a8 <_free_r+0xbc>

001468bc <__sfvwrite_r>:
  1468bc:	30800217 	ldw	r2,8(r6)
  1468c0:	defff404 	addi	sp,sp,-48
  1468c4:	dcc00515 	stw	r19,20(sp)
  1468c8:	dfc00b15 	stw	ra,44(sp)
  1468cc:	df000a15 	stw	fp,40(sp)
  1468d0:	ddc00915 	stw	r23,36(sp)
  1468d4:	dd800815 	stw	r22,32(sp)
  1468d8:	dd400715 	stw	r21,28(sp)
  1468dc:	dd000615 	stw	r20,24(sp)
  1468e0:	dc800415 	stw	r18,16(sp)
  1468e4:	dc400315 	stw	r17,12(sp)
  1468e8:	dc000215 	stw	r16,8(sp)
  1468ec:	3027883a 	mov	r19,r6
  1468f0:	10001d26 	beq	r2,zero,146968 <__sfvwrite_r+0xac>
  1468f4:	2880030b 	ldhu	r2,12(r5)
  1468f8:	202b883a 	mov	r21,r4
  1468fc:	2821883a 	mov	r16,r5
  146900:	10c0020c 	andi	r3,r2,8
  146904:	18002526 	beq	r3,zero,14699c <__sfvwrite_r+0xe0>
  146908:	28c00417 	ldw	r3,16(r5)
  14690c:	18002326 	beq	r3,zero,14699c <__sfvwrite_r+0xe0>
  146910:	10c0008c 	andi	r3,r2,2
  146914:	9c400017 	ldw	r17,0(r19)
  146918:	18002826 	beq	r3,zero,1469bc <__sfvwrite_r+0x100>
  14691c:	0029883a 	mov	r20,zero
  146920:	0025883a 	mov	r18,zero
  146924:	05810004 	movi	r22,1024
  146928:	a00d883a 	mov	r6,r20
  14692c:	a809883a 	mov	r4,r21
  146930:	90004726 	beq	r18,zero,146a50 <__sfvwrite_r+0x194>
  146934:	900f883a 	mov	r7,r18
  146938:	81400717 	ldw	r5,28(r16)
  14693c:	b480012e 	bgeu	r22,r18,146944 <__sfvwrite_r+0x88>
  146940:	01c10004 	movi	r7,1024
  146944:	80800917 	ldw	r2,36(r16)
  146948:	103ee83a 	callr	r2
  14694c:	00804c0e 	bge	zero,r2,146a80 <__sfvwrite_r+0x1c4>
  146950:	98c00217 	ldw	r3,8(r19)
  146954:	a0a9883a 	add	r20,r20,r2
  146958:	90a5c83a 	sub	r18,r18,r2
  14695c:	1885c83a 	sub	r2,r3,r2
  146960:	98800215 	stw	r2,8(r19)
  146964:	103ff01e 	bne	r2,zero,146928 <__sfvwrite_r+0x6c>
  146968:	0005883a 	mov	r2,zero
  14696c:	dfc00b17 	ldw	ra,44(sp)
  146970:	df000a17 	ldw	fp,40(sp)
  146974:	ddc00917 	ldw	r23,36(sp)
  146978:	dd800817 	ldw	r22,32(sp)
  14697c:	dd400717 	ldw	r21,28(sp)
  146980:	dd000617 	ldw	r20,24(sp)
  146984:	dcc00517 	ldw	r19,20(sp)
  146988:	dc800417 	ldw	r18,16(sp)
  14698c:	dc400317 	ldw	r17,12(sp)
  146990:	dc000217 	ldw	r16,8(sp)
  146994:	dec00c04 	addi	sp,sp,48
  146998:	f800283a 	ret
  14699c:	a809883a 	mov	r4,r21
  1469a0:	800b883a 	mov	r5,r16
  1469a4:	01445340 	call	144534 <__swsetup_r>
  1469a8:	1000e81e 	bne	r2,zero,146d4c <__sfvwrite_r+0x490>
  1469ac:	8080030b 	ldhu	r2,12(r16)
  1469b0:	9c400017 	ldw	r17,0(r19)
  1469b4:	10c0008c 	andi	r3,r2,2
  1469b8:	183fd81e 	bne	r3,zero,14691c <__sfvwrite_r+0x60>
  1469bc:	10c0004c 	andi	r3,r2,1
  1469c0:	002d883a 	mov	r22,zero
  1469c4:	1800331e 	bne	r3,zero,146a94 <__sfvwrite_r+0x1d8>
  1469c8:	0025883a 	mov	r18,zero
  1469cc:	90001c26 	beq	r18,zero,146a40 <__sfvwrite_r+0x184>
  1469d0:	10c0800c 	andi	r3,r2,512
  1469d4:	85000217 	ldw	r20,8(r16)
  1469d8:	18006f26 	beq	r3,zero,146b98 <__sfvwrite_r+0x2dc>
  1469dc:	95008936 	bltu	r18,r20,146c04 <__sfvwrite_r+0x348>
  1469e0:	10c1200c 	andi	r3,r2,1152
  1469e4:	1800a11e 	bne	r3,zero,146c6c <__sfvwrite_r+0x3b0>
  1469e8:	81000017 	ldw	r4,0(r16)
  1469ec:	a02f883a 	mov	r23,r20
  1469f0:	a039883a 	mov	fp,r20
  1469f4:	9029883a 	mov	r20,r18
  1469f8:	b00b883a 	mov	r5,r22
  1469fc:	b80d883a 	mov	r6,r23
  146a00:	01479fc0 	call	1479fc <memmove>
  146a04:	81400217 	ldw	r5,8(r16)
  146a08:	81000017 	ldw	r4,0(r16)
  146a0c:	9005883a 	mov	r2,r18
  146a10:	2f39c83a 	sub	fp,r5,fp
  146a14:	25c7883a 	add	r3,r4,r23
  146a18:	87000215 	stw	fp,8(r16)
  146a1c:	80c00015 	stw	r3,0(r16)
  146a20:	98c00217 	ldw	r3,8(r19)
  146a24:	b0ad883a 	add	r22,r22,r2
  146a28:	90a5c83a 	sub	r18,r18,r2
  146a2c:	1d29c83a 	sub	r20,r3,r20
  146a30:	9d000215 	stw	r20,8(r19)
  146a34:	a03fcc26 	beq	r20,zero,146968 <__sfvwrite_r+0xac>
  146a38:	8080030b 	ldhu	r2,12(r16)
  146a3c:	903fe41e 	bne	r18,zero,1469d0 <__sfvwrite_r+0x114>
  146a40:	8d800017 	ldw	r22,0(r17)
  146a44:	8c800117 	ldw	r18,4(r17)
  146a48:	8c400204 	addi	r17,r17,8
  146a4c:	003fdf06 	br	1469cc <__sfvwrite_r+0x110>
  146a50:	8d000017 	ldw	r20,0(r17)
  146a54:	8c800117 	ldw	r18,4(r17)
  146a58:	8c400204 	addi	r17,r17,8
  146a5c:	003fb206 	br	146928 <__sfvwrite_r+0x6c>
  146a60:	0148d300 	call	148d30 <_realloc_r>
  146a64:	1039883a 	mov	fp,r2
  146a68:	10009d1e 	bne	r2,zero,146ce0 <__sfvwrite_r+0x424>
  146a6c:	81400417 	ldw	r5,16(r16)
  146a70:	a809883a 	mov	r4,r21
  146a74:	01465ec0 	call	1465ec <_free_r>
  146a78:	00800304 	movi	r2,12
  146a7c:	a8800015 	stw	r2,0(r21)
  146a80:	80c0030b 	ldhu	r3,12(r16)
  146a84:	00bfffc4 	movi	r2,-1
  146a88:	18c01014 	ori	r3,r3,64
  146a8c:	80c0030d 	sth	r3,12(r16)
  146a90:	003fb606 	br	14696c <__sfvwrite_r+0xb0>
  146a94:	0007883a 	mov	r3,zero
  146a98:	0039883a 	mov	fp,zero
  146a9c:	0025883a 	mov	r18,zero
  146aa0:	90001f26 	beq	r18,zero,146b20 <__sfvwrite_r+0x264>
  146aa4:	18006826 	beq	r3,zero,146c48 <__sfvwrite_r+0x38c>
  146aa8:	b02f883a 	mov	r23,r22
  146aac:	9580012e 	bgeu	r18,r22,146ab4 <__sfvwrite_r+0x1f8>
  146ab0:	902f883a 	mov	r23,r18
  146ab4:	81000017 	ldw	r4,0(r16)
  146ab8:	80800417 	ldw	r2,16(r16)
  146abc:	b829883a 	mov	r20,r23
  146ac0:	81800217 	ldw	r6,8(r16)
  146ac4:	81c00517 	ldw	r7,20(r16)
  146ac8:	1100022e 	bgeu	r2,r4,146ad4 <__sfvwrite_r+0x218>
  146acc:	31d1883a 	add	r8,r6,r7
  146ad0:	45c01816 	blt	r8,r23,146b34 <__sfvwrite_r+0x278>
  146ad4:	b9c03f16 	blt	r23,r7,146bd4 <__sfvwrite_r+0x318>
  146ad8:	80800917 	ldw	r2,36(r16)
  146adc:	81400717 	ldw	r5,28(r16)
  146ae0:	a809883a 	mov	r4,r21
  146ae4:	d8c00115 	stw	r3,4(sp)
  146ae8:	e00d883a 	mov	r6,fp
  146aec:	103ee83a 	callr	r2
  146af0:	1029883a 	mov	r20,r2
  146af4:	d8c00117 	ldw	r3,4(sp)
  146af8:	00bfe10e 	bge	zero,r2,146a80 <__sfvwrite_r+0x1c4>
  146afc:	b52dc83a 	sub	r22,r22,r20
  146b00:	b0001f26 	beq	r22,zero,146b80 <__sfvwrite_r+0x2c4>
  146b04:	98800217 	ldw	r2,8(r19)
  146b08:	e539883a 	add	fp,fp,r20
  146b0c:	9525c83a 	sub	r18,r18,r20
  146b10:	1529c83a 	sub	r20,r2,r20
  146b14:	9d000215 	stw	r20,8(r19)
  146b18:	a03f9326 	beq	r20,zero,146968 <__sfvwrite_r+0xac>
  146b1c:	903fe11e 	bne	r18,zero,146aa4 <__sfvwrite_r+0x1e8>
  146b20:	8f000017 	ldw	fp,0(r17)
  146b24:	8c800117 	ldw	r18,4(r17)
  146b28:	0007883a 	mov	r3,zero
  146b2c:	8c400204 	addi	r17,r17,8
  146b30:	003fdb06 	br	146aa0 <__sfvwrite_r+0x1e4>
  146b34:	400d883a 	mov	r6,r8
  146b38:	e00b883a 	mov	r5,fp
  146b3c:	d8c00115 	stw	r3,4(sp)
  146b40:	da000015 	stw	r8,0(sp)
  146b44:	01479fc0 	call	1479fc <memmove>
  146b48:	da000017 	ldw	r8,0(sp)
  146b4c:	80800017 	ldw	r2,0(r16)
  146b50:	a809883a 	mov	r4,r21
  146b54:	800b883a 	mov	r5,r16
  146b58:	1205883a 	add	r2,r2,r8
  146b5c:	80800015 	stw	r2,0(r16)
  146b60:	da000015 	stw	r8,0(sp)
  146b64:	0145eac0 	call	145eac <_fflush_r>
  146b68:	d8c00117 	ldw	r3,4(sp)
  146b6c:	da000017 	ldw	r8,0(sp)
  146b70:	103fc31e 	bne	r2,zero,146a80 <__sfvwrite_r+0x1c4>
  146b74:	4029883a 	mov	r20,r8
  146b78:	b52dc83a 	sub	r22,r22,r20
  146b7c:	b03fe11e 	bne	r22,zero,146b04 <__sfvwrite_r+0x248>
  146b80:	a809883a 	mov	r4,r21
  146b84:	800b883a 	mov	r5,r16
  146b88:	0145eac0 	call	145eac <_fflush_r>
  146b8c:	103fbc1e 	bne	r2,zero,146a80 <__sfvwrite_r+0x1c4>
  146b90:	0007883a 	mov	r3,zero
  146b94:	003fdb06 	br	146b04 <__sfvwrite_r+0x248>
  146b98:	81000017 	ldw	r4,0(r16)
  146b9c:	80800417 	ldw	r2,16(r16)
  146ba0:	1100012e 	bgeu	r2,r4,146ba8 <__sfvwrite_r+0x2ec>
  146ba4:	a4805836 	bltu	r20,r18,146d08 <__sfvwrite_r+0x44c>
  146ba8:	81c00517 	ldw	r7,20(r16)
  146bac:	91c01a36 	bltu	r18,r7,146c18 <__sfvwrite_r+0x35c>
  146bb0:	80800917 	ldw	r2,36(r16)
  146bb4:	81400717 	ldw	r5,28(r16)
  146bb8:	a809883a 	mov	r4,r21
  146bbc:	b00d883a 	mov	r6,r22
  146bc0:	103ee83a 	callr	r2
  146bc4:	1029883a 	mov	r20,r2
  146bc8:	00bfad0e 	bge	zero,r2,146a80 <__sfvwrite_r+0x1c4>
  146bcc:	a005883a 	mov	r2,r20
  146bd0:	003f9306 	br	146a20 <__sfvwrite_r+0x164>
  146bd4:	b80d883a 	mov	r6,r23
  146bd8:	e00b883a 	mov	r5,fp
  146bdc:	d8c00115 	stw	r3,4(sp)
  146be0:	01479fc0 	call	1479fc <memmove>
  146be4:	80800217 	ldw	r2,8(r16)
  146be8:	81000017 	ldw	r4,0(r16)
  146bec:	d8c00117 	ldw	r3,4(sp)
  146bf0:	15c5c83a 	sub	r2,r2,r23
  146bf4:	25ef883a 	add	r23,r4,r23
  146bf8:	80800215 	stw	r2,8(r16)
  146bfc:	85c00015 	stw	r23,0(r16)
  146c00:	003fbe06 	br	146afc <__sfvwrite_r+0x240>
  146c04:	81000017 	ldw	r4,0(r16)
  146c08:	9039883a 	mov	fp,r18
  146c0c:	9029883a 	mov	r20,r18
  146c10:	902f883a 	mov	r23,r18
  146c14:	003f7806 	br	1469f8 <__sfvwrite_r+0x13c>
  146c18:	b00b883a 	mov	r5,r22
  146c1c:	900d883a 	mov	r6,r18
  146c20:	01479fc0 	call	1479fc <memmove>
  146c24:	80c00217 	ldw	r3,8(r16)
  146c28:	80800017 	ldw	r2,0(r16)
  146c2c:	9029883a 	mov	r20,r18
  146c30:	1c87c83a 	sub	r3,r3,r18
  146c34:	1485883a 	add	r2,r2,r18
  146c38:	80800015 	stw	r2,0(r16)
  146c3c:	80c00215 	stw	r3,8(r16)
  146c40:	9005883a 	mov	r2,r18
  146c44:	003f7606 	br	146a20 <__sfvwrite_r+0x164>
  146c48:	e009883a 	mov	r4,fp
  146c4c:	01400284 	movi	r5,10
  146c50:	900d883a 	mov	r6,r18
  146c54:	01479140 	call	147914 <memchr>
  146c58:	10003926 	beq	r2,zero,146d40 <__sfvwrite_r+0x484>
  146c5c:	15800044 	addi	r22,r2,1
  146c60:	b72dc83a 	sub	r22,r22,fp
  146c64:	00c00044 	movi	r3,1
  146c68:	003f8f06 	br	146aa8 <__sfvwrite_r+0x1ec>
  146c6c:	81000517 	ldw	r4,20(r16)
  146c70:	81400417 	ldw	r5,16(r16)
  146c74:	80c00017 	ldw	r3,0(r16)
  146c78:	210d883a 	add	r6,r4,r4
  146c7c:	3109883a 	add	r4,r6,r4
  146c80:	2028d7fa 	srli	r20,r4,31
  146c84:	196fc83a 	sub	r23,r3,r5
  146c88:	b9800044 	addi	r6,r23,1
  146c8c:	a109883a 	add	r4,r20,r4
  146c90:	2029d07a 	srai	r20,r4,1
  146c94:	348d883a 	add	r6,r6,r18
  146c98:	a180272e 	bgeu	r20,r6,146d38 <__sfvwrite_r+0x47c>
  146c9c:	3029883a 	mov	r20,r6
  146ca0:	1081000c 	andi	r2,r2,1024
  146ca4:	a809883a 	mov	r4,r21
  146ca8:	103f6d26 	beq	r2,zero,146a60 <__sfvwrite_r+0x1a4>
  146cac:	300b883a 	mov	r5,r6
  146cb0:	01471500 	call	147150 <_malloc_r>
  146cb4:	1039883a 	mov	fp,r2
  146cb8:	103f6f26 	beq	r2,zero,146a78 <__sfvwrite_r+0x1bc>
  146cbc:	81400417 	ldw	r5,16(r16)
  146cc0:	1009883a 	mov	r4,r2
  146cc4:	b80d883a 	mov	r6,r23
  146cc8:	01422440 	call	142244 <memcpy>
  146ccc:	8080030b 	ldhu	r2,12(r16)
  146cd0:	00fedfc4 	movi	r3,-1153
  146cd4:	10c4703a 	and	r2,r2,r3
  146cd8:	10802014 	ori	r2,r2,128
  146cdc:	8080030d 	sth	r2,12(r16)
  146ce0:	e5c9883a 	add	r4,fp,r23
  146ce4:	a5c7c83a 	sub	r3,r20,r23
  146ce8:	87000415 	stw	fp,16(r16)
  146cec:	85000515 	stw	r20,20(r16)
  146cf0:	81000015 	stw	r4,0(r16)
  146cf4:	9039883a 	mov	fp,r18
  146cf8:	80c00215 	stw	r3,8(r16)
  146cfc:	9029883a 	mov	r20,r18
  146d00:	902f883a 	mov	r23,r18
  146d04:	003f3c06 	br	1469f8 <__sfvwrite_r+0x13c>
  146d08:	b00b883a 	mov	r5,r22
  146d0c:	a00d883a 	mov	r6,r20
  146d10:	01479fc0 	call	1479fc <memmove>
  146d14:	80800017 	ldw	r2,0(r16)
  146d18:	a809883a 	mov	r4,r21
  146d1c:	800b883a 	mov	r5,r16
  146d20:	1505883a 	add	r2,r2,r20
  146d24:	80800015 	stw	r2,0(r16)
  146d28:	0145eac0 	call	145eac <_fflush_r>
  146d2c:	103f541e 	bne	r2,zero,146a80 <__sfvwrite_r+0x1c4>
  146d30:	a005883a 	mov	r2,r20
  146d34:	003f3a06 	br	146a20 <__sfvwrite_r+0x164>
  146d38:	a00d883a 	mov	r6,r20
  146d3c:	003fd806 	br	146ca0 <__sfvwrite_r+0x3e4>
  146d40:	95800044 	addi	r22,r18,1
  146d44:	00c00044 	movi	r3,1
  146d48:	003f5706 	br	146aa8 <__sfvwrite_r+0x1ec>
  146d4c:	80c0030b 	ldhu	r3,12(r16)
  146d50:	00bfffc4 	movi	r2,-1
  146d54:	18c01014 	ori	r3,r3,64
  146d58:	80c0030d 	sth	r3,12(r16)
  146d5c:	00c00244 	movi	r3,9
  146d60:	a8c00015 	stw	r3,0(r21)
  146d64:	003f0106 	br	14696c <__sfvwrite_r+0xb0>

00146d68 <_fwalk>:
  146d68:	defff904 	addi	sp,sp,-28
  146d6c:	dcc00315 	stw	r19,12(sp)
  146d70:	24c0b804 	addi	r19,r4,736
  146d74:	dd400515 	stw	r21,20(sp)
  146d78:	dd000415 	stw	r20,16(sp)
  146d7c:	dfc00615 	stw	ra,24(sp)
  146d80:	dc800215 	stw	r18,8(sp)
  146d84:	dc400115 	stw	r17,4(sp)
  146d88:	dc000015 	stw	r16,0(sp)
  146d8c:	282b883a 	mov	r21,r5
  146d90:	0029883a 	mov	r20,zero
  146d94:	01464700 	call	146470 <__sfp_lock_acquire>
  146d98:	98001226 	beq	r19,zero,146de4 <_fwalk+0x7c>
  146d9c:	04bfffc4 	movi	r18,-1
  146da0:	9c400117 	ldw	r17,4(r19)
  146da4:	9c000217 	ldw	r16,8(r19)
  146da8:	8c7fffc4 	addi	r17,r17,-1
  146dac:	88000b16 	blt	r17,zero,146ddc <_fwalk+0x74>
  146db0:	84000304 	addi	r16,r16,12
  146db4:	80c0000f 	ldh	r3,0(r16)
  146db8:	8c7fffc4 	addi	r17,r17,-1
  146dbc:	813ffd04 	addi	r4,r16,-12
  146dc0:	18000426 	beq	r3,zero,146dd4 <_fwalk+0x6c>
  146dc4:	80c0008f 	ldh	r3,2(r16)
  146dc8:	1c800226 	beq	r3,r18,146dd4 <_fwalk+0x6c>
  146dcc:	a83ee83a 	callr	r21
  146dd0:	a0a8b03a 	or	r20,r20,r2
  146dd4:	84001a04 	addi	r16,r16,104
  146dd8:	8cbff61e 	bne	r17,r18,146db4 <_fwalk+0x4c>
  146ddc:	9cc00017 	ldw	r19,0(r19)
  146de0:	983fef1e 	bne	r19,zero,146da0 <_fwalk+0x38>
  146de4:	01464740 	call	146474 <__sfp_lock_release>
  146de8:	a005883a 	mov	r2,r20
  146dec:	dfc00617 	ldw	ra,24(sp)
  146df0:	dd400517 	ldw	r21,20(sp)
  146df4:	dd000417 	ldw	r20,16(sp)
  146df8:	dcc00317 	ldw	r19,12(sp)
  146dfc:	dc800217 	ldw	r18,8(sp)
  146e00:	dc400117 	ldw	r17,4(sp)
  146e04:	dc000017 	ldw	r16,0(sp)
  146e08:	dec00704 	addi	sp,sp,28
  146e0c:	f800283a 	ret

00146e10 <_fwalk_reent>:
  146e10:	defff804 	addi	sp,sp,-32
  146e14:	dcc00315 	stw	r19,12(sp)
  146e18:	24c0b804 	addi	r19,r4,736
  146e1c:	dd800615 	stw	r22,24(sp)
  146e20:	dd400515 	stw	r21,20(sp)
  146e24:	dd000415 	stw	r20,16(sp)
  146e28:	dfc00715 	stw	ra,28(sp)
  146e2c:	dc800215 	stw	r18,8(sp)
  146e30:	dc400115 	stw	r17,4(sp)
  146e34:	dc000015 	stw	r16,0(sp)
  146e38:	2029883a 	mov	r20,r4
  146e3c:	282b883a 	mov	r21,r5
  146e40:	002d883a 	mov	r22,zero
  146e44:	01464700 	call	146470 <__sfp_lock_acquire>
  146e48:	98001326 	beq	r19,zero,146e98 <_fwalk_reent+0x88>
  146e4c:	04bfffc4 	movi	r18,-1
  146e50:	9c400117 	ldw	r17,4(r19)
  146e54:	9c000217 	ldw	r16,8(r19)
  146e58:	8c7fffc4 	addi	r17,r17,-1
  146e5c:	88000c16 	blt	r17,zero,146e90 <_fwalk_reent+0x80>
  146e60:	84000304 	addi	r16,r16,12
  146e64:	80c0000f 	ldh	r3,0(r16)
  146e68:	8c7fffc4 	addi	r17,r17,-1
  146e6c:	817ffd04 	addi	r5,r16,-12
  146e70:	18000526 	beq	r3,zero,146e88 <_fwalk_reent+0x78>
  146e74:	80c0008f 	ldh	r3,2(r16)
  146e78:	a009883a 	mov	r4,r20
  146e7c:	1c800226 	beq	r3,r18,146e88 <_fwalk_reent+0x78>
  146e80:	a83ee83a 	callr	r21
  146e84:	b0acb03a 	or	r22,r22,r2
  146e88:	84001a04 	addi	r16,r16,104
  146e8c:	8cbff51e 	bne	r17,r18,146e64 <_fwalk_reent+0x54>
  146e90:	9cc00017 	ldw	r19,0(r19)
  146e94:	983fee1e 	bne	r19,zero,146e50 <_fwalk_reent+0x40>
  146e98:	01464740 	call	146474 <__sfp_lock_release>
  146e9c:	b005883a 	mov	r2,r22
  146ea0:	dfc00717 	ldw	ra,28(sp)
  146ea4:	dd800617 	ldw	r22,24(sp)
  146ea8:	dd400517 	ldw	r21,20(sp)
  146eac:	dd000417 	ldw	r20,16(sp)
  146eb0:	dcc00317 	ldw	r19,12(sp)
  146eb4:	dc800217 	ldw	r18,8(sp)
  146eb8:	dc400117 	ldw	r17,4(sp)
  146ebc:	dc000017 	ldw	r16,0(sp)
  146ec0:	dec00804 	addi	sp,sp,32
  146ec4:	f800283a 	ret

00146ec8 <_setlocale_r>:
  146ec8:	defffe04 	addi	sp,sp,-8
  146ecc:	dc000015 	stw	r16,0(sp)
  146ed0:	dfc00115 	stw	ra,4(sp)
  146ed4:	3021883a 	mov	r16,r6
  146ed8:	30000526 	beq	r6,zero,146ef0 <_setlocale_r+0x28>
  146edc:	3009883a 	mov	r4,r6
  146ee0:	01400574 	movhi	r5,21
  146ee4:	29446004 	addi	r5,r5,4480
  146ee8:	014949c0 	call	14949c <strcmp>
  146eec:	1000061e 	bne	r2,zero,146f08 <_setlocale_r+0x40>
  146ef0:	00800574 	movhi	r2,21
  146ef4:	10845f04 	addi	r2,r2,4476
  146ef8:	dfc00117 	ldw	ra,4(sp)
  146efc:	dc000017 	ldw	r16,0(sp)
  146f00:	dec00204 	addi	sp,sp,8
  146f04:	f800283a 	ret
  146f08:	8009883a 	mov	r4,r16
  146f0c:	01400574 	movhi	r5,21
  146f10:	29445f04 	addi	r5,r5,4476
  146f14:	014949c0 	call	14949c <strcmp>
  146f18:	103ff526 	beq	r2,zero,146ef0 <_setlocale_r+0x28>
  146f1c:	8009883a 	mov	r4,r16
  146f20:	01400574 	movhi	r5,21
  146f24:	29444a04 	addi	r5,r5,4392
  146f28:	014949c0 	call	14949c <strcmp>
  146f2c:	103ff026 	beq	r2,zero,146ef0 <_setlocale_r+0x28>
  146f30:	0005883a 	mov	r2,zero
  146f34:	003ff006 	br	146ef8 <_setlocale_r+0x30>

00146f38 <__locale_charset>:
  146f38:	00800574 	movhi	r2,21
  146f3c:	10861004 	addi	r2,r2,6208
  146f40:	f800283a 	ret

00146f44 <__locale_mb_cur_max>:
  146f44:	00800574 	movhi	r2,21
  146f48:	108bac04 	addi	r2,r2,11952
  146f4c:	10800017 	ldw	r2,0(r2)
  146f50:	f800283a 	ret

00146f54 <__locale_msgcharset>:
  146f54:	00800574 	movhi	r2,21
  146f58:	10860804 	addi	r2,r2,6176
  146f5c:	f800283a 	ret

00146f60 <__locale_cjk_lang>:
  146f60:	0005883a 	mov	r2,zero
  146f64:	f800283a 	ret

00146f68 <_localeconv_r>:
  146f68:	00800574 	movhi	r2,21
  146f6c:	10861804 	addi	r2,r2,6240
  146f70:	f800283a 	ret

00146f74 <setlocale>:
  146f74:	00c00574 	movhi	r3,21
  146f78:	18cbab04 	addi	r3,r3,11948
  146f7c:	2005883a 	mov	r2,r4
  146f80:	19000017 	ldw	r4,0(r3)
  146f84:	280d883a 	mov	r6,r5
  146f88:	100b883a 	mov	r5,r2
  146f8c:	0146ec81 	jmpi	146ec8 <_setlocale_r>

00146f90 <localeconv>:
  146f90:	00800574 	movhi	r2,21
  146f94:	10861804 	addi	r2,r2,6240
  146f98:	f800283a 	ret

00146f9c <__smakebuf_r>:
  146f9c:	2880030b 	ldhu	r2,12(r5)
  146fa0:	deffec04 	addi	sp,sp,-80
  146fa4:	dc000f15 	stw	r16,60(sp)
  146fa8:	dfc01315 	stw	ra,76(sp)
  146fac:	dcc01215 	stw	r19,72(sp)
  146fb0:	dc801115 	stw	r18,68(sp)
  146fb4:	dc401015 	stw	r17,64(sp)
  146fb8:	10c0008c 	andi	r3,r2,2
  146fbc:	2821883a 	mov	r16,r5
  146fc0:	18003a1e 	bne	r3,zero,1470ac <__smakebuf_r+0x110>
  146fc4:	2940038f 	ldh	r5,14(r5)
  146fc8:	2023883a 	mov	r17,r4
  146fcc:	28001b16 	blt	r5,zero,14703c <__smakebuf_r+0xa0>
  146fd0:	d80d883a 	mov	r6,sp
  146fd4:	014af500 	call	14af50 <_fstat_r>
  146fd8:	10001716 	blt	r2,zero,147038 <__smakebuf_r+0x9c>
  146fdc:	d8800117 	ldw	r2,4(sp)
  146fe0:	00e00014 	movui	r3,32768
  146fe4:	10bc000c 	andi	r2,r2,61440
  146fe8:	10c03e26 	beq	r2,r3,1470e4 <__smakebuf_r+0x148>
  146fec:	80c0030b 	ldhu	r3,12(r16)
  146ff0:	18c20014 	ori	r3,r3,2048
  146ff4:	80c0030d 	sth	r3,12(r16)
  146ff8:	00c80004 	movi	r3,8192
  146ffc:	10c0431e 	bne	r2,r3,14710c <__smakebuf_r+0x170>
  147000:	8140038f 	ldh	r5,14(r16)
  147004:	8809883a 	mov	r4,r17
  147008:	014afb80 	call	14afb8 <_isatty_r>
  14700c:	10004d26 	beq	r2,zero,147144 <__smakebuf_r+0x1a8>
  147010:	80c0030b 	ldhu	r3,12(r16)
  147014:	04c00044 	movi	r19,1
  147018:	808010c4 	addi	r2,r16,67
  14701c:	1cc6b03a 	or	r3,r3,r19
  147020:	80c0030d 	sth	r3,12(r16)
  147024:	80800015 	stw	r2,0(r16)
  147028:	80800415 	stw	r2,16(r16)
  14702c:	84c00515 	stw	r19,20(r16)
  147030:	04810004 	movi	r18,1024
  147034:	00000706 	br	147054 <__smakebuf_r+0xb8>
  147038:	8080030b 	ldhu	r2,12(r16)
  14703c:	10c0200c 	andi	r3,r2,128
  147040:	1800261e 	bne	r3,zero,1470dc <__smakebuf_r+0x140>
  147044:	04810004 	movi	r18,1024
  147048:	10820014 	ori	r2,r2,2048
  14704c:	8080030d 	sth	r2,12(r16)
  147050:	0027883a 	mov	r19,zero
  147054:	8809883a 	mov	r4,r17
  147058:	900b883a 	mov	r5,r18
  14705c:	01471500 	call	147150 <_malloc_r>
  147060:	10002d26 	beq	r2,zero,147118 <__smakebuf_r+0x17c>
  147064:	80c0030b 	ldhu	r3,12(r16)
  147068:	01000534 	movhi	r4,20
  14706c:	21184c04 	addi	r4,r4,24880
  147070:	89000f15 	stw	r4,60(r17)
  147074:	18c02014 	ori	r3,r3,128
  147078:	80c0030d 	sth	r3,12(r16)
  14707c:	80800015 	stw	r2,0(r16)
  147080:	80800415 	stw	r2,16(r16)
  147084:	84800515 	stw	r18,20(r16)
  147088:	98000d26 	beq	r19,zero,1470c0 <__smakebuf_r+0x124>
  14708c:	8140038f 	ldh	r5,14(r16)
  147090:	8809883a 	mov	r4,r17
  147094:	014afb80 	call	14afb8 <_isatty_r>
  147098:	10000926 	beq	r2,zero,1470c0 <__smakebuf_r+0x124>
  14709c:	8080030b 	ldhu	r2,12(r16)
  1470a0:	10800054 	ori	r2,r2,1
  1470a4:	8080030d 	sth	r2,12(r16)
  1470a8:	00000506 	br	1470c0 <__smakebuf_r+0x124>
  1470ac:	288010c4 	addi	r2,r5,67
  1470b0:	28800015 	stw	r2,0(r5)
  1470b4:	28800415 	stw	r2,16(r5)
  1470b8:	00800044 	movi	r2,1
  1470bc:	28800515 	stw	r2,20(r5)
  1470c0:	dfc01317 	ldw	ra,76(sp)
  1470c4:	dcc01217 	ldw	r19,72(sp)
  1470c8:	dc801117 	ldw	r18,68(sp)
  1470cc:	dc401017 	ldw	r17,64(sp)
  1470d0:	dc000f17 	ldw	r16,60(sp)
  1470d4:	dec01404 	addi	sp,sp,80
  1470d8:	f800283a 	ret
  1470dc:	04801004 	movi	r18,64
  1470e0:	003fd906 	br	147048 <__smakebuf_r+0xac>
  1470e4:	81000a17 	ldw	r4,40(r16)
  1470e8:	00c00574 	movhi	r3,21
  1470ec:	18e50e04 	addi	r3,r3,-27592
  1470f0:	20ffbe1e 	bne	r4,r3,146fec <__smakebuf_r+0x50>
  1470f4:	80c0030b 	ldhu	r3,12(r16)
  1470f8:	01010004 	movi	r4,1024
  1470fc:	81001315 	stw	r4,76(r16)
  147100:	1906b03a 	or	r3,r3,r4
  147104:	80c0030d 	sth	r3,12(r16)
  147108:	003fbb06 	br	146ff8 <__smakebuf_r+0x5c>
  14710c:	0027883a 	mov	r19,zero
  147110:	04810004 	movi	r18,1024
  147114:	003fcf06 	br	147054 <__smakebuf_r+0xb8>
  147118:	8080030b 	ldhu	r2,12(r16)
  14711c:	10c0800c 	andi	r3,r2,512
  147120:	183fe71e 	bne	r3,zero,1470c0 <__smakebuf_r+0x124>
  147124:	10800094 	ori	r2,r2,2
  147128:	80c010c4 	addi	r3,r16,67
  14712c:	8080030d 	sth	r2,12(r16)
  147130:	00800044 	movi	r2,1
  147134:	80c00015 	stw	r3,0(r16)
  147138:	80c00415 	stw	r3,16(r16)
  14713c:	80800515 	stw	r2,20(r16)
  147140:	003fdf06 	br	1470c0 <__smakebuf_r+0x124>
  147144:	04c00044 	movi	r19,1
  147148:	04810004 	movi	r18,1024
  14714c:	003fc106 	br	147054 <__smakebuf_r+0xb8>

00147150 <_malloc_r>:
  147150:	defff504 	addi	sp,sp,-44
  147154:	dc800315 	stw	r18,12(sp)
  147158:	dfc00a15 	stw	ra,40(sp)
  14715c:	df000915 	stw	fp,36(sp)
  147160:	ddc00815 	stw	r23,32(sp)
  147164:	dd800715 	stw	r22,28(sp)
  147168:	dd400615 	stw	r21,24(sp)
  14716c:	dd000515 	stw	r20,20(sp)
  147170:	dcc00415 	stw	r19,16(sp)
  147174:	dc400215 	stw	r17,8(sp)
  147178:	dc000115 	stw	r16,4(sp)
  14717c:	288002c4 	addi	r2,r5,11
  147180:	00c00584 	movi	r3,22
  147184:	2025883a 	mov	r18,r4
  147188:	18802b2e 	bgeu	r3,r2,147238 <_malloc_r+0xe8>
  14718c:	047ffe04 	movi	r17,-8
  147190:	1462703a 	and	r17,r2,r17
  147194:	88002a16 	blt	r17,zero,147240 <_malloc_r+0xf0>
  147198:	89402936 	bltu	r17,r5,147240 <_malloc_r+0xf0>
  14719c:	9009883a 	mov	r4,r18
  1471a0:	014e9280 	call	14e928 <__malloc_lock>
  1471a4:	00807dc4 	movi	r2,503
  1471a8:	14402936 	bltu	r2,r17,147250 <_malloc_r+0x100>
  1471ac:	8808d0fa 	srli	r4,r17,3
  1471b0:	04c00574 	movhi	r19,21
  1471b4:	9cc62604 	addi	r19,r19,6296
  1471b8:	2105883a 	add	r2,r4,r4
  1471bc:	1085883a 	add	r2,r2,r2
  1471c0:	1085883a 	add	r2,r2,r2
  1471c4:	9885883a 	add	r2,r19,r2
  1471c8:	14000317 	ldw	r16,12(r2)
  1471cc:	80815226 	beq	r16,r2,147718 <_malloc_r+0x5c8>
  1471d0:	81000117 	ldw	r4,4(r16)
  1471d4:	00bfff04 	movi	r2,-4
  1471d8:	80c00317 	ldw	r3,12(r16)
  1471dc:	2084703a 	and	r2,r4,r2
  1471e0:	8085883a 	add	r2,r16,r2
  1471e4:	81000217 	ldw	r4,8(r16)
  1471e8:	11400117 	ldw	r5,4(r2)
  1471ec:	20c00315 	stw	r3,12(r4)
  1471f0:	19000215 	stw	r4,8(r3)
  1471f4:	28c00054 	ori	r3,r5,1
  1471f8:	10c00115 	stw	r3,4(r2)
  1471fc:	9009883a 	mov	r4,r18
  147200:	014e9480 	call	14e948 <__malloc_unlock>
  147204:	80800204 	addi	r2,r16,8
  147208:	dfc00a17 	ldw	ra,40(sp)
  14720c:	df000917 	ldw	fp,36(sp)
  147210:	ddc00817 	ldw	r23,32(sp)
  147214:	dd800717 	ldw	r22,28(sp)
  147218:	dd400617 	ldw	r21,24(sp)
  14721c:	dd000517 	ldw	r20,20(sp)
  147220:	dcc00417 	ldw	r19,16(sp)
  147224:	dc800317 	ldw	r18,12(sp)
  147228:	dc400217 	ldw	r17,8(sp)
  14722c:	dc000117 	ldw	r16,4(sp)
  147230:	dec00b04 	addi	sp,sp,44
  147234:	f800283a 	ret
  147238:	04400404 	movi	r17,16
  14723c:	897fd72e 	bgeu	r17,r5,14719c <_malloc_r+0x4c>
  147240:	00800304 	movi	r2,12
  147244:	90800015 	stw	r2,0(r18)
  147248:	0005883a 	mov	r2,zero
  14724c:	003fee06 	br	147208 <_malloc_r+0xb8>
  147250:	8808d27a 	srli	r4,r17,9
  147254:	20007126 	beq	r4,zero,14741c <_malloc_r+0x2cc>
  147258:	00800104 	movi	r2,4
  14725c:	1100f536 	bltu	r2,r4,147634 <_malloc_r+0x4e4>
  147260:	8808d1ba 	srli	r4,r17,6
  147264:	21000e04 	addi	r4,r4,56
  147268:	210b883a 	add	r5,r4,r4
  14726c:	294b883a 	add	r5,r5,r5
  147270:	294b883a 	add	r5,r5,r5
  147274:	04c00574 	movhi	r19,21
  147278:	9cc62604 	addi	r19,r19,6296
  14727c:	994b883a 	add	r5,r19,r5
  147280:	2c000317 	ldw	r16,12(r5)
  147284:	2c000e26 	beq	r5,r16,1472c0 <_malloc_r+0x170>
  147288:	80c00117 	ldw	r3,4(r16)
  14728c:	01ffff04 	movi	r7,-4
  147290:	018003c4 	movi	r6,15
  147294:	19c6703a 	and	r3,r3,r7
  147298:	1c45c83a 	sub	r2,r3,r17
  14729c:	30800716 	blt	r6,r2,1472bc <_malloc_r+0x16c>
  1472a0:	1000610e 	bge	r2,zero,147428 <_malloc_r+0x2d8>
  1472a4:	84000317 	ldw	r16,12(r16)
  1472a8:	2c000526 	beq	r5,r16,1472c0 <_malloc_r+0x170>
  1472ac:	80c00117 	ldw	r3,4(r16)
  1472b0:	19c6703a 	and	r3,r3,r7
  1472b4:	1c45c83a 	sub	r2,r3,r17
  1472b8:	30bff90e 	bge	r6,r2,1472a0 <_malloc_r+0x150>
  1472bc:	213fffc4 	addi	r4,r4,-1
  1472c0:	21000044 	addi	r4,r4,1
  1472c4:	9c000417 	ldw	r16,16(r19)
  1472c8:	00c00574 	movhi	r3,21
  1472cc:	18c62604 	addi	r3,r3,6296
  1472d0:	1a400204 	addi	r9,r3,8
  1472d4:	82410926 	beq	r16,r9,1476fc <_malloc_r+0x5ac>
  1472d8:	81400117 	ldw	r5,4(r16)
  1472dc:	00bfff04 	movi	r2,-4
  1472e0:	018003c4 	movi	r6,15
  1472e4:	2884703a 	and	r2,r5,r2
  1472e8:	144bc83a 	sub	r5,r2,r17
  1472ec:	3140f416 	blt	r6,r5,1476c0 <_malloc_r+0x570>
  1472f0:	1a400515 	stw	r9,20(r3)
  1472f4:	1a400415 	stw	r9,16(r3)
  1472f8:	2800570e 	bge	r5,zero,147458 <_malloc_r+0x308>
  1472fc:	01407fc4 	movi	r5,511
  147300:	2880d436 	bltu	r5,r2,147654 <_malloc_r+0x504>
  147304:	1004d0fa 	srli	r2,r2,3
  147308:	02000044 	movi	r8,1
  14730c:	19c00117 	ldw	r7,4(r3)
  147310:	108b883a 	add	r5,r2,r2
  147314:	294b883a 	add	r5,r5,r5
  147318:	1005d0ba 	srai	r2,r2,2
  14731c:	294b883a 	add	r5,r5,r5
  147320:	28cb883a 	add	r5,r5,r3
  147324:	29800217 	ldw	r6,8(r5)
  147328:	4084983a 	sll	r2,r8,r2
  14732c:	81400315 	stw	r5,12(r16)
  147330:	81800215 	stw	r6,8(r16)
  147334:	11c4b03a 	or	r2,r2,r7
  147338:	2c000215 	stw	r16,8(r5)
  14733c:	18800115 	stw	r2,4(r3)
  147340:	34000315 	stw	r16,12(r6)
  147344:	2007d0ba 	srai	r3,r4,2
  147348:	01400044 	movi	r5,1
  14734c:	28ca983a 	sll	r5,r5,r3
  147350:	11404936 	bltu	r2,r5,147478 <_malloc_r+0x328>
  147354:	1146703a 	and	r3,r2,r5
  147358:	18000a1e 	bne	r3,zero,147384 <_malloc_r+0x234>
  14735c:	00ffff04 	movi	r3,-4
  147360:	294b883a 	add	r5,r5,r5
  147364:	20c8703a 	and	r4,r4,r3
  147368:	1146703a 	and	r3,r2,r5
  14736c:	21000104 	addi	r4,r4,4
  147370:	1800041e 	bne	r3,zero,147384 <_malloc_r+0x234>
  147374:	294b883a 	add	r5,r5,r5
  147378:	1146703a 	and	r3,r2,r5
  14737c:	21000104 	addi	r4,r4,4
  147380:	183ffc26 	beq	r3,zero,147374 <_malloc_r+0x224>
  147384:	023fff04 	movi	r8,-4
  147388:	01c003c4 	movi	r7,15
  14738c:	2105883a 	add	r2,r4,r4
  147390:	1085883a 	add	r2,r2,r2
  147394:	1085883a 	add	r2,r2,r2
  147398:	9897883a 	add	r11,r19,r2
  14739c:	5a800304 	addi	r10,r11,12
  1473a0:	2019883a 	mov	r12,r4
  1473a4:	54000017 	ldw	r16,0(r10)
  1473a8:	51bffd04 	addi	r6,r10,-12
  1473ac:	8180041e 	bne	r16,r6,1473c0 <_malloc_r+0x270>
  1473b0:	0000d406 	br	147704 <_malloc_r+0x5b4>
  1473b4:	1000dd0e 	bge	r2,zero,14772c <_malloc_r+0x5dc>
  1473b8:	84000317 	ldw	r16,12(r16)
  1473bc:	8180d126 	beq	r16,r6,147704 <_malloc_r+0x5b4>
  1473c0:	80c00117 	ldw	r3,4(r16)
  1473c4:	1a06703a 	and	r3,r3,r8
  1473c8:	1c45c83a 	sub	r2,r3,r17
  1473cc:	38bff90e 	bge	r7,r2,1473b4 <_malloc_r+0x264>
  1473d0:	80c00317 	ldw	r3,12(r16)
  1473d4:	81000217 	ldw	r4,8(r16)
  1473d8:	89400054 	ori	r5,r17,1
  1473dc:	81400115 	stw	r5,4(r16)
  1473e0:	20c00315 	stw	r3,12(r4)
  1473e4:	19000215 	stw	r4,8(r3)
  1473e8:	8463883a 	add	r17,r16,r17
  1473ec:	9c400515 	stw	r17,20(r19)
  1473f0:	9c400415 	stw	r17,16(r19)
  1473f4:	10c00054 	ori	r3,r2,1
  1473f8:	8a400315 	stw	r9,12(r17)
  1473fc:	8a400215 	stw	r9,8(r17)
  147400:	88c00115 	stw	r3,4(r17)
  147404:	88a3883a 	add	r17,r17,r2
  147408:	88800015 	stw	r2,0(r17)
  14740c:	9009883a 	mov	r4,r18
  147410:	014e9480 	call	14e948 <__malloc_unlock>
  147414:	80800204 	addi	r2,r16,8
  147418:	003f7b06 	br	147208 <_malloc_r+0xb8>
  14741c:	01401f84 	movi	r5,126
  147420:	01000fc4 	movi	r4,63
  147424:	003f9106 	br	14726c <_malloc_r+0x11c>
  147428:	80800317 	ldw	r2,12(r16)
  14742c:	81000217 	ldw	r4,8(r16)
  147430:	80c7883a 	add	r3,r16,r3
  147434:	19400117 	ldw	r5,4(r3)
  147438:	20800315 	stw	r2,12(r4)
  14743c:	11000215 	stw	r4,8(r2)
  147440:	28800054 	ori	r2,r5,1
  147444:	18800115 	stw	r2,4(r3)
  147448:	9009883a 	mov	r4,r18
  14744c:	014e9480 	call	14e948 <__malloc_unlock>
  147450:	80800204 	addi	r2,r16,8
  147454:	003f6c06 	br	147208 <_malloc_r+0xb8>
  147458:	8085883a 	add	r2,r16,r2
  14745c:	10c00117 	ldw	r3,4(r2)
  147460:	9009883a 	mov	r4,r18
  147464:	18c00054 	ori	r3,r3,1
  147468:	10c00115 	stw	r3,4(r2)
  14746c:	014e9480 	call	14e948 <__malloc_unlock>
  147470:	80800204 	addi	r2,r16,8
  147474:	003f6406 	br	147208 <_malloc_r+0xb8>
  147478:	9c000217 	ldw	r16,8(r19)
  14747c:	00bfff04 	movi	r2,-4
  147480:	85400117 	ldw	r21,4(r16)
  147484:	a8aa703a 	and	r21,r21,r2
  147488:	ac400336 	bltu	r21,r17,147498 <_malloc_r+0x348>
  14748c:	ac45c83a 	sub	r2,r21,r17
  147490:	00c003c4 	movi	r3,15
  147494:	18805d16 	blt	r3,r2,14760c <_malloc_r+0x4bc>
  147498:	00800574 	movhi	r2,21
  14749c:	108bbf04 	addi	r2,r2,12028
  1474a0:	00c00574 	movhi	r3,21
  1474a4:	18cbad04 	addi	r3,r3,11956
  1474a8:	15c00017 	ldw	r23,0(r2)
  1474ac:	19000017 	ldw	r4,0(r3)
  1474b0:	00bfffc4 	movi	r2,-1
  1474b4:	8579883a 	add	fp,r16,r21
  1474b8:	8def883a 	add	r23,r17,r23
  1474bc:	2080e426 	beq	r4,r2,147850 <_malloc_r+0x700>
  1474c0:	bdc403c4 	addi	r23,r23,4111
  1474c4:	00bc0004 	movi	r2,-4096
  1474c8:	b8ae703a 	and	r23,r23,r2
  1474cc:	9009883a 	mov	r4,r18
  1474d0:	b80b883a 	mov	r5,r23
  1474d4:	d8c00015 	stw	r3,0(sp)
  1474d8:	01492fc0 	call	1492fc <_sbrk_r>
  1474dc:	1029883a 	mov	r20,r2
  1474e0:	00bfffc4 	movi	r2,-1
  1474e4:	d8c00017 	ldw	r3,0(sp)
  1474e8:	a080a426 	beq	r20,r2,14777c <_malloc_r+0x62c>
  1474ec:	a700a236 	bltu	r20,fp,147778 <_malloc_r+0x628>
  1474f0:	05800574 	movhi	r22,21
  1474f4:	b58bc904 	addi	r22,r22,12068
  1474f8:	b0800017 	ldw	r2,0(r22)
  1474fc:	b885883a 	add	r2,r23,r2
  147500:	b0800015 	stw	r2,0(r22)
  147504:	e500da26 	beq	fp,r20,147870 <_malloc_r+0x720>
  147508:	19000017 	ldw	r4,0(r3)
  14750c:	00ffffc4 	movi	r3,-1
  147510:	20c0e426 	beq	r4,r3,1478a4 <_malloc_r+0x754>
  147514:	a739c83a 	sub	fp,r20,fp
  147518:	1705883a 	add	r2,r2,fp
  14751c:	b0800015 	stw	r2,0(r22)
  147520:	a08001cc 	andi	r2,r20,7
  147524:	1000b526 	beq	r2,zero,1477fc <_malloc_r+0x6ac>
  147528:	a0a9c83a 	sub	r20,r20,r2
  14752c:	00c40204 	movi	r3,4104
  147530:	a5000204 	addi	r20,r20,8
  147534:	1885c83a 	sub	r2,r3,r2
  147538:	a5c7883a 	add	r3,r20,r23
  14753c:	18c3ffcc 	andi	r3,r3,4095
  147540:	10efc83a 	sub	r23,r2,r3
  147544:	9009883a 	mov	r4,r18
  147548:	b80b883a 	mov	r5,r23
  14754c:	01492fc0 	call	1492fc <_sbrk_r>
  147550:	00ffffc4 	movi	r3,-1
  147554:	10c0d026 	beq	r2,r3,147898 <_malloc_r+0x748>
  147558:	1505c83a 	sub	r2,r2,r20
  14755c:	b887883a 	add	r3,r23,r2
  147560:	18c00054 	ori	r3,r3,1
  147564:	b0800017 	ldw	r2,0(r22)
  147568:	9d000215 	stw	r20,8(r19)
  14756c:	a0c00115 	stw	r3,4(r20)
  147570:	b885883a 	add	r2,r23,r2
  147574:	b0800015 	stw	r2,0(r22)
  147578:	84c00e26 	beq	r16,r19,1475b4 <_malloc_r+0x464>
  14757c:	00c003c4 	movi	r3,15
  147580:	1d40a02e 	bgeu	r3,r21,147804 <_malloc_r+0x6b4>
  147584:	81400117 	ldw	r5,4(r16)
  147588:	ad7ffd04 	addi	r21,r21,-12
  14758c:	013ffe04 	movi	r4,-8
  147590:	a908703a 	and	r4,r21,r4
  147594:	2940004c 	andi	r5,r5,1
  147598:	214ab03a 	or	r5,r4,r5
  14759c:	81400115 	stw	r5,4(r16)
  1475a0:	01800144 	movi	r6,5
  1475a4:	810b883a 	add	r5,r16,r4
  1475a8:	29800115 	stw	r6,4(r5)
  1475ac:	29800215 	stw	r6,8(r5)
  1475b0:	1900c036 	bltu	r3,r4,1478b4 <_malloc_r+0x764>
  1475b4:	00c00574 	movhi	r3,21
  1475b8:	18cbbe04 	addi	r3,r3,12024
  1475bc:	19000017 	ldw	r4,0(r3)
  1475c0:	2080012e 	bgeu	r4,r2,1475c8 <_malloc_r+0x478>
  1475c4:	18800015 	stw	r2,0(r3)
  1475c8:	00c00574 	movhi	r3,21
  1475cc:	18cbbd04 	addi	r3,r3,12020
  1475d0:	19000017 	ldw	r4,0(r3)
  1475d4:	9c000217 	ldw	r16,8(r19)
  1475d8:	2080012e 	bgeu	r4,r2,1475e0 <_malloc_r+0x490>
  1475dc:	18800015 	stw	r2,0(r3)
  1475e0:	80c00117 	ldw	r3,4(r16)
  1475e4:	00bfff04 	movi	r2,-4
  1475e8:	1886703a 	and	r3,r3,r2
  1475ec:	1c45c83a 	sub	r2,r3,r17
  1475f0:	1c400236 	bltu	r3,r17,1475fc <_malloc_r+0x4ac>
  1475f4:	00c003c4 	movi	r3,15
  1475f8:	18800416 	blt	r3,r2,14760c <_malloc_r+0x4bc>
  1475fc:	9009883a 	mov	r4,r18
  147600:	014e9480 	call	14e948 <__malloc_unlock>
  147604:	0005883a 	mov	r2,zero
  147608:	003eff06 	br	147208 <_malloc_r+0xb8>
  14760c:	88c00054 	ori	r3,r17,1
  147610:	80c00115 	stw	r3,4(r16)
  147614:	8463883a 	add	r17,r16,r17
  147618:	10800054 	ori	r2,r2,1
  14761c:	9c400215 	stw	r17,8(r19)
  147620:	88800115 	stw	r2,4(r17)
  147624:	9009883a 	mov	r4,r18
  147628:	014e9480 	call	14e948 <__malloc_unlock>
  14762c:	80800204 	addi	r2,r16,8
  147630:	003ef506 	br	147208 <_malloc_r+0xb8>
  147634:	00800504 	movi	r2,20
  147638:	1100482e 	bgeu	r2,r4,14775c <_malloc_r+0x60c>
  14763c:	00801504 	movi	r2,84
  147640:	11006836 	bltu	r2,r4,1477e4 <_malloc_r+0x694>
  147644:	8808d33a 	srli	r4,r17,12
  147648:	21001b84 	addi	r4,r4,110
  14764c:	210b883a 	add	r5,r4,r4
  147650:	003f0606 	br	14726c <_malloc_r+0x11c>
  147654:	1006d27a 	srli	r3,r2,9
  147658:	01400104 	movi	r5,4
  14765c:	28c0422e 	bgeu	r5,r3,147768 <_malloc_r+0x618>
  147660:	01400504 	movi	r5,20
  147664:	28c07c36 	bltu	r5,r3,147858 <_malloc_r+0x708>
  147668:	194016c4 	addi	r5,r3,91
  14766c:	294d883a 	add	r6,r5,r5
  147670:	318d883a 	add	r6,r6,r6
  147674:	318d883a 	add	r6,r6,r6
  147678:	998d883a 	add	r6,r19,r6
  14767c:	30c00217 	ldw	r3,8(r6)
  147680:	01c00574 	movhi	r7,21
  147684:	39c62604 	addi	r7,r7,6296
  147688:	19806326 	beq	r3,r6,147818 <_malloc_r+0x6c8>
  14768c:	01ffff04 	movi	r7,-4
  147690:	19400117 	ldw	r5,4(r3)
  147694:	29ca703a 	and	r5,r5,r7
  147698:	1140022e 	bgeu	r2,r5,1476a4 <_malloc_r+0x554>
  14769c:	18c00217 	ldw	r3,8(r3)
  1476a0:	30fffb1e 	bne	r6,r3,147690 <_malloc_r+0x540>
  1476a4:	19400317 	ldw	r5,12(r3)
  1476a8:	98800117 	ldw	r2,4(r19)
  1476ac:	81400315 	stw	r5,12(r16)
  1476b0:	80c00215 	stw	r3,8(r16)
  1476b4:	2c000215 	stw	r16,8(r5)
  1476b8:	1c000315 	stw	r16,12(r3)
  1476bc:	003f2106 	br	147344 <_malloc_r+0x1f4>
  1476c0:	88800054 	ori	r2,r17,1
  1476c4:	80800115 	stw	r2,4(r16)
  1476c8:	8463883a 	add	r17,r16,r17
  1476cc:	1c400515 	stw	r17,20(r3)
  1476d0:	1c400415 	stw	r17,16(r3)
  1476d4:	28800054 	ori	r2,r5,1
  1476d8:	88800115 	stw	r2,4(r17)
  1476dc:	8a400315 	stw	r9,12(r17)
  1476e0:	8a400215 	stw	r9,8(r17)
  1476e4:	8963883a 	add	r17,r17,r5
  1476e8:	89400015 	stw	r5,0(r17)
  1476ec:	9009883a 	mov	r4,r18
  1476f0:	014e9480 	call	14e948 <__malloc_unlock>
  1476f4:	80800204 	addi	r2,r16,8
  1476f8:	003ec306 	br	147208 <_malloc_r+0xb8>
  1476fc:	18800117 	ldw	r2,4(r3)
  147700:	003f1006 	br	147344 <_malloc_r+0x1f4>
  147704:	63000044 	addi	r12,r12,1
  147708:	608000cc 	andi	r2,r12,3
  14770c:	52800204 	addi	r10,r10,8
  147710:	103f241e 	bne	r2,zero,1473a4 <_malloc_r+0x254>
  147714:	00002106 	br	14779c <_malloc_r+0x64c>
  147718:	80800204 	addi	r2,r16,8
  14771c:	84000517 	ldw	r16,20(r16)
  147720:	143eab1e 	bne	r2,r16,1471d0 <_malloc_r+0x80>
  147724:	21000084 	addi	r4,r4,2
  147728:	003ee606 	br	1472c4 <_malloc_r+0x174>
  14772c:	80c7883a 	add	r3,r16,r3
  147730:	19400117 	ldw	r5,4(r3)
  147734:	80800317 	ldw	r2,12(r16)
  147738:	81000217 	ldw	r4,8(r16)
  14773c:	29400054 	ori	r5,r5,1
  147740:	19400115 	stw	r5,4(r3)
  147744:	20800315 	stw	r2,12(r4)
  147748:	11000215 	stw	r4,8(r2)
  14774c:	9009883a 	mov	r4,r18
  147750:	014e9480 	call	14e948 <__malloc_unlock>
  147754:	80800204 	addi	r2,r16,8
  147758:	003eab06 	br	147208 <_malloc_r+0xb8>
  14775c:	210016c4 	addi	r4,r4,91
  147760:	210b883a 	add	r5,r4,r4
  147764:	003ec106 	br	14726c <_malloc_r+0x11c>
  147768:	100ad1ba 	srli	r5,r2,6
  14776c:	29400e04 	addi	r5,r5,56
  147770:	294d883a 	add	r6,r5,r5
  147774:	003fbe06 	br	147670 <_malloc_r+0x520>
  147778:	84ff5d26 	beq	r16,r19,1474f0 <_malloc_r+0x3a0>
  14777c:	9c000217 	ldw	r16,8(r19)
  147780:	00bfff04 	movi	r2,-4
  147784:	80c00117 	ldw	r3,4(r16)
  147788:	1886703a 	and	r3,r3,r2
  14778c:	003f9706 	br	1475ec <_malloc_r+0x49c>
  147790:	5ac00017 	ldw	r11,0(r11)
  147794:	213fffc4 	addi	r4,r4,-1
  147798:	58805c1e 	bne	r11,r2,14790c <_malloc_r+0x7bc>
  14779c:	20c000cc 	andi	r3,r4,3
  1477a0:	58bffe04 	addi	r2,r11,-8
  1477a4:	183ffa1e 	bne	r3,zero,147790 <_malloc_r+0x640>
  1477a8:	98800117 	ldw	r2,4(r19)
  1477ac:	0146303a 	nor	r3,zero,r5
  1477b0:	1884703a 	and	r2,r3,r2
  1477b4:	98800115 	stw	r2,4(r19)
  1477b8:	294b883a 	add	r5,r5,r5
  1477bc:	117f2e36 	bltu	r2,r5,147478 <_malloc_r+0x328>
  1477c0:	283f2d26 	beq	r5,zero,147478 <_malloc_r+0x328>
  1477c4:	1146703a 	and	r3,r2,r5
  1477c8:	6009883a 	mov	r4,r12
  1477cc:	183eef1e 	bne	r3,zero,14738c <_malloc_r+0x23c>
  1477d0:	294b883a 	add	r5,r5,r5
  1477d4:	1146703a 	and	r3,r2,r5
  1477d8:	21000104 	addi	r4,r4,4
  1477dc:	183ffc26 	beq	r3,zero,1477d0 <_malloc_r+0x680>
  1477e0:	003eea06 	br	14738c <_malloc_r+0x23c>
  1477e4:	00805504 	movi	r2,340
  1477e8:	11001336 	bltu	r2,r4,147838 <_malloc_r+0x6e8>
  1477ec:	8808d3fa 	srli	r4,r17,15
  1477f0:	21001dc4 	addi	r4,r4,119
  1477f4:	210b883a 	add	r5,r4,r4
  1477f8:	003e9c06 	br	14726c <_malloc_r+0x11c>
  1477fc:	00840004 	movi	r2,4096
  147800:	003f4d06 	br	147538 <_malloc_r+0x3e8>
  147804:	00800044 	movi	r2,1
  147808:	a0800115 	stw	r2,4(r20)
  14780c:	a021883a 	mov	r16,r20
  147810:	0007883a 	mov	r3,zero
  147814:	003f7506 	br	1475ec <_malloc_r+0x49c>
  147818:	280bd0ba 	srai	r5,r5,2
  14781c:	01800044 	movi	r6,1
  147820:	38800117 	ldw	r2,4(r7)
  147824:	314c983a 	sll	r6,r6,r5
  147828:	180b883a 	mov	r5,r3
  14782c:	3084b03a 	or	r2,r6,r2
  147830:	38800115 	stw	r2,4(r7)
  147834:	003f9d06 	br	1476ac <_malloc_r+0x55c>
  147838:	00815504 	movi	r2,1364
  14783c:	11001336 	bltu	r2,r4,14788c <_malloc_r+0x73c>
  147840:	8808d4ba 	srli	r4,r17,18
  147844:	21001f04 	addi	r4,r4,124
  147848:	210b883a 	add	r5,r4,r4
  14784c:	003e8706 	br	14726c <_malloc_r+0x11c>
  147850:	bdc00404 	addi	r23,r23,16
  147854:	003f1d06 	br	1474cc <_malloc_r+0x37c>
  147858:	01401504 	movi	r5,84
  14785c:	28c01c36 	bltu	r5,r3,1478d0 <_malloc_r+0x780>
  147860:	100ad33a 	srli	r5,r2,12
  147864:	29401b84 	addi	r5,r5,110
  147868:	294d883a 	add	r6,r5,r5
  14786c:	003f8006 	br	147670 <_malloc_r+0x520>
  147870:	e103ffcc 	andi	r4,fp,4095
  147874:	203f241e 	bne	r4,zero,147508 <_malloc_r+0x3b8>
  147878:	98c00217 	ldw	r3,8(r19)
  14787c:	bd49883a 	add	r4,r23,r21
  147880:	21000054 	ori	r4,r4,1
  147884:	19000115 	stw	r4,4(r3)
  147888:	003f4a06 	br	1475b4 <_malloc_r+0x464>
  14788c:	01403f04 	movi	r5,252
  147890:	01001f84 	movi	r4,126
  147894:	003e7506 	br	14726c <_malloc_r+0x11c>
  147898:	00c00044 	movi	r3,1
  14789c:	002f883a 	mov	r23,zero
  1478a0:	003f3006 	br	147564 <_malloc_r+0x414>
  1478a4:	00800574 	movhi	r2,21
  1478a8:	108bad04 	addi	r2,r2,11956
  1478ac:	15000015 	stw	r20,0(r2)
  1478b0:	003f1b06 	br	147520 <_malloc_r+0x3d0>
  1478b4:	9009883a 	mov	r4,r18
  1478b8:	81400204 	addi	r5,r16,8
  1478bc:	01465ec0 	call	1465ec <_free_r>
  1478c0:	00800574 	movhi	r2,21
  1478c4:	108bc904 	addi	r2,r2,12068
  1478c8:	10800017 	ldw	r2,0(r2)
  1478cc:	003f3906 	br	1475b4 <_malloc_r+0x464>
  1478d0:	01405504 	movi	r5,340
  1478d4:	28c00436 	bltu	r5,r3,1478e8 <_malloc_r+0x798>
  1478d8:	100ad3fa 	srli	r5,r2,15
  1478dc:	29401dc4 	addi	r5,r5,119
  1478e0:	294d883a 	add	r6,r5,r5
  1478e4:	003f6206 	br	147670 <_malloc_r+0x520>
  1478e8:	01415504 	movi	r5,1364
  1478ec:	28c00436 	bltu	r5,r3,147900 <_malloc_r+0x7b0>
  1478f0:	100ad4ba 	srli	r5,r2,18
  1478f4:	29401f04 	addi	r5,r5,124
  1478f8:	294d883a 	add	r6,r5,r5
  1478fc:	003f5c06 	br	147670 <_malloc_r+0x520>
  147900:	01803f04 	movi	r6,252
  147904:	01401f84 	movi	r5,126
  147908:	003f5906 	br	147670 <_malloc_r+0x520>
  14790c:	98800117 	ldw	r2,4(r19)
  147910:	003fa906 	br	1477b8 <_malloc_r+0x668>

00147914 <memchr>:
  147914:	208000cc 	andi	r2,r4,3
  147918:	2811883a 	mov	r8,r5
  14791c:	10003526 	beq	r2,zero,1479f4 <memchr+0xe0>
  147920:	30bfffc4 	addi	r2,r6,-1
  147924:	30001b26 	beq	r6,zero,147994 <memchr+0x80>
  147928:	21800003 	ldbu	r6,0(r4)
  14792c:	28c03fcc 	andi	r3,r5,255
  147930:	30c01a26 	beq	r6,r3,14799c <memchr+0x88>
  147934:	180d883a 	mov	r6,r3
  147938:	00000406 	br	14794c <memchr+0x38>
  14793c:	10001526 	beq	r2,zero,147994 <memchr+0x80>
  147940:	20c00003 	ldbu	r3,0(r4)
  147944:	10bfffc4 	addi	r2,r2,-1
  147948:	19801426 	beq	r3,r6,14799c <memchr+0x88>
  14794c:	21000044 	addi	r4,r4,1
  147950:	20c000cc 	andi	r3,r4,3
  147954:	183ff91e 	bne	r3,zero,14793c <memchr+0x28>
  147958:	02c000c4 	movi	r11,3
  14795c:	58801136 	bltu	r11,r2,1479a4 <memchr+0x90>
  147960:	10000c26 	beq	r2,zero,147994 <memchr+0x80>
  147964:	20c00003 	ldbu	r3,0(r4)
  147968:	29403fcc 	andi	r5,r5,255
  14796c:	19400b26 	beq	r3,r5,14799c <memchr+0x88>
  147970:	20c00044 	addi	r3,r4,1
  147974:	2085883a 	add	r2,r4,r2
  147978:	41803fcc 	andi	r6,r8,255
  14797c:	00000306 	br	14798c <memchr+0x78>
  147980:	18c00044 	addi	r3,r3,1
  147984:	197fffc3 	ldbu	r5,-1(r3)
  147988:	29800426 	beq	r5,r6,14799c <memchr+0x88>
  14798c:	1809883a 	mov	r4,r3
  147990:	18bffb1e 	bne	r3,r2,147980 <memchr+0x6c>
  147994:	0005883a 	mov	r2,zero
  147998:	f800283a 	ret
  14799c:	2005883a 	mov	r2,r4
  1479a0:	f800283a 	ret
  1479a4:	28c03fcc 	andi	r3,r5,255
  1479a8:	180c923a 	slli	r6,r3,8
  1479ac:	02bfbff4 	movhi	r10,65279
  1479b0:	52bfbfc4 	addi	r10,r10,-257
  1479b4:	02602074 	movhi	r9,32897
  1479b8:	4a602004 	addi	r9,r9,-32640
  1479bc:	30c6b03a 	or	r3,r6,r3
  1479c0:	180c943a 	slli	r6,r3,16
  1479c4:	30ccb03a 	or	r6,r6,r3
  1479c8:	20c00017 	ldw	r3,0(r4)
  1479cc:	30c6f03a 	xor	r3,r6,r3
  1479d0:	1a8f883a 	add	r7,r3,r10
  1479d4:	00c6303a 	nor	r3,zero,r3
  1479d8:	38c6703a 	and	r3,r7,r3
  1479dc:	1a46703a 	and	r3,r3,r9
  1479e0:	183fdf1e 	bne	r3,zero,147960 <memchr+0x4c>
  1479e4:	10bfff04 	addi	r2,r2,-4
  1479e8:	21000104 	addi	r4,r4,4
  1479ec:	58bff636 	bltu	r11,r2,1479c8 <memchr+0xb4>
  1479f0:	003fdb06 	br	147960 <memchr+0x4c>
  1479f4:	3005883a 	mov	r2,r6
  1479f8:	003fd706 	br	147958 <memchr+0x44>

001479fc <memmove>:
  1479fc:	2005883a 	mov	r2,r4
  147a00:	29000b2e 	bgeu	r5,r4,147a30 <memmove+0x34>
  147a04:	298f883a 	add	r7,r5,r6
  147a08:	21c0092e 	bgeu	r4,r7,147a30 <memmove+0x34>
  147a0c:	2187883a 	add	r3,r4,r6
  147a10:	198bc83a 	sub	r5,r3,r6
  147a14:	30003e26 	beq	r6,zero,147b10 <memmove+0x114>
  147a18:	39ffffc4 	addi	r7,r7,-1
  147a1c:	39000003 	ldbu	r4,0(r7)
  147a20:	18ffffc4 	addi	r3,r3,-1
  147a24:	19000005 	stb	r4,0(r3)
  147a28:	197ffb1e 	bne	r3,r5,147a18 <memmove+0x1c>
  147a2c:	f800283a 	ret
  147a30:	00c003c4 	movi	r3,15
  147a34:	1980372e 	bgeu	r3,r6,147b14 <memmove+0x118>
  147a38:	1146b03a 	or	r3,r2,r5
  147a3c:	18c000cc 	andi	r3,r3,3
  147a40:	1800371e 	bne	r3,zero,147b20 <memmove+0x124>
  147a44:	327ffc04 	addi	r9,r6,-16
  147a48:	4812d13a 	srli	r9,r9,4
  147a4c:	280f883a 	mov	r7,r5
  147a50:	1007883a 	mov	r3,r2
  147a54:	4810913a 	slli	r8,r9,4
  147a58:	1211883a 	add	r8,r2,r8
  147a5c:	42000404 	addi	r8,r8,16
  147a60:	39000017 	ldw	r4,0(r7)
  147a64:	18c00404 	addi	r3,r3,16
  147a68:	39c00404 	addi	r7,r7,16
  147a6c:	193ffc15 	stw	r4,-16(r3)
  147a70:	393ffd17 	ldw	r4,-12(r7)
  147a74:	193ffd15 	stw	r4,-12(r3)
  147a78:	393ffe17 	ldw	r4,-8(r7)
  147a7c:	193ffe15 	stw	r4,-8(r3)
  147a80:	393fff17 	ldw	r4,-4(r7)
  147a84:	193fff15 	stw	r4,-4(r3)
  147a88:	1a3ff51e 	bne	r3,r8,147a60 <memmove+0x64>
  147a8c:	49000044 	addi	r4,r9,1
  147a90:	2008913a 	slli	r4,r4,4
  147a94:	328003cc 	andi	r10,r6,15
  147a98:	1107883a 	add	r3,r2,r4
  147a9c:	290b883a 	add	r5,r5,r4
  147aa0:	010000c4 	movi	r4,3
  147aa4:	2280212e 	bgeu	r4,r10,147b2c <memmove+0x130>
  147aa8:	52bfff04 	addi	r10,r10,-4
  147aac:	5014d0ba 	srli	r10,r10,2
  147ab0:	180f883a 	mov	r7,r3
  147ab4:	2809883a 	mov	r4,r5
  147ab8:	5291883a 	add	r8,r10,r10
  147abc:	4211883a 	add	r8,r8,r8
  147ac0:	42400104 	addi	r9,r8,4
  147ac4:	1a53883a 	add	r9,r3,r9
  147ac8:	22000017 	ldw	r8,0(r4)
  147acc:	39c00104 	addi	r7,r7,4
  147ad0:	21000104 	addi	r4,r4,4
  147ad4:	3a3fff15 	stw	r8,-4(r7)
  147ad8:	3a7ffb1e 	bne	r7,r9,147ac8 <memmove+0xcc>
  147adc:	51000044 	addi	r4,r10,1
  147ae0:	2109883a 	add	r4,r4,r4
  147ae4:	2109883a 	add	r4,r4,r4
  147ae8:	318000cc 	andi	r6,r6,3
  147aec:	1907883a 	add	r3,r3,r4
  147af0:	290b883a 	add	r5,r5,r4
  147af4:	30000c26 	beq	r6,zero,147b28 <memmove+0x12c>
  147af8:	198d883a 	add	r6,r3,r6
  147afc:	29c00003 	ldbu	r7,0(r5)
  147b00:	18c00044 	addi	r3,r3,1
  147b04:	29400044 	addi	r5,r5,1
  147b08:	19ffffc5 	stb	r7,-1(r3)
  147b0c:	19bffb1e 	bne	r3,r6,147afc <memmove+0x100>
  147b10:	f800283a 	ret
  147b14:	1007883a 	mov	r3,r2
  147b18:	303ff71e 	bne	r6,zero,147af8 <memmove+0xfc>
  147b1c:	00000206 	br	147b28 <memmove+0x12c>
  147b20:	1007883a 	mov	r3,r2
  147b24:	003ff406 	br	147af8 <memmove+0xfc>
  147b28:	f800283a 	ret
  147b2c:	500d883a 	mov	r6,r10
  147b30:	303ff11e 	bne	r6,zero,147af8 <memmove+0xfc>
  147b34:	003ffc06 	br	147b28 <memmove+0x12c>

00147b38 <memset>:
  147b38:	20c000cc 	andi	r3,r4,3
  147b3c:	2005883a 	mov	r2,r4
  147b40:	18003f26 	beq	r3,zero,147c40 <memset+0x108>
  147b44:	31ffffc4 	addi	r7,r6,-1
  147b48:	30003b26 	beq	r6,zero,147c38 <memset+0x100>
  147b4c:	2813883a 	mov	r9,r5
  147b50:	200d883a 	mov	r6,r4
  147b54:	2007883a 	mov	r3,r4
  147b58:	00000406 	br	147b6c <memset+0x34>
  147b5c:	3a3fffc4 	addi	r8,r7,-1
  147b60:	31800044 	addi	r6,r6,1
  147b64:	38003426 	beq	r7,zero,147c38 <memset+0x100>
  147b68:	400f883a 	mov	r7,r8
  147b6c:	18c00044 	addi	r3,r3,1
  147b70:	32400005 	stb	r9,0(r6)
  147b74:	1a0000cc 	andi	r8,r3,3
  147b78:	403ff81e 	bne	r8,zero,147b5c <memset+0x24>
  147b7c:	010000c4 	movi	r4,3
  147b80:	21c0282e 	bgeu	r4,r7,147c24 <memset+0xec>
  147b84:	29003fcc 	andi	r4,r5,255
  147b88:	2010923a 	slli	r8,r4,8
  147b8c:	4108b03a 	or	r4,r8,r4
  147b90:	2010943a 	slli	r8,r4,16
  147b94:	4110b03a 	or	r8,r8,r4
  147b98:	010003c4 	movi	r4,15
  147b9c:	21c0122e 	bgeu	r4,r7,147be8 <memset+0xb0>
  147ba0:	3a7ffc04 	addi	r9,r7,-16
  147ba4:	4812d13a 	srli	r9,r9,4
  147ba8:	19000404 	addi	r4,r3,16
  147bac:	180d883a 	mov	r6,r3
  147bb0:	4814913a 	slli	r10,r9,4
  147bb4:	2289883a 	add	r4,r4,r10
  147bb8:	32000015 	stw	r8,0(r6)
  147bbc:	32000115 	stw	r8,4(r6)
  147bc0:	32000215 	stw	r8,8(r6)
  147bc4:	32000315 	stw	r8,12(r6)
  147bc8:	31800404 	addi	r6,r6,16
  147bcc:	313ffa1e 	bne	r6,r4,147bb8 <memset+0x80>
  147bd0:	4a400044 	addi	r9,r9,1
  147bd4:	4812913a 	slli	r9,r9,4
  147bd8:	39c003cc 	andi	r7,r7,15
  147bdc:	010000c4 	movi	r4,3
  147be0:	1a47883a 	add	r3,r3,r9
  147be4:	21c00f2e 	bgeu	r4,r7,147c24 <memset+0xec>
  147be8:	3a7fff04 	addi	r9,r7,-4
  147bec:	4812d0ba 	srli	r9,r9,2
  147bf0:	19000104 	addi	r4,r3,4
  147bf4:	180d883a 	mov	r6,r3
  147bf8:	4a55883a 	add	r10,r9,r9
  147bfc:	5295883a 	add	r10,r10,r10
  147c00:	2289883a 	add	r4,r4,r10
  147c04:	32000015 	stw	r8,0(r6)
  147c08:	31800104 	addi	r6,r6,4
  147c0c:	313ffd1e 	bne	r6,r4,147c04 <memset+0xcc>
  147c10:	4a400044 	addi	r9,r9,1
  147c14:	4a53883a 	add	r9,r9,r9
  147c18:	4a53883a 	add	r9,r9,r9
  147c1c:	1a47883a 	add	r3,r3,r9
  147c20:	39c000cc 	andi	r7,r7,3
  147c24:	38000526 	beq	r7,zero,147c3c <memset+0x104>
  147c28:	19cf883a 	add	r7,r3,r7
  147c2c:	19400005 	stb	r5,0(r3)
  147c30:	18c00044 	addi	r3,r3,1
  147c34:	19fffd1e 	bne	r3,r7,147c2c <memset+0xf4>
  147c38:	f800283a 	ret
  147c3c:	f800283a 	ret
  147c40:	2007883a 	mov	r3,r4
  147c44:	300f883a 	mov	r7,r6
  147c48:	003fcc06 	br	147b7c <memset+0x44>

00147c4c <_Balloc>:
  147c4c:	20801317 	ldw	r2,76(r4)
  147c50:	defffc04 	addi	sp,sp,-16
  147c54:	dc400115 	stw	r17,4(sp)
  147c58:	dc000015 	stw	r16,0(sp)
  147c5c:	dfc00315 	stw	ra,12(sp)
  147c60:	dc800215 	stw	r18,8(sp)
  147c64:	2023883a 	mov	r17,r4
  147c68:	2821883a 	mov	r16,r5
  147c6c:	10000f26 	beq	r2,zero,147cac <_Balloc+0x60>
  147c70:	8407883a 	add	r3,r16,r16
  147c74:	18c7883a 	add	r3,r3,r3
  147c78:	10c7883a 	add	r3,r2,r3
  147c7c:	18800017 	ldw	r2,0(r3)
  147c80:	10001126 	beq	r2,zero,147cc8 <_Balloc+0x7c>
  147c84:	11000017 	ldw	r4,0(r2)
  147c88:	19000015 	stw	r4,0(r3)
  147c8c:	10000415 	stw	zero,16(r2)
  147c90:	10000315 	stw	zero,12(r2)
  147c94:	dfc00317 	ldw	ra,12(sp)
  147c98:	dc800217 	ldw	r18,8(sp)
  147c9c:	dc400117 	ldw	r17,4(sp)
  147ca0:	dc000017 	ldw	r16,0(sp)
  147ca4:	dec00404 	addi	sp,sp,16
  147ca8:	f800283a 	ret
  147cac:	01400104 	movi	r5,4
  147cb0:	01800844 	movi	r6,33
  147cb4:	014ab540 	call	14ab54 <_calloc_r>
  147cb8:	88801315 	stw	r2,76(r17)
  147cbc:	103fec1e 	bne	r2,zero,147c70 <_Balloc+0x24>
  147cc0:	0005883a 	mov	r2,zero
  147cc4:	003ff306 	br	147c94 <_Balloc+0x48>
  147cc8:	01400044 	movi	r5,1
  147ccc:	2c24983a 	sll	r18,r5,r16
  147cd0:	8809883a 	mov	r4,r17
  147cd4:	91800144 	addi	r6,r18,5
  147cd8:	318d883a 	add	r6,r6,r6
  147cdc:	318d883a 	add	r6,r6,r6
  147ce0:	014ab540 	call	14ab54 <_calloc_r>
  147ce4:	103ff626 	beq	r2,zero,147cc0 <_Balloc+0x74>
  147ce8:	14000115 	stw	r16,4(r2)
  147cec:	14800215 	stw	r18,8(r2)
  147cf0:	003fe606 	br	147c8c <_Balloc+0x40>

00147cf4 <_Bfree>:
  147cf4:	28000826 	beq	r5,zero,147d18 <_Bfree+0x24>
  147cf8:	28c00117 	ldw	r3,4(r5)
  147cfc:	20801317 	ldw	r2,76(r4)
  147d00:	18c7883a 	add	r3,r3,r3
  147d04:	18c7883a 	add	r3,r3,r3
  147d08:	10c5883a 	add	r2,r2,r3
  147d0c:	10c00017 	ldw	r3,0(r2)
  147d10:	28c00015 	stw	r3,0(r5)
  147d14:	11400015 	stw	r5,0(r2)
  147d18:	f800283a 	ret

00147d1c <__multadd>:
  147d1c:	defffa04 	addi	sp,sp,-24
  147d20:	dc000115 	stw	r16,4(sp)
  147d24:	2c000417 	ldw	r16,16(r5)
  147d28:	dc800315 	stw	r18,12(sp)
  147d2c:	dc400215 	stw	r17,8(sp)
  147d30:	dfc00515 	stw	ra,20(sp)
  147d34:	dcc00415 	stw	r19,16(sp)
  147d38:	2823883a 	mov	r17,r5
  147d3c:	2025883a 	mov	r18,r4
  147d40:	28c00504 	addi	r3,r5,20
  147d44:	0011883a 	mov	r8,zero
  147d48:	1a800017 	ldw	r10,0(r3)
  147d4c:	18c00104 	addi	r3,r3,4
  147d50:	42000044 	addi	r8,r8,1
  147d54:	527fffcc 	andi	r9,r10,65535
  147d58:	4993383a 	mul	r9,r9,r6
  147d5c:	5014d43a 	srli	r10,r10,16
  147d60:	49d3883a 	add	r9,r9,r7
  147d64:	480ed43a 	srli	r7,r9,16
  147d68:	5195383a 	mul	r10,r10,r6
  147d6c:	4a7fffcc 	andi	r9,r9,65535
  147d70:	3a8f883a 	add	r7,r7,r10
  147d74:	3814943a 	slli	r10,r7,16
  147d78:	380ed43a 	srli	r7,r7,16
  147d7c:	5253883a 	add	r9,r10,r9
  147d80:	1a7fff15 	stw	r9,-4(r3)
  147d84:	443ff016 	blt	r8,r16,147d48 <__multadd+0x2c>
  147d88:	38000926 	beq	r7,zero,147db0 <__multadd+0x94>
  147d8c:	88800217 	ldw	r2,8(r17)
  147d90:	80800f0e 	bge	r16,r2,147dd0 <__multadd+0xb4>
  147d94:	80800144 	addi	r2,r16,5
  147d98:	1085883a 	add	r2,r2,r2
  147d9c:	1085883a 	add	r2,r2,r2
  147da0:	8885883a 	add	r2,r17,r2
  147da4:	11c00015 	stw	r7,0(r2)
  147da8:	84000044 	addi	r16,r16,1
  147dac:	8c000415 	stw	r16,16(r17)
  147db0:	8805883a 	mov	r2,r17
  147db4:	dfc00517 	ldw	ra,20(sp)
  147db8:	dcc00417 	ldw	r19,16(sp)
  147dbc:	dc800317 	ldw	r18,12(sp)
  147dc0:	dc400217 	ldw	r17,8(sp)
  147dc4:	dc000117 	ldw	r16,4(sp)
  147dc8:	dec00604 	addi	sp,sp,24
  147dcc:	f800283a 	ret
  147dd0:	89400117 	ldw	r5,4(r17)
  147dd4:	9009883a 	mov	r4,r18
  147dd8:	d9c00015 	stw	r7,0(sp)
  147ddc:	29400044 	addi	r5,r5,1
  147de0:	0147c4c0 	call	147c4c <_Balloc>
  147de4:	89800417 	ldw	r6,16(r17)
  147de8:	89400304 	addi	r5,r17,12
  147dec:	11000304 	addi	r4,r2,12
  147df0:	31800084 	addi	r6,r6,2
  147df4:	318d883a 	add	r6,r6,r6
  147df8:	318d883a 	add	r6,r6,r6
  147dfc:	1027883a 	mov	r19,r2
  147e00:	01422440 	call	142244 <memcpy>
  147e04:	88c00117 	ldw	r3,4(r17)
  147e08:	90801317 	ldw	r2,76(r18)
  147e0c:	d9c00017 	ldw	r7,0(sp)
  147e10:	18c7883a 	add	r3,r3,r3
  147e14:	18c7883a 	add	r3,r3,r3
  147e18:	10c5883a 	add	r2,r2,r3
  147e1c:	10c00017 	ldw	r3,0(r2)
  147e20:	88c00015 	stw	r3,0(r17)
  147e24:	14400015 	stw	r17,0(r2)
  147e28:	9823883a 	mov	r17,r19
  147e2c:	003fd906 	br	147d94 <__multadd+0x78>

00147e30 <__s2b>:
  147e30:	defff904 	addi	sp,sp,-28
  147e34:	dd000415 	stw	r20,16(sp)
  147e38:	dc400115 	stw	r17,4(sp)
  147e3c:	2829883a 	mov	r20,r5
  147e40:	2023883a 	mov	r17,r4
  147e44:	01400244 	movi	r5,9
  147e48:	39000204 	addi	r4,r7,8
  147e4c:	dcc00315 	stw	r19,12(sp)
  147e50:	dc800215 	stw	r18,8(sp)
  147e54:	dfc00615 	stw	ra,24(sp)
  147e58:	dd400515 	stw	r21,20(sp)
  147e5c:	dc000015 	stw	r16,0(sp)
  147e60:	3827883a 	mov	r19,r7
  147e64:	3025883a 	mov	r18,r6
  147e68:	014bec00 	call	14bec0 <__divsi3>
  147e6c:	00c00044 	movi	r3,1
  147e70:	000b883a 	mov	r5,zero
  147e74:	1880030e 	bge	r3,r2,147e84 <__s2b+0x54>
  147e78:	18c7883a 	add	r3,r3,r3
  147e7c:	29400044 	addi	r5,r5,1
  147e80:	18bffd16 	blt	r3,r2,147e78 <__s2b+0x48>
  147e84:	8809883a 	mov	r4,r17
  147e88:	0147c4c0 	call	147c4c <_Balloc>
  147e8c:	d8c00717 	ldw	r3,28(sp)
  147e90:	10c00515 	stw	r3,20(r2)
  147e94:	00c00044 	movi	r3,1
  147e98:	10c00415 	stw	r3,16(r2)
  147e9c:	00c00244 	movi	r3,9
  147ea0:	1c80210e 	bge	r3,r18,147f28 <__s2b+0xf8>
  147ea4:	a0eb883a 	add	r21,r20,r3
  147ea8:	a821883a 	mov	r16,r21
  147eac:	a4a9883a 	add	r20,r20,r18
  147eb0:	81c00007 	ldb	r7,0(r16)
  147eb4:	8809883a 	mov	r4,r17
  147eb8:	84000044 	addi	r16,r16,1
  147ebc:	100b883a 	mov	r5,r2
  147ec0:	01800284 	movi	r6,10
  147ec4:	39fff404 	addi	r7,r7,-48
  147ec8:	0147d1c0 	call	147d1c <__multadd>
  147ecc:	853ff81e 	bne	r16,r20,147eb0 <__s2b+0x80>
  147ed0:	aca1883a 	add	r16,r21,r18
  147ed4:	843ffe04 	addi	r16,r16,-8
  147ed8:	94c00a0e 	bge	r18,r19,147f04 <__s2b+0xd4>
  147edc:	84e7883a 	add	r19,r16,r19
  147ee0:	9ca5c83a 	sub	r18,r19,r18
  147ee4:	81c00007 	ldb	r7,0(r16)
  147ee8:	8809883a 	mov	r4,r17
  147eec:	84000044 	addi	r16,r16,1
  147ef0:	100b883a 	mov	r5,r2
  147ef4:	01800284 	movi	r6,10
  147ef8:	39fff404 	addi	r7,r7,-48
  147efc:	0147d1c0 	call	147d1c <__multadd>
  147f00:	84bff81e 	bne	r16,r18,147ee4 <__s2b+0xb4>
  147f04:	dfc00617 	ldw	ra,24(sp)
  147f08:	dd400517 	ldw	r21,20(sp)
  147f0c:	dd000417 	ldw	r20,16(sp)
  147f10:	dcc00317 	ldw	r19,12(sp)
  147f14:	dc800217 	ldw	r18,8(sp)
  147f18:	dc400117 	ldw	r17,4(sp)
  147f1c:	dc000017 	ldw	r16,0(sp)
  147f20:	dec00704 	addi	sp,sp,28
  147f24:	f800283a 	ret
  147f28:	a4000284 	addi	r16,r20,10
  147f2c:	1825883a 	mov	r18,r3
  147f30:	003fe906 	br	147ed8 <__s2b+0xa8>

00147f34 <__hi0bits>:
  147f34:	20bfffec 	andhi	r2,r4,65535
  147f38:	1000141e 	bne	r2,zero,147f8c <__hi0bits+0x58>
  147f3c:	2008943a 	slli	r4,r4,16
  147f40:	00800404 	movi	r2,16
  147f44:	20ffc02c 	andhi	r3,r4,65280
  147f48:	1800021e 	bne	r3,zero,147f54 <__hi0bits+0x20>
  147f4c:	2008923a 	slli	r4,r4,8
  147f50:	10800204 	addi	r2,r2,8
  147f54:	20fc002c 	andhi	r3,r4,61440
  147f58:	1800021e 	bne	r3,zero,147f64 <__hi0bits+0x30>
  147f5c:	2008913a 	slli	r4,r4,4
  147f60:	10800104 	addi	r2,r2,4
  147f64:	20f0002c 	andhi	r3,r4,49152
  147f68:	1800031e 	bne	r3,zero,147f78 <__hi0bits+0x44>
  147f6c:	2109883a 	add	r4,r4,r4
  147f70:	10800084 	addi	r2,r2,2
  147f74:	2109883a 	add	r4,r4,r4
  147f78:	20000316 	blt	r4,zero,147f88 <__hi0bits+0x54>
  147f7c:	2110002c 	andhi	r4,r4,16384
  147f80:	2000041e 	bne	r4,zero,147f94 <__hi0bits+0x60>
  147f84:	00800804 	movi	r2,32
  147f88:	f800283a 	ret
  147f8c:	0005883a 	mov	r2,zero
  147f90:	003fec06 	br	147f44 <__hi0bits+0x10>
  147f94:	10800044 	addi	r2,r2,1
  147f98:	f800283a 	ret

00147f9c <__lo0bits>:
  147f9c:	20c00017 	ldw	r3,0(r4)
  147fa0:	188001cc 	andi	r2,r3,7
  147fa4:	10000826 	beq	r2,zero,147fc8 <__lo0bits+0x2c>
  147fa8:	1880004c 	andi	r2,r3,1
  147fac:	1000211e 	bne	r2,zero,148034 <__lo0bits+0x98>
  147fb0:	1880008c 	andi	r2,r3,2
  147fb4:	1000211e 	bne	r2,zero,14803c <__lo0bits+0xa0>
  147fb8:	1806d0ba 	srli	r3,r3,2
  147fbc:	00800084 	movi	r2,2
  147fc0:	20c00015 	stw	r3,0(r4)
  147fc4:	f800283a 	ret
  147fc8:	18bfffcc 	andi	r2,r3,65535
  147fcc:	10001326 	beq	r2,zero,14801c <__lo0bits+0x80>
  147fd0:	0005883a 	mov	r2,zero
  147fd4:	19403fcc 	andi	r5,r3,255
  147fd8:	2800021e 	bne	r5,zero,147fe4 <__lo0bits+0x48>
  147fdc:	1806d23a 	srli	r3,r3,8
  147fe0:	10800204 	addi	r2,r2,8
  147fe4:	194003cc 	andi	r5,r3,15
  147fe8:	2800021e 	bne	r5,zero,147ff4 <__lo0bits+0x58>
  147fec:	1806d13a 	srli	r3,r3,4
  147ff0:	10800104 	addi	r2,r2,4
  147ff4:	194000cc 	andi	r5,r3,3
  147ff8:	2800021e 	bne	r5,zero,148004 <__lo0bits+0x68>
  147ffc:	1806d0ba 	srli	r3,r3,2
  148000:	10800084 	addi	r2,r2,2
  148004:	1940004c 	andi	r5,r3,1
  148008:	2800081e 	bne	r5,zero,14802c <__lo0bits+0x90>
  14800c:	1806d07a 	srli	r3,r3,1
  148010:	1800051e 	bne	r3,zero,148028 <__lo0bits+0x8c>
  148014:	00800804 	movi	r2,32
  148018:	f800283a 	ret
  14801c:	1806d43a 	srli	r3,r3,16
  148020:	00800404 	movi	r2,16
  148024:	003feb06 	br	147fd4 <__lo0bits+0x38>
  148028:	10800044 	addi	r2,r2,1
  14802c:	20c00015 	stw	r3,0(r4)
  148030:	f800283a 	ret
  148034:	0005883a 	mov	r2,zero
  148038:	f800283a 	ret
  14803c:	1806d07a 	srli	r3,r3,1
  148040:	00800044 	movi	r2,1
  148044:	20c00015 	stw	r3,0(r4)
  148048:	f800283a 	ret

0014804c <__i2b>:
  14804c:	defffd04 	addi	sp,sp,-12
  148050:	dc000015 	stw	r16,0(sp)
  148054:	04000044 	movi	r16,1
  148058:	dc400115 	stw	r17,4(sp)
  14805c:	2823883a 	mov	r17,r5
  148060:	800b883a 	mov	r5,r16
  148064:	dfc00215 	stw	ra,8(sp)
  148068:	0147c4c0 	call	147c4c <_Balloc>
  14806c:	14400515 	stw	r17,20(r2)
  148070:	14000415 	stw	r16,16(r2)
  148074:	dfc00217 	ldw	ra,8(sp)
  148078:	dc400117 	ldw	r17,4(sp)
  14807c:	dc000017 	ldw	r16,0(sp)
  148080:	dec00304 	addi	sp,sp,12
  148084:	f800283a 	ret

00148088 <__multiply>:
  148088:	defffa04 	addi	sp,sp,-24
  14808c:	dcc00315 	stw	r19,12(sp)
  148090:	dc800215 	stw	r18,8(sp)
  148094:	34c00417 	ldw	r19,16(r6)
  148098:	2c800417 	ldw	r18,16(r5)
  14809c:	dd000415 	stw	r20,16(sp)
  1480a0:	dc400115 	stw	r17,4(sp)
  1480a4:	dfc00515 	stw	ra,20(sp)
  1480a8:	dc000015 	stw	r16,0(sp)
  1480ac:	2823883a 	mov	r17,r5
  1480b0:	3029883a 	mov	r20,r6
  1480b4:	94c0050e 	bge	r18,r19,1480cc <__multiply+0x44>
  1480b8:	9007883a 	mov	r3,r18
  1480bc:	3023883a 	mov	r17,r6
  1480c0:	9825883a 	mov	r18,r19
  1480c4:	2829883a 	mov	r20,r5
  1480c8:	1827883a 	mov	r19,r3
  1480cc:	88800217 	ldw	r2,8(r17)
  1480d0:	94e1883a 	add	r16,r18,r19
  1480d4:	89400117 	ldw	r5,4(r17)
  1480d8:	1400010e 	bge	r2,r16,1480e0 <__multiply+0x58>
  1480dc:	29400044 	addi	r5,r5,1
  1480e0:	0147c4c0 	call	147c4c <_Balloc>
  1480e4:	841b883a 	add	r13,r16,r16
  1480e8:	13000504 	addi	r12,r2,20
  1480ec:	6b5b883a 	add	r13,r13,r13
  1480f0:	635b883a 	add	r13,r12,r13
  1480f4:	6007883a 	mov	r3,r12
  1480f8:	6340032e 	bgeu	r12,r13,148108 <__multiply+0x80>
  1480fc:	18000015 	stw	zero,0(r3)
  148100:	18c00104 	addi	r3,r3,4
  148104:	1b7ffd36 	bltu	r3,r13,1480fc <__multiply+0x74>
  148108:	9ce7883a 	add	r19,r19,r19
  14810c:	94a5883a 	add	r18,r18,r18
  148110:	a2c00504 	addi	r11,r20,20
  148114:	9ce7883a 	add	r19,r19,r19
  148118:	8bc00504 	addi	r15,r17,20
  14811c:	94a5883a 	add	r18,r18,r18
  148120:	5cdd883a 	add	r14,r11,r19
  148124:	7c95883a 	add	r10,r15,r18
  148128:	5b803f2e 	bgeu	r11,r14,148228 <__multiply+0x1a0>
  14812c:	5a000017 	ldw	r8,0(r11)
  148130:	427fffcc 	andi	r9,r8,65535
  148134:	48001b26 	beq	r9,zero,1481a4 <__multiply+0x11c>
  148138:	6007883a 	mov	r3,r12
  14813c:	7809883a 	mov	r4,r15
  148140:	000b883a 	mov	r5,zero
  148144:	22000017 	ldw	r8,0(r4)
  148148:	19c00017 	ldw	r7,0(r3)
  14814c:	21000104 	addi	r4,r4,4
  148150:	41bfffcc 	andi	r6,r8,65535
  148154:	324d383a 	mul	r6,r6,r9
  148158:	4010d43a 	srli	r8,r8,16
  14815c:	3fffffcc 	andi	ra,r7,65535
  148160:	f98d883a 	add	r6,ra,r6
  148164:	314d883a 	add	r6,r6,r5
  148168:	380ed43a 	srli	r7,r7,16
  14816c:	4251383a 	mul	r8,r8,r9
  148170:	303ed43a 	srli	ra,r6,16
  148174:	31bfffcc 	andi	r6,r6,65535
  148178:	3a0b883a 	add	r5,r7,r8
  14817c:	2fcb883a 	add	r5,r5,ra
  148180:	280e943a 	slli	r7,r5,16
  148184:	1811883a 	mov	r8,r3
  148188:	280ad43a 	srli	r5,r5,16
  14818c:	398cb03a 	or	r6,r7,r6
  148190:	19800015 	stw	r6,0(r3)
  148194:	18c00104 	addi	r3,r3,4
  148198:	22bfea36 	bltu	r4,r10,148144 <__multiply+0xbc>
  14819c:	41400115 	stw	r5,4(r8)
  1481a0:	5a000017 	ldw	r8,0(r11)
  1481a4:	4010d43a 	srli	r8,r8,16
  1481a8:	40001c26 	beq	r8,zero,14821c <__multiply+0x194>
  1481ac:	61400017 	ldw	r5,0(r12)
  1481b0:	7809883a 	mov	r4,r15
  1481b4:	6007883a 	mov	r3,r12
  1481b8:	280d883a 	mov	r6,r5
  1481bc:	0013883a 	mov	r9,zero
  1481c0:	21c0000b 	ldhu	r7,0(r4)
  1481c4:	303ed43a 	srli	ra,r6,16
  1481c8:	297fffcc 	andi	r5,r5,65535
  1481cc:	3a0f383a 	mul	r7,r7,r8
  1481d0:	21000104 	addi	r4,r4,4
  1481d4:	19800117 	ldw	r6,4(r3)
  1481d8:	3fcf883a 	add	r7,r7,ra
  1481dc:	3a4f883a 	add	r7,r7,r9
  1481e0:	383e943a 	slli	ra,r7,16
  1481e4:	380ed43a 	srli	r7,r7,16
  1481e8:	327fffcc 	andi	r9,r6,65535
  1481ec:	f94ab03a 	or	r5,ra,r5
  1481f0:	19400015 	stw	r5,0(r3)
  1481f4:	217fff17 	ldw	r5,-4(r4)
  1481f8:	183f883a 	mov	ra,r3
  1481fc:	18c00104 	addi	r3,r3,4
  148200:	280ad43a 	srli	r5,r5,16
  148204:	2a0b383a 	mul	r5,r5,r8
  148208:	2a4b883a 	add	r5,r5,r9
  14820c:	29cb883a 	add	r5,r5,r7
  148210:	2812d43a 	srli	r9,r5,16
  148214:	22bfea36 	bltu	r4,r10,1481c0 <__multiply+0x138>
  148218:	f9400115 	stw	r5,4(ra)
  14821c:	5ac00104 	addi	r11,r11,4
  148220:	63000104 	addi	r12,r12,4
  148224:	5bbfc136 	bltu	r11,r14,14812c <__multiply+0xa4>
  148228:	0400090e 	bge	zero,r16,148250 <__multiply+0x1c8>
  14822c:	68ffff17 	ldw	r3,-4(r13)
  148230:	6b7fff04 	addi	r13,r13,-4
  148234:	18000326 	beq	r3,zero,148244 <__multiply+0x1bc>
  148238:	00000506 	br	148250 <__multiply+0x1c8>
  14823c:	68c00017 	ldw	r3,0(r13)
  148240:	1800031e 	bne	r3,zero,148250 <__multiply+0x1c8>
  148244:	843fffc4 	addi	r16,r16,-1
  148248:	6b7fff04 	addi	r13,r13,-4
  14824c:	803ffb1e 	bne	r16,zero,14823c <__multiply+0x1b4>
  148250:	14000415 	stw	r16,16(r2)
  148254:	dfc00517 	ldw	ra,20(sp)
  148258:	dd000417 	ldw	r20,16(sp)
  14825c:	dcc00317 	ldw	r19,12(sp)
  148260:	dc800217 	ldw	r18,8(sp)
  148264:	dc400117 	ldw	r17,4(sp)
  148268:	dc000017 	ldw	r16,0(sp)
  14826c:	dec00604 	addi	sp,sp,24
  148270:	f800283a 	ret

00148274 <__pow5mult>:
  148274:	defffa04 	addi	sp,sp,-24
  148278:	dcc00315 	stw	r19,12(sp)
  14827c:	dc800215 	stw	r18,8(sp)
  148280:	dc000015 	stw	r16,0(sp)
  148284:	dfc00515 	stw	ra,20(sp)
  148288:	dd000415 	stw	r20,16(sp)
  14828c:	dc400115 	stw	r17,4(sp)
  148290:	308000cc 	andi	r2,r6,3
  148294:	3021883a 	mov	r16,r6
  148298:	2027883a 	mov	r19,r4
  14829c:	2825883a 	mov	r18,r5
  1482a0:	1000301e 	bne	r2,zero,148364 <__pow5mult+0xf0>
  1482a4:	8021d0ba 	srai	r16,r16,2
  1482a8:	80001b26 	beq	r16,zero,148318 <__pow5mult+0xa4>
  1482ac:	9c401217 	ldw	r17,72(r19)
  1482b0:	88003726 	beq	r17,zero,148390 <__pow5mult+0x11c>
  1482b4:	80c0004c 	andi	r3,r16,1
  1482b8:	1800071e 	bne	r3,zero,1482d8 <__pow5mult+0x64>
  1482bc:	8021d07a 	srai	r16,r16,1
  1482c0:	80001526 	beq	r16,zero,148318 <__pow5mult+0xa4>
  1482c4:	88800017 	ldw	r2,0(r17)
  1482c8:	10001c26 	beq	r2,zero,14833c <__pow5mult+0xc8>
  1482cc:	1023883a 	mov	r17,r2
  1482d0:	80c0004c 	andi	r3,r16,1
  1482d4:	183ff926 	beq	r3,zero,1482bc <__pow5mult+0x48>
  1482d8:	900b883a 	mov	r5,r18
  1482dc:	880d883a 	mov	r6,r17
  1482e0:	9809883a 	mov	r4,r19
  1482e4:	01480880 	call	148088 <__multiply>
  1482e8:	90001c26 	beq	r18,zero,14835c <__pow5mult+0xe8>
  1482ec:	91000117 	ldw	r4,4(r18)
  1482f0:	98c01317 	ldw	r3,76(r19)
  1482f4:	8021d07a 	srai	r16,r16,1
  1482f8:	2109883a 	add	r4,r4,r4
  1482fc:	2109883a 	add	r4,r4,r4
  148300:	1907883a 	add	r3,r3,r4
  148304:	19000017 	ldw	r4,0(r3)
  148308:	91000015 	stw	r4,0(r18)
  14830c:	1c800015 	stw	r18,0(r3)
  148310:	1025883a 	mov	r18,r2
  148314:	803feb1e 	bne	r16,zero,1482c4 <__pow5mult+0x50>
  148318:	9005883a 	mov	r2,r18
  14831c:	dfc00517 	ldw	ra,20(sp)
  148320:	dd000417 	ldw	r20,16(sp)
  148324:	dcc00317 	ldw	r19,12(sp)
  148328:	dc800217 	ldw	r18,8(sp)
  14832c:	dc400117 	ldw	r17,4(sp)
  148330:	dc000017 	ldw	r16,0(sp)
  148334:	dec00604 	addi	sp,sp,24
  148338:	f800283a 	ret
  14833c:	880b883a 	mov	r5,r17
  148340:	880d883a 	mov	r6,r17
  148344:	9809883a 	mov	r4,r19
  148348:	01480880 	call	148088 <__multiply>
  14834c:	88800015 	stw	r2,0(r17)
  148350:	10000015 	stw	zero,0(r2)
  148354:	1023883a 	mov	r17,r2
  148358:	003fdd06 	br	1482d0 <__pow5mult+0x5c>
  14835c:	1025883a 	mov	r18,r2
  148360:	003fd606 	br	1482bc <__pow5mult+0x48>
  148364:	10bfffc4 	addi	r2,r2,-1
  148368:	1085883a 	add	r2,r2,r2
  14836c:	00c00574 	movhi	r3,21
  148370:	18c46304 	addi	r3,r3,4492
  148374:	1085883a 	add	r2,r2,r2
  148378:	1885883a 	add	r2,r3,r2
  14837c:	11800017 	ldw	r6,0(r2)
  148380:	000f883a 	mov	r7,zero
  148384:	0147d1c0 	call	147d1c <__multadd>
  148388:	1025883a 	mov	r18,r2
  14838c:	003fc506 	br	1482a4 <__pow5mult+0x30>
  148390:	05000044 	movi	r20,1
  148394:	9809883a 	mov	r4,r19
  148398:	a00b883a 	mov	r5,r20
  14839c:	0147c4c0 	call	147c4c <_Balloc>
  1483a0:	1023883a 	mov	r17,r2
  1483a4:	00809c44 	movi	r2,625
  1483a8:	88800515 	stw	r2,20(r17)
  1483ac:	8d000415 	stw	r20,16(r17)
  1483b0:	9c401215 	stw	r17,72(r19)
  1483b4:	88000015 	stw	zero,0(r17)
  1483b8:	003fbe06 	br	1482b4 <__pow5mult+0x40>

001483bc <__lshift>:
  1483bc:	defff904 	addi	sp,sp,-28
  1483c0:	dd000415 	stw	r20,16(sp)
  1483c4:	dc400115 	stw	r17,4(sp)
  1483c8:	2d000417 	ldw	r20,16(r5)
  1483cc:	3023d17a 	srai	r17,r6,5
  1483d0:	28800217 	ldw	r2,8(r5)
  1483d4:	dd400515 	stw	r21,20(sp)
  1483d8:	8d29883a 	add	r20,r17,r20
  1483dc:	dcc00315 	stw	r19,12(sp)
  1483e0:	dc800215 	stw	r18,8(sp)
  1483e4:	dc000015 	stw	r16,0(sp)
  1483e8:	dfc00615 	stw	ra,24(sp)
  1483ec:	a4000044 	addi	r16,r20,1
  1483f0:	2825883a 	mov	r18,r5
  1483f4:	302b883a 	mov	r21,r6
  1483f8:	2027883a 	mov	r19,r4
  1483fc:	29400117 	ldw	r5,4(r5)
  148400:	1400030e 	bge	r2,r16,148410 <__lshift+0x54>
  148404:	1085883a 	add	r2,r2,r2
  148408:	29400044 	addi	r5,r5,1
  14840c:	143ffd16 	blt	r2,r16,148404 <__lshift+0x48>
  148410:	9809883a 	mov	r4,r19
  148414:	0147c4c0 	call	147c4c <_Balloc>
  148418:	11000504 	addi	r4,r2,20
  14841c:	0440090e 	bge	zero,r17,148444 <__lshift+0x88>
  148420:	200f883a 	mov	r7,r4
  148424:	0007883a 	mov	r3,zero
  148428:	38000015 	stw	zero,0(r7)
  14842c:	18c00044 	addi	r3,r3,1
  148430:	39c00104 	addi	r7,r7,4
  148434:	1c7ffc1e 	bne	r3,r17,148428 <__lshift+0x6c>
  148438:	18c7883a 	add	r3,r3,r3
  14843c:	18c7883a 	add	r3,r3,r3
  148440:	20c9883a 	add	r4,r4,r3
  148444:	92400417 	ldw	r9,16(r18)
  148448:	90c00504 	addi	r3,r18,20
  14844c:	a98007cc 	andi	r6,r21,31
  148450:	4a53883a 	add	r9,r9,r9
  148454:	4a53883a 	add	r9,r9,r9
  148458:	1a53883a 	add	r9,r3,r9
  14845c:	30002426 	beq	r6,zero,1484f0 <__lshift+0x134>
  148460:	01400804 	movi	r5,32
  148464:	298bc83a 	sub	r5,r5,r6
  148468:	200f883a 	mov	r7,r4
  14846c:	0011883a 	mov	r8,zero
  148470:	1a800017 	ldw	r10,0(r3)
  148474:	3809883a 	mov	r4,r7
  148478:	39c00104 	addi	r7,r7,4
  14847c:	5194983a 	sll	r10,r10,r6
  148480:	18c00104 	addi	r3,r3,4
  148484:	4290b03a 	or	r8,r8,r10
  148488:	3a3fff15 	stw	r8,-4(r7)
  14848c:	1a3fff17 	ldw	r8,-4(r3)
  148490:	4150d83a 	srl	r8,r8,r5
  148494:	1a7ff636 	bltu	r3,r9,148470 <__lshift+0xb4>
  148498:	22000115 	stw	r8,4(r4)
  14849c:	40000126 	beq	r8,zero,1484a4 <__lshift+0xe8>
  1484a0:	a4000084 	addi	r16,r20,2
  1484a4:	91000117 	ldw	r4,4(r18)
  1484a8:	98c01317 	ldw	r3,76(r19)
  1484ac:	843fffc4 	addi	r16,r16,-1
  1484b0:	2109883a 	add	r4,r4,r4
  1484b4:	2109883a 	add	r4,r4,r4
  1484b8:	1907883a 	add	r3,r3,r4
  1484bc:	19000017 	ldw	r4,0(r3)
  1484c0:	14000415 	stw	r16,16(r2)
  1484c4:	91000015 	stw	r4,0(r18)
  1484c8:	1c800015 	stw	r18,0(r3)
  1484cc:	dfc00617 	ldw	ra,24(sp)
  1484d0:	dd400517 	ldw	r21,20(sp)
  1484d4:	dd000417 	ldw	r20,16(sp)
  1484d8:	dcc00317 	ldw	r19,12(sp)
  1484dc:	dc800217 	ldw	r18,8(sp)
  1484e0:	dc400117 	ldw	r17,4(sp)
  1484e4:	dc000017 	ldw	r16,0(sp)
  1484e8:	dec00704 	addi	sp,sp,28
  1484ec:	f800283a 	ret
  1484f0:	200f883a 	mov	r7,r4
  1484f4:	19800017 	ldw	r6,0(r3)
  1484f8:	39c00104 	addi	r7,r7,4
  1484fc:	18c00104 	addi	r3,r3,4
  148500:	39bfff15 	stw	r6,-4(r7)
  148504:	1a7ffb36 	bltu	r3,r9,1484f4 <__lshift+0x138>
  148508:	003fe606 	br	1484a4 <__lshift+0xe8>

0014850c <__mcmp>:
  14850c:	20800417 	ldw	r2,16(r4)
  148510:	28c00417 	ldw	r3,16(r5)
  148514:	10c5c83a 	sub	r2,r2,r3
  148518:	1000111e 	bne	r2,zero,148560 <__mcmp+0x54>
  14851c:	18c7883a 	add	r3,r3,r3
  148520:	18c7883a 	add	r3,r3,r3
  148524:	21000504 	addi	r4,r4,20
  148528:	29400504 	addi	r5,r5,20
  14852c:	20c5883a 	add	r2,r4,r3
  148530:	28cb883a 	add	r5,r5,r3
  148534:	00000106 	br	14853c <__mcmp+0x30>
  148538:	2080082e 	bgeu	r4,r2,14855c <__mcmp+0x50>
  14853c:	10bfff04 	addi	r2,r2,-4
  148540:	297fff04 	addi	r5,r5,-4
  148544:	11800017 	ldw	r6,0(r2)
  148548:	28c00017 	ldw	r3,0(r5)
  14854c:	30fffa26 	beq	r6,r3,148538 <__mcmp+0x2c>
  148550:	30c00436 	bltu	r6,r3,148564 <__mcmp+0x58>
  148554:	00800044 	movi	r2,1
  148558:	f800283a 	ret
  14855c:	0005883a 	mov	r2,zero
  148560:	f800283a 	ret
  148564:	00bfffc4 	movi	r2,-1
  148568:	f800283a 	ret

0014856c <__mdiff>:
  14856c:	defffc04 	addi	sp,sp,-16
  148570:	dc000015 	stw	r16,0(sp)
  148574:	2821883a 	mov	r16,r5
  148578:	200f883a 	mov	r7,r4
  14857c:	300b883a 	mov	r5,r6
  148580:	8009883a 	mov	r4,r16
  148584:	dc400115 	stw	r17,4(sp)
  148588:	dfc00315 	stw	ra,12(sp)
  14858c:	dc800215 	stw	r18,8(sp)
  148590:	3023883a 	mov	r17,r6
  148594:	014850c0 	call	14850c <__mcmp>
  148598:	10005226 	beq	r2,zero,1486e4 <__mdiff+0x178>
  14859c:	10004c16 	blt	r2,zero,1486d0 <__mdiff+0x164>
  1485a0:	0025883a 	mov	r18,zero
  1485a4:	81400117 	ldw	r5,4(r16)
  1485a8:	3809883a 	mov	r4,r7
  1485ac:	0147c4c0 	call	147c4c <_Balloc>
  1485b0:	82800417 	ldw	r10,16(r16)
  1485b4:	8b400417 	ldw	r13,16(r17)
  1485b8:	81000504 	addi	r4,r16,20
  1485bc:	5299883a 	add	r12,r10,r10
  1485c0:	6b5b883a 	add	r13,r13,r13
  1485c4:	6319883a 	add	r12,r12,r12
  1485c8:	89800504 	addi	r6,r17,20
  1485cc:	6b5b883a 	add	r13,r13,r13
  1485d0:	14800315 	stw	r18,12(r2)
  1485d4:	2319883a 	add	r12,r4,r12
  1485d8:	335b883a 	add	r13,r6,r13
  1485dc:	11400504 	addi	r5,r2,20
  1485e0:	0007883a 	mov	r3,zero
  1485e4:	00000106 	br	1485ec <__mdiff+0x80>
  1485e8:	400b883a 	mov	r5,r8
  1485ec:	22400017 	ldw	r9,0(r4)
  1485f0:	32000017 	ldw	r8,0(r6)
  1485f4:	31800104 	addi	r6,r6,4
  1485f8:	49ffffcc 	andi	r7,r9,65535
  1485fc:	42ffffcc 	andi	r11,r8,65535
  148600:	38c7883a 	add	r3,r7,r3
  148604:	1acfc83a 	sub	r7,r3,r11
  148608:	4010d43a 	srli	r8,r8,16
  14860c:	4806d43a 	srli	r3,r9,16
  148610:	3817d43a 	srai	r11,r7,16
  148614:	39ffffcc 	andi	r7,r7,65535
  148618:	1a07c83a 	sub	r3,r3,r8
  14861c:	1ac7883a 	add	r3,r3,r11
  148620:	1812943a 	slli	r9,r3,16
  148624:	2a000104 	addi	r8,r5,4
  148628:	21000104 	addi	r4,r4,4
  14862c:	49ceb03a 	or	r7,r9,r7
  148630:	29c00015 	stw	r7,0(r5)
  148634:	1807d43a 	srai	r3,r3,16
  148638:	337feb36 	bltu	r6,r13,1485e8 <__mdiff+0x7c>
  14863c:	2013883a 	mov	r9,r4
  148640:	2300342e 	bgeu	r4,r12,148714 <__mdiff+0x1a8>
  148644:	400b883a 	mov	r5,r8
  148648:	21c00017 	ldw	r7,0(r4)
  14864c:	29400104 	addi	r5,r5,4
  148650:	21000104 	addi	r4,r4,4
  148654:	39bfffcc 	andi	r6,r7,65535
  148658:	30cd883a 	add	r6,r6,r3
  14865c:	3007d43a 	srai	r3,r6,16
  148660:	380ed43a 	srli	r7,r7,16
  148664:	31bfffcc 	andi	r6,r6,65535
  148668:	19c7883a 	add	r3,r3,r7
  14866c:	180e943a 	slli	r7,r3,16
  148670:	1807d43a 	srai	r3,r3,16
  148674:	398cb03a 	or	r6,r7,r6
  148678:	29bfff15 	stw	r6,-4(r5)
  14867c:	233ff236 	bltu	r4,r12,148648 <__mdiff+0xdc>
  148680:	0248303a 	nor	r4,zero,r9
  148684:	2309883a 	add	r4,r4,r12
  148688:	2008d0ba 	srli	r4,r4,2
  14868c:	21000044 	addi	r4,r4,1
  148690:	2109883a 	add	r4,r4,r4
  148694:	2109883a 	add	r4,r4,r4
  148698:	4111883a 	add	r8,r8,r4
  14869c:	413fff04 	addi	r4,r8,-4
  1486a0:	3000041e 	bne	r6,zero,1486b4 <__mdiff+0x148>
  1486a4:	213fff04 	addi	r4,r4,-4
  1486a8:	20c00017 	ldw	r3,0(r4)
  1486ac:	52bfffc4 	addi	r10,r10,-1
  1486b0:	183ffc26 	beq	r3,zero,1486a4 <__mdiff+0x138>
  1486b4:	12800415 	stw	r10,16(r2)
  1486b8:	dfc00317 	ldw	ra,12(sp)
  1486bc:	dc800217 	ldw	r18,8(sp)
  1486c0:	dc400117 	ldw	r17,4(sp)
  1486c4:	dc000017 	ldw	r16,0(sp)
  1486c8:	dec00404 	addi	sp,sp,16
  1486cc:	f800283a 	ret
  1486d0:	8005883a 	mov	r2,r16
  1486d4:	04800044 	movi	r18,1
  1486d8:	8821883a 	mov	r16,r17
  1486dc:	1023883a 	mov	r17,r2
  1486e0:	003fb006 	br	1485a4 <__mdiff+0x38>
  1486e4:	3809883a 	mov	r4,r7
  1486e8:	000b883a 	mov	r5,zero
  1486ec:	0147c4c0 	call	147c4c <_Balloc>
  1486f0:	00c00044 	movi	r3,1
  1486f4:	10c00415 	stw	r3,16(r2)
  1486f8:	10000515 	stw	zero,20(r2)
  1486fc:	dfc00317 	ldw	ra,12(sp)
  148700:	dc800217 	ldw	r18,8(sp)
  148704:	dc400117 	ldw	r17,4(sp)
  148708:	dc000017 	ldw	r16,0(sp)
  14870c:	dec00404 	addi	sp,sp,16
  148710:	f800283a 	ret
  148714:	380d883a 	mov	r6,r7
  148718:	003fe006 	br	14869c <__mdiff+0x130>

0014871c <__ulp>:
  14871c:	295ffc2c 	andhi	r5,r5,32752
  148720:	00bf3034 	movhi	r2,64704
  148724:	2887883a 	add	r3,r5,r2
  148728:	00c0020e 	bge	zero,r3,148734 <__ulp+0x18>
  14872c:	0005883a 	mov	r2,zero
  148730:	f800283a 	ret
  148734:	00c7c83a 	sub	r3,zero,r3
  148738:	1805d53a 	srai	r2,r3,20
  14873c:	00c004c4 	movi	r3,19
  148740:	18800a0e 	bge	r3,r2,14876c <__ulp+0x50>
  148744:	01000c84 	movi	r4,50
  148748:	0007883a 	mov	r3,zero
  14874c:	20800516 	blt	r4,r2,148764 <__ulp+0x48>
  148750:	01000cc4 	movi	r4,51
  148754:	2085c83a 	sub	r2,r4,r2
  148758:	01000044 	movi	r4,1
  14875c:	2084983a 	sll	r2,r4,r2
  148760:	f800283a 	ret
  148764:	00800044 	movi	r2,1
  148768:	f800283a 	ret
  14876c:	00c00234 	movhi	r3,8
  148770:	1887d83a 	sra	r3,r3,r2
  148774:	0005883a 	mov	r2,zero
  148778:	f800283a 	ret

0014877c <__b2d>:
  14877c:	21800417 	ldw	r6,16(r4)
  148780:	22000504 	addi	r8,r4,20
  148784:	deffff04 	addi	sp,sp,-4
  148788:	318d883a 	add	r6,r6,r6
  14878c:	318d883a 	add	r6,r6,r6
  148790:	418d883a 	add	r6,r8,r6
  148794:	31ffff17 	ldw	r7,-4(r6)
  148798:	327fff04 	addi	r9,r6,-4
  14879c:	dfc00015 	stw	ra,0(sp)
  1487a0:	3809883a 	mov	r4,r7
  1487a4:	0147f340 	call	147f34 <__hi0bits>
  1487a8:	00c00804 	movi	r3,32
  1487ac:	1887c83a 	sub	r3,r3,r2
  1487b0:	28c00015 	stw	r3,0(r5)
  1487b4:	00c00284 	movi	r3,10
  1487b8:	18800d16 	blt	r3,r2,1487f0 <__b2d+0x74>
  1487bc:	010002c4 	movi	r4,11
  1487c0:	2089c83a 	sub	r4,r4,r2
  1487c4:	3906d83a 	srl	r3,r7,r4
  1487c8:	18cffc34 	orhi	r3,r3,16368
  1487cc:	4240232e 	bgeu	r8,r9,14885c <__b2d+0xe0>
  1487d0:	317ffe17 	ldw	r5,-8(r6)
  1487d4:	2908d83a 	srl	r4,r5,r4
  1487d8:	10800544 	addi	r2,r2,21
  1487dc:	388e983a 	sll	r7,r7,r2
  1487e0:	21c4b03a 	or	r2,r4,r7
  1487e4:	dfc00017 	ldw	ra,0(sp)
  1487e8:	dec00104 	addi	sp,sp,4
  1487ec:	f800283a 	ret
  1487f0:	42401136 	bltu	r8,r9,148838 <__b2d+0xbc>
  1487f4:	113ffd44 	addi	r4,r2,-11
  1487f8:	000b883a 	mov	r5,zero
  1487fc:	20001226 	beq	r4,zero,148848 <__b2d+0xcc>
  148800:	00c00ac4 	movi	r3,43
  148804:	1885c83a 	sub	r2,r3,r2
  148808:	3906983a 	sll	r3,r7,r4
  14880c:	288cd83a 	srl	r6,r5,r2
  148810:	18cffc34 	orhi	r3,r3,16368
  148814:	1986b03a 	or	r3,r3,r6
  148818:	4240122e 	bgeu	r8,r9,148864 <__b2d+0xe8>
  14881c:	49bfff17 	ldw	r6,-4(r9)
  148820:	3084d83a 	srl	r2,r6,r2
  148824:	2908983a 	sll	r4,r5,r4
  148828:	1104b03a 	or	r2,r2,r4
  14882c:	dfc00017 	ldw	ra,0(sp)
  148830:	dec00104 	addi	sp,sp,4
  148834:	f800283a 	ret
  148838:	113ffd44 	addi	r4,r2,-11
  14883c:	327ffe04 	addi	r9,r6,-8
  148840:	317ffe17 	ldw	r5,-8(r6)
  148844:	203fee1e 	bne	r4,zero,148800 <__b2d+0x84>
  148848:	38cffc34 	orhi	r3,r7,16368
  14884c:	2805883a 	mov	r2,r5
  148850:	dfc00017 	ldw	ra,0(sp)
  148854:	dec00104 	addi	sp,sp,4
  148858:	f800283a 	ret
  14885c:	0009883a 	mov	r4,zero
  148860:	003fdd06 	br	1487d8 <__b2d+0x5c>
  148864:	0005883a 	mov	r2,zero
  148868:	003fee06 	br	148824 <__b2d+0xa8>

0014886c <__d2b>:
  14886c:	defffa04 	addi	sp,sp,-24
  148870:	dc400315 	stw	r17,12(sp)
  148874:	2823883a 	mov	r17,r5
  148878:	01400044 	movi	r5,1
  14887c:	dc800415 	stw	r18,16(sp)
  148880:	dc000215 	stw	r16,8(sp)
  148884:	dfc00515 	stw	ra,20(sp)
  148888:	3021883a 	mov	r16,r6
  14888c:	3825883a 	mov	r18,r7
  148890:	0147c4c0 	call	147c4c <_Balloc>
  148894:	8012907a 	slli	r9,r16,1
  148898:	1011883a 	mov	r8,r2
  14889c:	00800434 	movhi	r2,16
  1488a0:	10bfffc4 	addi	r2,r2,-1
  1488a4:	4812d57a 	srli	r9,r9,21
  1488a8:	80a0703a 	and	r16,r16,r2
  1488ac:	48000126 	beq	r9,zero,1488b4 <__d2b+0x48>
  1488b0:	84000434 	orhi	r16,r16,16
  1488b4:	dc000015 	stw	r16,0(sp)
  1488b8:	88001e26 	beq	r17,zero,148934 <__d2b+0xc8>
  1488bc:	d9000104 	addi	r4,sp,4
  1488c0:	dc400115 	stw	r17,4(sp)
  1488c4:	0147f9c0 	call	147f9c <__lo0bits>
  1488c8:	d8c00017 	ldw	r3,0(sp)
  1488cc:	10002f1e 	bne	r2,zero,14898c <__d2b+0x120>
  1488d0:	d9000117 	ldw	r4,4(sp)
  1488d4:	41000515 	stw	r4,20(r8)
  1488d8:	180b003a 	cmpeq	r5,r3,zero
  1488dc:	01000084 	movi	r4,2
  1488e0:	214bc83a 	sub	r5,r4,r5
  1488e4:	40c00615 	stw	r3,24(r8)
  1488e8:	41400415 	stw	r5,16(r8)
  1488ec:	4800191e 	bne	r9,zero,148954 <__d2b+0xe8>
  1488f0:	280690ba 	slli	r3,r5,2
  1488f4:	10bef384 	addi	r2,r2,-1074
  1488f8:	90800015 	stw	r2,0(r18)
  1488fc:	40c5883a 	add	r2,r8,r3
  148900:	11000417 	ldw	r4,16(r2)
  148904:	0147f340 	call	147f34 <__hi0bits>
  148908:	280a917a 	slli	r5,r5,5
  14890c:	d8c00617 	ldw	r3,24(sp)
  148910:	2885c83a 	sub	r2,r5,r2
  148914:	18800015 	stw	r2,0(r3)
  148918:	4005883a 	mov	r2,r8
  14891c:	dfc00517 	ldw	ra,20(sp)
  148920:	dc800417 	ldw	r18,16(sp)
  148924:	dc400317 	ldw	r17,12(sp)
  148928:	dc000217 	ldw	r16,8(sp)
  14892c:	dec00604 	addi	sp,sp,24
  148930:	f800283a 	ret
  148934:	d809883a 	mov	r4,sp
  148938:	0147f9c0 	call	147f9c <__lo0bits>
  14893c:	d8c00017 	ldw	r3,0(sp)
  148940:	01400044 	movi	r5,1
  148944:	41400415 	stw	r5,16(r8)
  148948:	40c00515 	stw	r3,20(r8)
  14894c:	10800804 	addi	r2,r2,32
  148950:	483fe726 	beq	r9,zero,1488f0 <__d2b+0x84>
  148954:	00c00d44 	movi	r3,53
  148958:	4a7ef344 	addi	r9,r9,-1075
  14895c:	4893883a 	add	r9,r9,r2
  148960:	1885c83a 	sub	r2,r3,r2
  148964:	d8c00617 	ldw	r3,24(sp)
  148968:	92400015 	stw	r9,0(r18)
  14896c:	18800015 	stw	r2,0(r3)
  148970:	4005883a 	mov	r2,r8
  148974:	dfc00517 	ldw	ra,20(sp)
  148978:	dc800417 	ldw	r18,16(sp)
  14897c:	dc400317 	ldw	r17,12(sp)
  148980:	dc000217 	ldw	r16,8(sp)
  148984:	dec00604 	addi	sp,sp,24
  148988:	f800283a 	ret
  14898c:	01000804 	movi	r4,32
  148990:	2089c83a 	sub	r4,r4,r2
  148994:	1908983a 	sll	r4,r3,r4
  148998:	d9400117 	ldw	r5,4(sp)
  14899c:	1886d83a 	srl	r3,r3,r2
  1489a0:	2148b03a 	or	r4,r4,r5
  1489a4:	41000515 	stw	r4,20(r8)
  1489a8:	d8c00015 	stw	r3,0(sp)
  1489ac:	003fca06 	br	1488d8 <__d2b+0x6c>

001489b0 <__ratio>:
  1489b0:	defffd04 	addi	sp,sp,-12
  1489b4:	2817883a 	mov	r11,r5
  1489b8:	201b883a 	mov	r13,r4
  1489bc:	d9400104 	addi	r5,sp,4
  1489c0:	dfc00215 	stw	ra,8(sp)
  1489c4:	014877c0 	call	14877c <__b2d>
  1489c8:	5809883a 	mov	r4,r11
  1489cc:	d80b883a 	mov	r5,sp
  1489d0:	1019883a 	mov	r12,r2
  1489d4:	1815883a 	mov	r10,r3
  1489d8:	014877c0 	call	14877c <__b2d>
  1489dc:	69400417 	ldw	r5,16(r13)
  1489e0:	59000417 	ldw	r4,16(r11)
  1489e4:	d9800117 	ldw	r6,4(sp)
  1489e8:	2909c83a 	sub	r4,r5,r4
  1489ec:	d9400017 	ldw	r5,0(sp)
  1489f0:	2008917a 	slli	r4,r4,5
  1489f4:	314bc83a 	sub	r5,r6,r5
  1489f8:	290b883a 	add	r5,r5,r4
  1489fc:	01400a0e 	bge	zero,r5,148a28 <__ratio+0x78>
  148a00:	280a953a 	slli	r5,r5,20
  148a04:	6009883a 	mov	r4,r12
  148a08:	100d883a 	mov	r6,r2
  148a0c:	2a95883a 	add	r10,r5,r10
  148a10:	500b883a 	mov	r5,r10
  148a14:	180f883a 	mov	r7,r3
  148a18:	014c7e00 	call	14c7e0 <__divdf3>
  148a1c:	dfc00217 	ldw	ra,8(sp)
  148a20:	dec00304 	addi	sp,sp,12
  148a24:	f800283a 	ret
  148a28:	280a953a 	slli	r5,r5,20
  148a2c:	6009883a 	mov	r4,r12
  148a30:	100d883a 	mov	r6,r2
  148a34:	1947c83a 	sub	r3,r3,r5
  148a38:	180f883a 	mov	r7,r3
  148a3c:	500b883a 	mov	r5,r10
  148a40:	014c7e00 	call	14c7e0 <__divdf3>
  148a44:	dfc00217 	ldw	ra,8(sp)
  148a48:	dec00304 	addi	sp,sp,12
  148a4c:	f800283a 	ret

00148a50 <_mprec_log10>:
  148a50:	defffe04 	addi	sp,sp,-8
  148a54:	dc000015 	stw	r16,0(sp)
  148a58:	dfc00115 	stw	ra,4(sp)
  148a5c:	008005c4 	movi	r2,23
  148a60:	2021883a 	mov	r16,r4
  148a64:	11000d0e 	bge	r2,r4,148a9c <_mprec_log10+0x4c>
  148a68:	0005883a 	mov	r2,zero
  148a6c:	00cffc34 	movhi	r3,16368
  148a70:	843fffc4 	addi	r16,r16,-1
  148a74:	1009883a 	mov	r4,r2
  148a78:	180b883a 	mov	r5,r3
  148a7c:	000d883a 	mov	r6,zero
  148a80:	01d00934 	movhi	r7,16420
  148a84:	014d2fc0 	call	14d2fc <__muldf3>
  148a88:	803ff91e 	bne	r16,zero,148a70 <_mprec_log10+0x20>
  148a8c:	dfc00117 	ldw	ra,4(sp)
  148a90:	dc000017 	ldw	r16,0(sp)
  148a94:	dec00204 	addi	sp,sp,8
  148a98:	f800283a 	ret
  148a9c:	202090fa 	slli	r16,r4,3
  148aa0:	00800574 	movhi	r2,21
  148aa4:	10847a04 	addi	r2,r2,4584
  148aa8:	1421883a 	add	r16,r2,r16
  148aac:	80800017 	ldw	r2,0(r16)
  148ab0:	80c00117 	ldw	r3,4(r16)
  148ab4:	dfc00117 	ldw	ra,4(sp)
  148ab8:	dc000017 	ldw	r16,0(sp)
  148abc:	dec00204 	addi	sp,sp,8
  148ac0:	f800283a 	ret

00148ac4 <__copybits>:
  148ac4:	297fffc4 	addi	r5,r5,-1
  148ac8:	2811d17a 	srai	r8,r5,5
  148acc:	31c00417 	ldw	r7,16(r6)
  148ad0:	30800504 	addi	r2,r6,20
  148ad4:	42000044 	addi	r8,r8,1
  148ad8:	39cf883a 	add	r7,r7,r7
  148adc:	4211883a 	add	r8,r8,r8
  148ae0:	39cf883a 	add	r7,r7,r7
  148ae4:	4211883a 	add	r8,r8,r8
  148ae8:	11cf883a 	add	r7,r2,r7
  148aec:	2211883a 	add	r8,r4,r8
  148af0:	11c00d2e 	bgeu	r2,r7,148b28 <__copybits+0x64>
  148af4:	2007883a 	mov	r3,r4
  148af8:	11400017 	ldw	r5,0(r2)
  148afc:	18c00104 	addi	r3,r3,4
  148b00:	10800104 	addi	r2,r2,4
  148b04:	197fff15 	stw	r5,-4(r3)
  148b08:	11fffb36 	bltu	r2,r7,148af8 <__copybits+0x34>
  148b0c:	3985c83a 	sub	r2,r7,r6
  148b10:	10bffac4 	addi	r2,r2,-21
  148b14:	1004d0ba 	srli	r2,r2,2
  148b18:	10800044 	addi	r2,r2,1
  148b1c:	1085883a 	add	r2,r2,r2
  148b20:	1085883a 	add	r2,r2,r2
  148b24:	2089883a 	add	r4,r4,r2
  148b28:	2200032e 	bgeu	r4,r8,148b38 <__copybits+0x74>
  148b2c:	20000015 	stw	zero,0(r4)
  148b30:	21000104 	addi	r4,r4,4
  148b34:	223ffd36 	bltu	r4,r8,148b2c <__copybits+0x68>
  148b38:	f800283a 	ret

00148b3c <__any_on>:
  148b3c:	20800417 	ldw	r2,16(r4)
  148b40:	2807d17a 	srai	r3,r5,5
  148b44:	21000504 	addi	r4,r4,20
  148b48:	10c00d0e 	bge	r2,r3,148b80 <__any_on+0x44>
  148b4c:	1085883a 	add	r2,r2,r2
  148b50:	1085883a 	add	r2,r2,r2
  148b54:	2085883a 	add	r2,r4,r2
  148b58:	2080182e 	bgeu	r4,r2,148bbc <__any_on+0x80>
  148b5c:	10ffff17 	ldw	r3,-4(r2)
  148b60:	10bfff04 	addi	r2,r2,-4
  148b64:	1800041e 	bne	r3,zero,148b78 <__any_on+0x3c>
  148b68:	2080142e 	bgeu	r4,r2,148bbc <__any_on+0x80>
  148b6c:	10bfff04 	addi	r2,r2,-4
  148b70:	10c00017 	ldw	r3,0(r2)
  148b74:	183ffc26 	beq	r3,zero,148b68 <__any_on+0x2c>
  148b78:	00800044 	movi	r2,1
  148b7c:	f800283a 	ret
  148b80:	18800a0e 	bge	r3,r2,148bac <__any_on+0x70>
  148b84:	18c7883a 	add	r3,r3,r3
  148b88:	18c7883a 	add	r3,r3,r3
  148b8c:	294007cc 	andi	r5,r5,31
  148b90:	20c5883a 	add	r2,r4,r3
  148b94:	283ff026 	beq	r5,zero,148b58 <__any_on+0x1c>
  148b98:	10c00017 	ldw	r3,0(r2)
  148b9c:	194cd83a 	srl	r6,r3,r5
  148ba0:	314a983a 	sll	r5,r6,r5
  148ba4:	28fff41e 	bne	r5,r3,148b78 <__any_on+0x3c>
  148ba8:	003feb06 	br	148b58 <__any_on+0x1c>
  148bac:	18c7883a 	add	r3,r3,r3
  148bb0:	18c7883a 	add	r3,r3,r3
  148bb4:	20c5883a 	add	r2,r4,r3
  148bb8:	003fe706 	br	148b58 <__any_on+0x1c>
  148bbc:	0005883a 	mov	r2,zero
  148bc0:	f800283a 	ret

00148bc4 <_putc_r>:
  148bc4:	defffc04 	addi	sp,sp,-16
  148bc8:	dc000215 	stw	r16,8(sp)
  148bcc:	dfc00315 	stw	ra,12(sp)
  148bd0:	2021883a 	mov	r16,r4
  148bd4:	20000226 	beq	r4,zero,148be0 <_putc_r+0x1c>
  148bd8:	20800e17 	ldw	r2,56(r4)
  148bdc:	10001b26 	beq	r2,zero,148c4c <_putc_r+0x88>
  148be0:	30800217 	ldw	r2,8(r6)
  148be4:	10bfffc4 	addi	r2,r2,-1
  148be8:	30800215 	stw	r2,8(r6)
  148bec:	10000a16 	blt	r2,zero,148c18 <_putc_r+0x54>
  148bf0:	30800017 	ldw	r2,0(r6)
  148bf4:	11400005 	stb	r5,0(r2)
  148bf8:	30800017 	ldw	r2,0(r6)
  148bfc:	10c00044 	addi	r3,r2,1
  148c00:	30c00015 	stw	r3,0(r6)
  148c04:	10800003 	ldbu	r2,0(r2)
  148c08:	dfc00317 	ldw	ra,12(sp)
  148c0c:	dc000217 	ldw	r16,8(sp)
  148c10:	dec00404 	addi	sp,sp,16
  148c14:	f800283a 	ret
  148c18:	30c00617 	ldw	r3,24(r6)
  148c1c:	10c00616 	blt	r2,r3,148c38 <_putc_r+0x74>
  148c20:	30800017 	ldw	r2,0(r6)
  148c24:	00c00284 	movi	r3,10
  148c28:	11400005 	stb	r5,0(r2)
  148c2c:	30800017 	ldw	r2,0(r6)
  148c30:	11400003 	ldbu	r5,0(r2)
  148c34:	28fff11e 	bne	r5,r3,148bfc <_putc_r+0x38>
  148c38:	8009883a 	mov	r4,r16
  148c3c:	dfc00317 	ldw	ra,12(sp)
  148c40:	dc000217 	ldw	r16,8(sp)
  148c44:	dec00404 	addi	sp,sp,16
  148c48:	014a8e81 	jmpi	14a8e8 <__swbuf_r>
  148c4c:	d9400015 	stw	r5,0(sp)
  148c50:	d9800115 	stw	r6,4(sp)
  148c54:	01461b80 	call	1461b8 <__sinit>
  148c58:	d9800117 	ldw	r6,4(sp)
  148c5c:	d9400017 	ldw	r5,0(sp)
  148c60:	003fdf06 	br	148be0 <_putc_r+0x1c>

00148c64 <putc>:
  148c64:	defffc04 	addi	sp,sp,-16
  148c68:	dc400115 	stw	r17,4(sp)
  148c6c:	04400574 	movhi	r17,21
  148c70:	8c4bab04 	addi	r17,r17,11948
  148c74:	88800017 	ldw	r2,0(r17)
  148c78:	dc800215 	stw	r18,8(sp)
  148c7c:	dc000015 	stw	r16,0(sp)
  148c80:	dfc00315 	stw	ra,12(sp)
  148c84:	2025883a 	mov	r18,r4
  148c88:	2821883a 	mov	r16,r5
  148c8c:	10000226 	beq	r2,zero,148c98 <putc+0x34>
  148c90:	10c00e17 	ldw	r3,56(r2)
  148c94:	18001a26 	beq	r3,zero,148d00 <putc+0x9c>
  148c98:	80800217 	ldw	r2,8(r16)
  148c9c:	10bfffc4 	addi	r2,r2,-1
  148ca0:	80800215 	stw	r2,8(r16)
  148ca4:	10000c16 	blt	r2,zero,148cd8 <putc+0x74>
  148ca8:	80800017 	ldw	r2,0(r16)
  148cac:	14800005 	stb	r18,0(r2)
  148cb0:	80800017 	ldw	r2,0(r16)
  148cb4:	10c00044 	addi	r3,r2,1
  148cb8:	80c00015 	stw	r3,0(r16)
  148cbc:	10800003 	ldbu	r2,0(r2)
  148cc0:	dfc00317 	ldw	ra,12(sp)
  148cc4:	dc800217 	ldw	r18,8(sp)
  148cc8:	dc400117 	ldw	r17,4(sp)
  148ccc:	dc000017 	ldw	r16,0(sp)
  148cd0:	dec00404 	addi	sp,sp,16
  148cd4:	f800283a 	ret
  148cd8:	80c00617 	ldw	r3,24(r16)
  148cdc:	10c00b16 	blt	r2,r3,148d0c <putc+0xa8>
  148ce0:	80800017 	ldw	r2,0(r16)
  148ce4:	00c00284 	movi	r3,10
  148ce8:	14800005 	stb	r18,0(r2)
  148cec:	80800017 	ldw	r2,0(r16)
  148cf0:	11400003 	ldbu	r5,0(r2)
  148cf4:	28ffef1e 	bne	r5,r3,148cb4 <putc+0x50>
  148cf8:	89000017 	ldw	r4,0(r17)
  148cfc:	00000506 	br	148d14 <putc+0xb0>
  148d00:	1009883a 	mov	r4,r2
  148d04:	01461b80 	call	1461b8 <__sinit>
  148d08:	003fe306 	br	148c98 <putc+0x34>
  148d0c:	89000017 	ldw	r4,0(r17)
  148d10:	900b883a 	mov	r5,r18
  148d14:	800d883a 	mov	r6,r16
  148d18:	dfc00317 	ldw	ra,12(sp)
  148d1c:	dc800217 	ldw	r18,8(sp)
  148d20:	dc400117 	ldw	r17,4(sp)
  148d24:	dc000017 	ldw	r16,0(sp)
  148d28:	dec00404 	addi	sp,sp,16
  148d2c:	014a8e81 	jmpi	14a8e8 <__swbuf_r>

00148d30 <_realloc_r>:
  148d30:	defff604 	addi	sp,sp,-40
  148d34:	dd000415 	stw	r20,16(sp)
  148d38:	dc000015 	stw	r16,0(sp)
  148d3c:	dfc00915 	stw	ra,36(sp)
  148d40:	df000815 	stw	fp,32(sp)
  148d44:	ddc00715 	stw	r23,28(sp)
  148d48:	dd800615 	stw	r22,24(sp)
  148d4c:	dd400515 	stw	r21,20(sp)
  148d50:	dcc00315 	stw	r19,12(sp)
  148d54:	dc800215 	stw	r18,8(sp)
  148d58:	dc400115 	stw	r17,4(sp)
  148d5c:	2821883a 	mov	r16,r5
  148d60:	3029883a 	mov	r20,r6
  148d64:	28009a26 	beq	r5,zero,148fd0 <_realloc_r+0x2a0>
  148d68:	202b883a 	mov	r21,r4
  148d6c:	014e9280 	call	14e928 <__malloc_lock>
  148d70:	80ffff17 	ldw	r3,-4(r16)
  148d74:	047fff04 	movi	r17,-4
  148d78:	a08002c4 	addi	r2,r20,11
  148d7c:	01000584 	movi	r4,22
  148d80:	84fffe04 	addi	r19,r16,-8
  148d84:	1c62703a 	and	r17,r3,r17
  148d88:	2080372e 	bgeu	r4,r2,148e68 <_realloc_r+0x138>
  148d8c:	04bffe04 	movi	r18,-8
  148d90:	14a4703a 	and	r18,r2,r18
  148d94:	9005883a 	mov	r2,r18
  148d98:	90005b16 	blt	r18,zero,148f08 <_realloc_r+0x1d8>
  148d9c:	95005a36 	bltu	r18,r20,148f08 <_realloc_r+0x1d8>
  148da0:	8880340e 	bge	r17,r2,148e74 <_realloc_r+0x144>
  148da4:	05c00574 	movhi	r23,21
  148da8:	bdc62604 	addi	r23,r23,6296
  148dac:	b9000217 	ldw	r4,8(r23)
  148db0:	9c4b883a 	add	r5,r19,r17
  148db4:	21409626 	beq	r4,r5,149010 <_realloc_r+0x2e0>
  148db8:	29800117 	ldw	r6,4(r5)
  148dbc:	01ffff84 	movi	r7,-2
  148dc0:	31ce703a 	and	r7,r6,r7
  148dc4:	29cf883a 	add	r7,r5,r7
  148dc8:	39c00117 	ldw	r7,4(r7)
  148dcc:	39c0004c 	andi	r7,r7,1
  148dd0:	38004226 	beq	r7,zero,148edc <_realloc_r+0x1ac>
  148dd4:	000d883a 	mov	r6,zero
  148dd8:	000b883a 	mov	r5,zero
  148ddc:	18c0004c 	andi	r3,r3,1
  148de0:	18005c1e 	bne	r3,zero,148f54 <_realloc_r+0x224>
  148de4:	85bffe17 	ldw	r22,-8(r16)
  148de8:	00ffff04 	movi	r3,-4
  148dec:	9dadc83a 	sub	r22,r19,r22
  148df0:	b1c00117 	ldw	r7,4(r22)
  148df4:	38c6703a 	and	r3,r7,r3
  148df8:	28005426 	beq	r5,zero,148f4c <_realloc_r+0x21c>
  148dfc:	1c47883a 	add	r3,r3,r17
  148e00:	2900bf26 	beq	r5,r4,149100 <_realloc_r+0x3d0>
  148e04:	30ef883a 	add	r23,r6,r3
  148e08:	b8807e16 	blt	r23,r2,149004 <_realloc_r+0x2d4>
  148e0c:	28800317 	ldw	r2,12(r5)
  148e10:	28c00217 	ldw	r3,8(r5)
  148e14:	89bfff04 	addi	r6,r17,-4
  148e18:	01000904 	movi	r4,36
  148e1c:	18800315 	stw	r2,12(r3)
  148e20:	10c00215 	stw	r3,8(r2)
  148e24:	b1400217 	ldw	r5,8(r22)
  148e28:	b0c00317 	ldw	r3,12(r22)
  148e2c:	b5000204 	addi	r20,r22,8
  148e30:	28c00315 	stw	r3,12(r5)
  148e34:	19400215 	stw	r5,8(r3)
  148e38:	21808536 	bltu	r4,r6,149050 <_realloc_r+0x320>
  148e3c:	008004c4 	movi	r2,19
  148e40:	1180932e 	bgeu	r2,r6,149090 <_realloc_r+0x360>
  148e44:	80800017 	ldw	r2,0(r16)
  148e48:	b0800215 	stw	r2,8(r22)
  148e4c:	80800117 	ldw	r2,4(r16)
  148e50:	b0800315 	stw	r2,12(r22)
  148e54:	008006c4 	movi	r2,27
  148e58:	1180df36 	bltu	r2,r6,1491d8 <_realloc_r+0x4a8>
  148e5c:	b0c00404 	addi	r3,r22,16
  148e60:	84000204 	addi	r16,r16,8
  148e64:	00008b06 	br	149094 <_realloc_r+0x364>
  148e68:	00800404 	movi	r2,16
  148e6c:	1025883a 	mov	r18,r2
  148e70:	003fca06 	br	148d9c <_realloc_r+0x6c>
  148e74:	8029883a 	mov	r20,r16
  148e78:	8c8dc83a 	sub	r6,r17,r18
  148e7c:	008003c4 	movi	r2,15
  148e80:	18c0004c 	andi	r3,r3,1
  148e84:	11802436 	bltu	r2,r6,148f18 <_realloc_r+0x1e8>
  148e88:	1c46b03a 	or	r3,r3,r17
  148e8c:	98c00115 	stw	r3,4(r19)
  148e90:	9c63883a 	add	r17,r19,r17
  148e94:	88800117 	ldw	r2,4(r17)
  148e98:	10800054 	ori	r2,r2,1
  148e9c:	88800115 	stw	r2,4(r17)
  148ea0:	a809883a 	mov	r4,r21
  148ea4:	014e9480 	call	14e948 <__malloc_unlock>
  148ea8:	a005883a 	mov	r2,r20
  148eac:	dfc00917 	ldw	ra,36(sp)
  148eb0:	df000817 	ldw	fp,32(sp)
  148eb4:	ddc00717 	ldw	r23,28(sp)
  148eb8:	dd800617 	ldw	r22,24(sp)
  148ebc:	dd400517 	ldw	r21,20(sp)
  148ec0:	dd000417 	ldw	r20,16(sp)
  148ec4:	dcc00317 	ldw	r19,12(sp)
  148ec8:	dc800217 	ldw	r18,8(sp)
  148ecc:	dc400117 	ldw	r17,4(sp)
  148ed0:	dc000017 	ldw	r16,0(sp)
  148ed4:	dec00a04 	addi	sp,sp,40
  148ed8:	f800283a 	ret
  148edc:	01ffff04 	movi	r7,-4
  148ee0:	31cc703a 	and	r6,r6,r7
  148ee4:	344f883a 	add	r7,r6,r17
  148ee8:	38bfbc16 	blt	r7,r2,148ddc <_realloc_r+0xac>
  148eec:	28800317 	ldw	r2,12(r5)
  148ef0:	29000217 	ldw	r4,8(r5)
  148ef4:	8029883a 	mov	r20,r16
  148ef8:	3823883a 	mov	r17,r7
  148efc:	20800315 	stw	r2,12(r4)
  148f00:	11000215 	stw	r4,8(r2)
  148f04:	003fdc06 	br	148e78 <_realloc_r+0x148>
  148f08:	00800304 	movi	r2,12
  148f0c:	a8800015 	stw	r2,0(r21)
  148f10:	0005883a 	mov	r2,zero
  148f14:	003fe506 	br	148eac <_realloc_r+0x17c>
  148f18:	1c86b03a 	or	r3,r3,r18
  148f1c:	9c8b883a 	add	r5,r19,r18
  148f20:	98c00115 	stw	r3,4(r19)
  148f24:	30800054 	ori	r2,r6,1
  148f28:	28800115 	stw	r2,4(r5)
  148f2c:	298d883a 	add	r6,r5,r6
  148f30:	30800117 	ldw	r2,4(r6)
  148f34:	a809883a 	mov	r4,r21
  148f38:	29400204 	addi	r5,r5,8
  148f3c:	10800054 	ori	r2,r2,1
  148f40:	30800115 	stw	r2,4(r6)
  148f44:	01465ec0 	call	1465ec <_free_r>
  148f48:	003fd506 	br	148ea0 <_realloc_r+0x170>
  148f4c:	1c6f883a 	add	r23,r3,r17
  148f50:	b880370e 	bge	r23,r2,149030 <_realloc_r+0x300>
  148f54:	a00b883a 	mov	r5,r20
  148f58:	a809883a 	mov	r4,r21
  148f5c:	01471500 	call	147150 <_malloc_r>
  148f60:	1029883a 	mov	r20,r2
  148f64:	1000c026 	beq	r2,zero,149268 <_realloc_r+0x538>
  148f68:	80ffff17 	ldw	r3,-4(r16)
  148f6c:	113ffe04 	addi	r4,r2,-8
  148f70:	00bfff84 	movi	r2,-2
  148f74:	1884703a 	and	r2,r3,r2
  148f78:	9885883a 	add	r2,r19,r2
  148f7c:	20809026 	beq	r4,r2,1491c0 <_realloc_r+0x490>
  148f80:	89bfff04 	addi	r6,r17,-4
  148f84:	00800904 	movi	r2,36
  148f88:	11805936 	bltu	r2,r6,1490f0 <_realloc_r+0x3c0>
  148f8c:	00c004c4 	movi	r3,19
  148f90:	19803636 	bltu	r3,r6,14906c <_realloc_r+0x33c>
  148f94:	a005883a 	mov	r2,r20
  148f98:	8007883a 	mov	r3,r16
  148f9c:	19000017 	ldw	r4,0(r3)
  148fa0:	11000015 	stw	r4,0(r2)
  148fa4:	19000117 	ldw	r4,4(r3)
  148fa8:	11000115 	stw	r4,4(r2)
  148fac:	18c00217 	ldw	r3,8(r3)
  148fb0:	10c00215 	stw	r3,8(r2)
  148fb4:	800b883a 	mov	r5,r16
  148fb8:	a809883a 	mov	r4,r21
  148fbc:	01465ec0 	call	1465ec <_free_r>
  148fc0:	a809883a 	mov	r4,r21
  148fc4:	014e9480 	call	14e948 <__malloc_unlock>
  148fc8:	a005883a 	mov	r2,r20
  148fcc:	003fb706 	br	148eac <_realloc_r+0x17c>
  148fd0:	300b883a 	mov	r5,r6
  148fd4:	dfc00917 	ldw	ra,36(sp)
  148fd8:	df000817 	ldw	fp,32(sp)
  148fdc:	ddc00717 	ldw	r23,28(sp)
  148fe0:	dd800617 	ldw	r22,24(sp)
  148fe4:	dd400517 	ldw	r21,20(sp)
  148fe8:	dd000417 	ldw	r20,16(sp)
  148fec:	dcc00317 	ldw	r19,12(sp)
  148ff0:	dc800217 	ldw	r18,8(sp)
  148ff4:	dc400117 	ldw	r17,4(sp)
  148ff8:	dc000017 	ldw	r16,0(sp)
  148ffc:	dec00a04 	addi	sp,sp,40
  149000:	01471501 	jmpi	147150 <_malloc_r>
  149004:	182f883a 	mov	r23,r3
  149008:	b8bfd216 	blt	r23,r2,148f54 <_realloc_r+0x224>
  14900c:	00000806 	br	149030 <_realloc_r+0x300>
  149010:	21800117 	ldw	r6,4(r4)
  149014:	017fff04 	movi	r5,-4
  149018:	91c00404 	addi	r7,r18,16
  14901c:	314c703a 	and	r6,r6,r5
  149020:	344b883a 	add	r5,r6,r17
  149024:	29c0250e 	bge	r5,r7,1490bc <_realloc_r+0x38c>
  149028:	200b883a 	mov	r5,r4
  14902c:	003f6b06 	br	148ddc <_realloc_r+0xac>
  149030:	b0800317 	ldw	r2,12(r22)
  149034:	b0c00217 	ldw	r3,8(r22)
  149038:	89bfff04 	addi	r6,r17,-4
  14903c:	01000904 	movi	r4,36
  149040:	18800315 	stw	r2,12(r3)
  149044:	10c00215 	stw	r3,8(r2)
  149048:	b5000204 	addi	r20,r22,8
  14904c:	21bf7b2e 	bgeu	r4,r6,148e3c <_realloc_r+0x10c>
  149050:	a009883a 	mov	r4,r20
  149054:	800b883a 	mov	r5,r16
  149058:	01479fc0 	call	1479fc <memmove>
  14905c:	b0c00117 	ldw	r3,4(r22)
  149060:	b823883a 	mov	r17,r23
  149064:	b027883a 	mov	r19,r22
  149068:	003f8306 	br	148e78 <_realloc_r+0x148>
  14906c:	80c00017 	ldw	r3,0(r16)
  149070:	a0c00015 	stw	r3,0(r20)
  149074:	80c00117 	ldw	r3,4(r16)
  149078:	a0c00115 	stw	r3,4(r20)
  14907c:	00c006c4 	movi	r3,27
  149080:	19804736 	bltu	r3,r6,1491a0 <_realloc_r+0x470>
  149084:	a0800204 	addi	r2,r20,8
  149088:	80c00204 	addi	r3,r16,8
  14908c:	003fc306 	br	148f9c <_realloc_r+0x26c>
  149090:	a007883a 	mov	r3,r20
  149094:	80800017 	ldw	r2,0(r16)
  149098:	b823883a 	mov	r17,r23
  14909c:	b027883a 	mov	r19,r22
  1490a0:	18800015 	stw	r2,0(r3)
  1490a4:	80800117 	ldw	r2,4(r16)
  1490a8:	18800115 	stw	r2,4(r3)
  1490ac:	80800217 	ldw	r2,8(r16)
  1490b0:	18800215 	stw	r2,8(r3)
  1490b4:	b0c00117 	ldw	r3,4(r22)
  1490b8:	003f6f06 	br	148e78 <_realloc_r+0x148>
  1490bc:	9ca7883a 	add	r19,r19,r18
  1490c0:	2c85c83a 	sub	r2,r5,r18
  1490c4:	bcc00215 	stw	r19,8(r23)
  1490c8:	10800054 	ori	r2,r2,1
  1490cc:	98800115 	stw	r2,4(r19)
  1490d0:	80bfff17 	ldw	r2,-4(r16)
  1490d4:	a809883a 	mov	r4,r21
  1490d8:	1080004c 	andi	r2,r2,1
  1490dc:	90a4b03a 	or	r18,r18,r2
  1490e0:	84bfff15 	stw	r18,-4(r16)
  1490e4:	014e9480 	call	14e948 <__malloc_unlock>
  1490e8:	8005883a 	mov	r2,r16
  1490ec:	003f6f06 	br	148eac <_realloc_r+0x17c>
  1490f0:	a009883a 	mov	r4,r20
  1490f4:	800b883a 	mov	r5,r16
  1490f8:	01479fc0 	call	1479fc <memmove>
  1490fc:	003fad06 	br	148fb4 <_realloc_r+0x284>
  149100:	30f9883a 	add	fp,r6,r3
  149104:	91000404 	addi	r4,r18,16
  149108:	e13fbe16 	blt	fp,r4,149004 <_realloc_r+0x2d4>
  14910c:	b0800317 	ldw	r2,12(r22)
  149110:	b0c00217 	ldw	r3,8(r22)
  149114:	89bfff04 	addi	r6,r17,-4
  149118:	01000904 	movi	r4,36
  14911c:	18800315 	stw	r2,12(r3)
  149120:	10c00215 	stw	r3,8(r2)
  149124:	b4400204 	addi	r17,r22,8
  149128:	21804336 	bltu	r4,r6,149238 <_realloc_r+0x508>
  14912c:	008004c4 	movi	r2,19
  149130:	11803f2e 	bgeu	r2,r6,149230 <_realloc_r+0x500>
  149134:	80800017 	ldw	r2,0(r16)
  149138:	b0800215 	stw	r2,8(r22)
  14913c:	80800117 	ldw	r2,4(r16)
  149140:	b0800315 	stw	r2,12(r22)
  149144:	008006c4 	movi	r2,27
  149148:	11803f36 	bltu	r2,r6,149248 <_realloc_r+0x518>
  14914c:	b0c00404 	addi	r3,r22,16
  149150:	84000204 	addi	r16,r16,8
  149154:	80800017 	ldw	r2,0(r16)
  149158:	18800015 	stw	r2,0(r3)
  14915c:	80800117 	ldw	r2,4(r16)
  149160:	18800115 	stw	r2,4(r3)
  149164:	80800217 	ldw	r2,8(r16)
  149168:	18800215 	stw	r2,8(r3)
  14916c:	b487883a 	add	r3,r22,r18
  149170:	e485c83a 	sub	r2,fp,r18
  149174:	b8c00215 	stw	r3,8(r23)
  149178:	10800054 	ori	r2,r2,1
  14917c:	18800115 	stw	r2,4(r3)
  149180:	b0800117 	ldw	r2,4(r22)
  149184:	a809883a 	mov	r4,r21
  149188:	1080004c 	andi	r2,r2,1
  14918c:	90a4b03a 	or	r18,r18,r2
  149190:	b4800115 	stw	r18,4(r22)
  149194:	014e9480 	call	14e948 <__malloc_unlock>
  149198:	8805883a 	mov	r2,r17
  14919c:	003f4306 	br	148eac <_realloc_r+0x17c>
  1491a0:	80c00217 	ldw	r3,8(r16)
  1491a4:	a0c00215 	stw	r3,8(r20)
  1491a8:	80c00317 	ldw	r3,12(r16)
  1491ac:	a0c00315 	stw	r3,12(r20)
  1491b0:	30801126 	beq	r6,r2,1491f8 <_realloc_r+0x4c8>
  1491b4:	a0800404 	addi	r2,r20,16
  1491b8:	80c00404 	addi	r3,r16,16
  1491bc:	003f7706 	br	148f9c <_realloc_r+0x26c>
  1491c0:	a13fff17 	ldw	r4,-4(r20)
  1491c4:	00bfff04 	movi	r2,-4
  1491c8:	8029883a 	mov	r20,r16
  1491cc:	2084703a 	and	r2,r4,r2
  1491d0:	88a3883a 	add	r17,r17,r2
  1491d4:	003f2806 	br	148e78 <_realloc_r+0x148>
  1491d8:	80800217 	ldw	r2,8(r16)
  1491dc:	b0800415 	stw	r2,16(r22)
  1491e0:	80800317 	ldw	r2,12(r16)
  1491e4:	b0800515 	stw	r2,20(r22)
  1491e8:	31000a26 	beq	r6,r4,149214 <_realloc_r+0x4e4>
  1491ec:	b0c00604 	addi	r3,r22,24
  1491f0:	84000404 	addi	r16,r16,16
  1491f4:	003fa706 	br	149094 <_realloc_r+0x364>
  1491f8:	81000417 	ldw	r4,16(r16)
  1491fc:	a0800604 	addi	r2,r20,24
  149200:	80c00604 	addi	r3,r16,24
  149204:	a1000415 	stw	r4,16(r20)
  149208:	81000517 	ldw	r4,20(r16)
  14920c:	a1000515 	stw	r4,20(r20)
  149210:	003f6206 	br	148f9c <_realloc_r+0x26c>
  149214:	80800417 	ldw	r2,16(r16)
  149218:	84000604 	addi	r16,r16,24
  14921c:	b0c00804 	addi	r3,r22,32
  149220:	b0800615 	stw	r2,24(r22)
  149224:	80bfff17 	ldw	r2,-4(r16)
  149228:	b0800715 	stw	r2,28(r22)
  14922c:	003f9906 	br	149094 <_realloc_r+0x364>
  149230:	8807883a 	mov	r3,r17
  149234:	003fc706 	br	149154 <_realloc_r+0x424>
  149238:	8809883a 	mov	r4,r17
  14923c:	800b883a 	mov	r5,r16
  149240:	01479fc0 	call	1479fc <memmove>
  149244:	003fc906 	br	14916c <_realloc_r+0x43c>
  149248:	80800217 	ldw	r2,8(r16)
  14924c:	b0800415 	stw	r2,16(r22)
  149250:	80800317 	ldw	r2,12(r16)
  149254:	b0800515 	stw	r2,20(r22)
  149258:	31000726 	beq	r6,r4,149278 <_realloc_r+0x548>
  14925c:	b0c00604 	addi	r3,r22,24
  149260:	84000404 	addi	r16,r16,16
  149264:	003fbb06 	br	149154 <_realloc_r+0x424>
  149268:	a809883a 	mov	r4,r21
  14926c:	014e9480 	call	14e948 <__malloc_unlock>
  149270:	0005883a 	mov	r2,zero
  149274:	003f0d06 	br	148eac <_realloc_r+0x17c>
  149278:	80800417 	ldw	r2,16(r16)
  14927c:	84000604 	addi	r16,r16,24
  149280:	b0c00804 	addi	r3,r22,32
  149284:	b0800615 	stw	r2,24(r22)
  149288:	80bfff17 	ldw	r2,-4(r16)
  14928c:	b0800715 	stw	r2,28(r22)
  149290:	003fb006 	br	149154 <_realloc_r+0x424>

00149294 <__fpclassifyd>:
  149294:	00a00034 	movhi	r2,32768
  149298:	10bfffc4 	addi	r2,r2,-1
  14929c:	288a703a 	and	r5,r5,r2
  1492a0:	28000726 	beq	r5,zero,1492c0 <__fpclassifyd+0x2c>
  1492a4:	00bffc34 	movhi	r2,65520
  1492a8:	2885883a 	add	r2,r5,r2
  1492ac:	00dff834 	movhi	r3,32736
  1492b0:	18ffffc4 	addi	r3,r3,-1
  1492b4:	18800636 	bltu	r3,r2,1492d0 <__fpclassifyd+0x3c>
  1492b8:	00800104 	movi	r2,4
  1492bc:	f800283a 	ret
  1492c0:	2005003a 	cmpeq	r2,r4,zero
  1492c4:	00c000c4 	movi	r3,3
  1492c8:	1885c83a 	sub	r2,r3,r2
  1492cc:	f800283a 	ret
  1492d0:	00800434 	movhi	r2,16
  1492d4:	10bfffc4 	addi	r2,r2,-1
  1492d8:	11400236 	bltu	r2,r5,1492e4 <__fpclassifyd+0x50>
  1492dc:	008000c4 	movi	r2,3
  1492e0:	f800283a 	ret
  1492e4:	009ffc34 	movhi	r2,32752
  1492e8:	28800226 	beq	r5,r2,1492f4 <__fpclassifyd+0x60>
  1492ec:	0005883a 	mov	r2,zero
  1492f0:	f800283a 	ret
  1492f4:	2005003a 	cmpeq	r2,r4,zero
  1492f8:	f800283a 	ret

001492fc <_sbrk_r>:
  1492fc:	defffd04 	addi	sp,sp,-12
  149300:	dc400115 	stw	r17,4(sp)
  149304:	dc000015 	stw	r16,0(sp)
  149308:	2023883a 	mov	r17,r4
  14930c:	04000574 	movhi	r16,21
  149310:	840bc004 	addi	r16,r16,12032
  149314:	2809883a 	mov	r4,r5
  149318:	dfc00215 	stw	ra,8(sp)
  14931c:	80000015 	stw	zero,0(r16)
  149320:	014eb080 	call	14eb08 <sbrk>
  149324:	00ffffc4 	movi	r3,-1
  149328:	10c00526 	beq	r2,r3,149340 <_sbrk_r+0x44>
  14932c:	dfc00217 	ldw	ra,8(sp)
  149330:	dc400117 	ldw	r17,4(sp)
  149334:	dc000017 	ldw	r16,0(sp)
  149338:	dec00304 	addi	sp,sp,12
  14933c:	f800283a 	ret
  149340:	80c00017 	ldw	r3,0(r16)
  149344:	183ff926 	beq	r3,zero,14932c <_sbrk_r+0x30>
  149348:	88c00015 	stw	r3,0(r17)
  14934c:	dfc00217 	ldw	ra,8(sp)
  149350:	dc400117 	ldw	r17,4(sp)
  149354:	dc000017 	ldw	r16,0(sp)
  149358:	dec00304 	addi	sp,sp,12
  14935c:	f800283a 	ret

00149360 <__sread>:
  149360:	defffe04 	addi	sp,sp,-8
  149364:	dc000015 	stw	r16,0(sp)
  149368:	2821883a 	mov	r16,r5
  14936c:	2940038f 	ldh	r5,14(r5)
  149370:	dfc00115 	stw	ra,4(sp)
  149374:	014b0880 	call	14b088 <_read_r>
  149378:	10000716 	blt	r2,zero,149398 <__sread+0x38>
  14937c:	80c01417 	ldw	r3,80(r16)
  149380:	1887883a 	add	r3,r3,r2
  149384:	80c01415 	stw	r3,80(r16)
  149388:	dfc00117 	ldw	ra,4(sp)
  14938c:	dc000017 	ldw	r16,0(sp)
  149390:	dec00204 	addi	sp,sp,8
  149394:	f800283a 	ret
  149398:	80c0030b 	ldhu	r3,12(r16)
  14939c:	18fbffcc 	andi	r3,r3,61439
  1493a0:	80c0030d 	sth	r3,12(r16)
  1493a4:	dfc00117 	ldw	ra,4(sp)
  1493a8:	dc000017 	ldw	r16,0(sp)
  1493ac:	dec00204 	addi	sp,sp,8
  1493b0:	f800283a 	ret

001493b4 <__seofread>:
  1493b4:	0005883a 	mov	r2,zero
  1493b8:	f800283a 	ret

001493bc <__swrite>:
  1493bc:	2880030b 	ldhu	r2,12(r5)
  1493c0:	defffb04 	addi	sp,sp,-20
  1493c4:	dcc00315 	stw	r19,12(sp)
  1493c8:	dc800215 	stw	r18,8(sp)
  1493cc:	dc400115 	stw	r17,4(sp)
  1493d0:	dc000015 	stw	r16,0(sp)
  1493d4:	dfc00415 	stw	ra,16(sp)
  1493d8:	10c0400c 	andi	r3,r2,256
  1493dc:	2821883a 	mov	r16,r5
  1493e0:	2027883a 	mov	r19,r4
  1493e4:	3025883a 	mov	r18,r6
  1493e8:	3823883a 	mov	r17,r7
  1493ec:	18000526 	beq	r3,zero,149404 <__swrite+0x48>
  1493f0:	2940038f 	ldh	r5,14(r5)
  1493f4:	000d883a 	mov	r6,zero
  1493f8:	01c00084 	movi	r7,2
  1493fc:	014b01c0 	call	14b01c <_lseek_r>
  149400:	8080030b 	ldhu	r2,12(r16)
  149404:	8140038f 	ldh	r5,14(r16)
  149408:	10bbffcc 	andi	r2,r2,61439
  14940c:	9809883a 	mov	r4,r19
  149410:	900d883a 	mov	r6,r18
  149414:	880f883a 	mov	r7,r17
  149418:	8080030d 	sth	r2,12(r16)
  14941c:	dfc00417 	ldw	ra,16(sp)
  149420:	dcc00317 	ldw	r19,12(sp)
  149424:	dc800217 	ldw	r18,8(sp)
  149428:	dc400117 	ldw	r17,4(sp)
  14942c:	dc000017 	ldw	r16,0(sp)
  149430:	dec00504 	addi	sp,sp,20
  149434:	014aa841 	jmpi	14aa84 <_write_r>

00149438 <__sseek>:
  149438:	defffe04 	addi	sp,sp,-8
  14943c:	dc000015 	stw	r16,0(sp)
  149440:	2821883a 	mov	r16,r5
  149444:	2940038f 	ldh	r5,14(r5)
  149448:	dfc00115 	stw	ra,4(sp)
  14944c:	014b01c0 	call	14b01c <_lseek_r>
  149450:	00ffffc4 	movi	r3,-1
  149454:	10c00826 	beq	r2,r3,149478 <__sseek+0x40>
  149458:	80c0030b 	ldhu	r3,12(r16)
  14945c:	80801415 	stw	r2,80(r16)
  149460:	18c40014 	ori	r3,r3,4096
  149464:	80c0030d 	sth	r3,12(r16)
  149468:	dfc00117 	ldw	ra,4(sp)
  14946c:	dc000017 	ldw	r16,0(sp)
  149470:	dec00204 	addi	sp,sp,8
  149474:	f800283a 	ret
  149478:	80c0030b 	ldhu	r3,12(r16)
  14947c:	18fbffcc 	andi	r3,r3,61439
  149480:	80c0030d 	sth	r3,12(r16)
  149484:	dfc00117 	ldw	ra,4(sp)
  149488:	dc000017 	ldw	r16,0(sp)
  14948c:	dec00204 	addi	sp,sp,8
  149490:	f800283a 	ret

00149494 <__sclose>:
  149494:	2940038f 	ldh	r5,14(r5)
  149498:	014aaf01 	jmpi	14aaf0 <_close_r>

0014949c <strcmp>:
  14949c:	2144b03a 	or	r2,r4,r5
  1494a0:	108000cc 	andi	r2,r2,3
  1494a4:	1000171e 	bne	r2,zero,149504 <strcmp+0x68>
  1494a8:	20800017 	ldw	r2,0(r4)
  1494ac:	28c00017 	ldw	r3,0(r5)
  1494b0:	10c0141e 	bne	r2,r3,149504 <strcmp+0x68>
  1494b4:	027fbff4 	movhi	r9,65279
  1494b8:	4a7fbfc4 	addi	r9,r9,-257
  1494bc:	1247883a 	add	r3,r2,r9
  1494c0:	0084303a 	nor	r2,zero,r2
  1494c4:	1884703a 	and	r2,r3,r2
  1494c8:	02202074 	movhi	r8,32897
  1494cc:	42202004 	addi	r8,r8,-32640
  1494d0:	1204703a 	and	r2,r2,r8
  1494d4:	10000226 	beq	r2,zero,1494e0 <strcmp+0x44>
  1494d8:	00001706 	br	149538 <strcmp+0x9c>
  1494dc:	3000161e 	bne	r6,zero,149538 <strcmp+0x9c>
  1494e0:	21000104 	addi	r4,r4,4
  1494e4:	20800017 	ldw	r2,0(r4)
  1494e8:	29400104 	addi	r5,r5,4
  1494ec:	28c00017 	ldw	r3,0(r5)
  1494f0:	124f883a 	add	r7,r2,r9
  1494f4:	008c303a 	nor	r6,zero,r2
  1494f8:	398c703a 	and	r6,r7,r6
  1494fc:	320c703a 	and	r6,r6,r8
  149500:	10fff626 	beq	r2,r3,1494dc <strcmp+0x40>
  149504:	20800007 	ldb	r2,0(r4)
  149508:	1000051e 	bne	r2,zero,149520 <strcmp+0x84>
  14950c:	00000606 	br	149528 <strcmp+0x8c>
  149510:	21000044 	addi	r4,r4,1
  149514:	20800007 	ldb	r2,0(r4)
  149518:	29400044 	addi	r5,r5,1
  14951c:	10000226 	beq	r2,zero,149528 <strcmp+0x8c>
  149520:	28c00007 	ldb	r3,0(r5)
  149524:	10fffa26 	beq	r2,r3,149510 <strcmp+0x74>
  149528:	20c00003 	ldbu	r3,0(r4)
  14952c:	28800003 	ldbu	r2,0(r5)
  149530:	1885c83a 	sub	r2,r3,r2
  149534:	f800283a 	ret
  149538:	0005883a 	mov	r2,zero
  14953c:	f800283a 	ret

00149540 <__sprint_r.part.0>:
  149540:	28801917 	ldw	r2,100(r5)
  149544:	defff604 	addi	sp,sp,-40
  149548:	dd800615 	stw	r22,24(sp)
  14954c:	dcc00315 	stw	r19,12(sp)
  149550:	dfc00915 	stw	ra,36(sp)
  149554:	df000815 	stw	fp,32(sp)
  149558:	ddc00715 	stw	r23,28(sp)
  14955c:	dd400515 	stw	r21,20(sp)
  149560:	dd000415 	stw	r20,16(sp)
  149564:	dc800215 	stw	r18,8(sp)
  149568:	dc400115 	stw	r17,4(sp)
  14956c:	dc000015 	stw	r16,0(sp)
  149570:	1088000c 	andi	r2,r2,8192
  149574:	2827883a 	mov	r19,r5
  149578:	302d883a 	mov	r22,r6
  14957c:	10002d26 	beq	r2,zero,149634 <__sprint_r.part.0+0xf4>
  149580:	30800217 	ldw	r2,8(r6)
  149584:	35c00017 	ldw	r23,0(r6)
  149588:	10002826 	beq	r2,zero,14962c <__sprint_r.part.0+0xec>
  14958c:	202b883a 	mov	r21,r4
  149590:	bf000104 	addi	fp,r23,4
  149594:	053fffc4 	movi	r20,-1
  149598:	e4800017 	ldw	r18,0(fp)
  14959c:	bc400017 	ldw	r17,0(r23)
  1495a0:	0021883a 	mov	r16,zero
  1495a4:	9024d0ba 	srli	r18,r18,2
  1495a8:	04800316 	blt	zero,r18,1495b8 <__sprint_r.part.0+0x78>
  1495ac:	00001806 	br	149610 <__sprint_r.part.0+0xd0>
  1495b0:	8c400104 	addi	r17,r17,4
  1495b4:	94001526 	beq	r18,r16,14960c <__sprint_r.part.0+0xcc>
  1495b8:	89400017 	ldw	r5,0(r17)
  1495bc:	a809883a 	mov	r4,r21
  1495c0:	980d883a 	mov	r6,r19
  1495c4:	014ad540 	call	14ad54 <_fputwc_r>
  1495c8:	84000044 	addi	r16,r16,1
  1495cc:	153ff81e 	bne	r2,r20,1495b0 <__sprint_r.part.0+0x70>
  1495d0:	a005883a 	mov	r2,r20
  1495d4:	b0000215 	stw	zero,8(r22)
  1495d8:	b0000115 	stw	zero,4(r22)
  1495dc:	dfc00917 	ldw	ra,36(sp)
  1495e0:	df000817 	ldw	fp,32(sp)
  1495e4:	ddc00717 	ldw	r23,28(sp)
  1495e8:	dd800617 	ldw	r22,24(sp)
  1495ec:	dd400517 	ldw	r21,20(sp)
  1495f0:	dd000417 	ldw	r20,16(sp)
  1495f4:	dcc00317 	ldw	r19,12(sp)
  1495f8:	dc800217 	ldw	r18,8(sp)
  1495fc:	dc400117 	ldw	r17,4(sp)
  149600:	dc000017 	ldw	r16,0(sp)
  149604:	dec00a04 	addi	sp,sp,40
  149608:	f800283a 	ret
  14960c:	b0800217 	ldw	r2,8(r22)
  149610:	94a5883a 	add	r18,r18,r18
  149614:	94a5883a 	add	r18,r18,r18
  149618:	1485c83a 	sub	r2,r2,r18
  14961c:	b0800215 	stw	r2,8(r22)
  149620:	bdc00204 	addi	r23,r23,8
  149624:	e7000204 	addi	fp,fp,8
  149628:	103fdb1e 	bne	r2,zero,149598 <__sprint_r.part.0+0x58>
  14962c:	0005883a 	mov	r2,zero
  149630:	003fe806 	br	1495d4 <__sprint_r.part.0+0x94>
  149634:	01468bc0 	call	1468bc <__sfvwrite_r>
  149638:	003fe606 	br	1495d4 <__sprint_r.part.0+0x94>

0014963c <__sprint_r>:
  14963c:	30c00217 	ldw	r3,8(r6)
  149640:	18000126 	beq	r3,zero,149648 <__sprint_r+0xc>
  149644:	01495401 	jmpi	149540 <__sprint_r.part.0>
  149648:	30000115 	stw	zero,4(r6)
  14964c:	0005883a 	mov	r2,zero
  149650:	f800283a 	ret

00149654 <___vfiprintf_internal_r>:
  149654:	defeca04 	addi	sp,sp,-1240
  149658:	dd813215 	stw	r22,1224(sp)
  14965c:	dcc12f15 	stw	r19,1212(sp)
  149660:	dfc13515 	stw	ra,1236(sp)
  149664:	df013415 	stw	fp,1232(sp)
  149668:	ddc13315 	stw	r23,1228(sp)
  14966c:	dd413115 	stw	r21,1220(sp)
  149670:	dd013015 	stw	r20,1216(sp)
  149674:	dc812e15 	stw	r18,1208(sp)
  149678:	dc412d15 	stw	r17,1204(sp)
  14967c:	dc012c15 	stw	r16,1200(sp)
  149680:	d9012115 	stw	r4,1156(sp)
  149684:	d9c12315 	stw	r7,1164(sp)
  149688:	2827883a 	mov	r19,r5
  14968c:	302d883a 	mov	r22,r6
  149690:	20000226 	beq	r4,zero,14969c <___vfiprintf_internal_r+0x48>
  149694:	20800e17 	ldw	r2,56(r4)
  149698:	1001ca26 	beq	r2,zero,149dc4 <___vfiprintf_internal_r+0x770>
  14969c:	9880030b 	ldhu	r2,12(r19)
  1496a0:	1108000c 	andi	r4,r2,8192
  1496a4:	1007883a 	mov	r3,r2
  1496a8:	2000071e 	bne	r4,zero,1496c8 <___vfiprintf_internal_r+0x74>
  1496ac:	99001917 	ldw	r4,100(r19)
  1496b0:	10c80014 	ori	r3,r2,8192
  1496b4:	00b7ffc4 	movi	r2,-8193
  1496b8:	2088703a 	and	r4,r4,r2
  1496bc:	98c0030d 	sth	r3,12(r19)
  1496c0:	1805883a 	mov	r2,r3
  1496c4:	99001915 	stw	r4,100(r19)
  1496c8:	1900020c 	andi	r4,r3,8
  1496cc:	20018026 	beq	r4,zero,149cd0 <___vfiprintf_internal_r+0x67c>
  1496d0:	99000417 	ldw	r4,16(r19)
  1496d4:	20017e26 	beq	r4,zero,149cd0 <___vfiprintf_internal_r+0x67c>
  1496d8:	18c0068c 	andi	r3,r3,26
  1496dc:	01000284 	movi	r4,10
  1496e0:	19018426 	beq	r3,r4,149cf4 <___vfiprintf_internal_r+0x6a0>
  1496e4:	da4109c4 	addi	r9,sp,1063
  1496e8:	da411e15 	stw	r9,1144(sp)
  1496ec:	d8811e17 	ldw	r2,1144(sp)
  1496f0:	da410a04 	addi	r9,sp,1064
  1496f4:	da411f15 	stw	r9,1148(sp)
  1496f8:	4893c83a 	sub	r9,r9,r2
  1496fc:	dec11a15 	stw	sp,1128(sp)
  149700:	d8011c15 	stw	zero,1136(sp)
  149704:	d8011b15 	stw	zero,1132(sp)
  149708:	d8012615 	stw	zero,1176(sp)
  14970c:	d8012415 	stw	zero,1168(sp)
  149710:	d821883a 	mov	r16,sp
  149714:	05000574 	movhi	r20,21
  149718:	a504b004 	addi	r20,r20,4800
  14971c:	05c00574 	movhi	r23,21
  149720:	bdc4ac04 	addi	r23,r23,4784
  149724:	da412715 	stw	r9,1180(sp)
  149728:	dcc12215 	stw	r19,1160(sp)
  14972c:	b02b883a 	mov	r21,r22
  149730:	a8800007 	ldb	r2,0(r21)
  149734:	1003b926 	beq	r2,zero,14a61c <___vfiprintf_internal_r+0xfc8>
  149738:	00c00944 	movi	r3,37
  14973c:	a823883a 	mov	r17,r21
  149740:	10c0021e 	bne	r2,r3,14974c <___vfiprintf_internal_r+0xf8>
  149744:	00001606 	br	1497a0 <___vfiprintf_internal_r+0x14c>
  149748:	10c00326 	beq	r2,r3,149758 <___vfiprintf_internal_r+0x104>
  14974c:	8c400044 	addi	r17,r17,1
  149750:	88800007 	ldb	r2,0(r17)
  149754:	103ffc1e 	bne	r2,zero,149748 <___vfiprintf_internal_r+0xf4>
  149758:	8d65c83a 	sub	r18,r17,r21
  14975c:	90001026 	beq	r18,zero,1497a0 <___vfiprintf_internal_r+0x14c>
  149760:	d8c11c17 	ldw	r3,1136(sp)
  149764:	d8811b17 	ldw	r2,1132(sp)
  149768:	85400015 	stw	r21,0(r16)
  14976c:	90c7883a 	add	r3,r18,r3
  149770:	10800044 	addi	r2,r2,1
  149774:	84800115 	stw	r18,4(r16)
  149778:	d8c11c15 	stw	r3,1136(sp)
  14977c:	d8811b15 	stw	r2,1132(sp)
  149780:	010001c4 	movi	r4,7
  149784:	2080760e 	bge	r4,r2,149960 <___vfiprintf_internal_r+0x30c>
  149788:	1803741e 	bne	r3,zero,14a55c <___vfiprintf_internal_r+0xf08>
  14978c:	da412417 	ldw	r9,1168(sp)
  149790:	d8011b15 	stw	zero,1132(sp)
  149794:	d821883a 	mov	r16,sp
  149798:	4c93883a 	add	r9,r9,r18
  14979c:	da412415 	stw	r9,1168(sp)
  1497a0:	88800007 	ldb	r2,0(r17)
  1497a4:	1003f126 	beq	r2,zero,14a76c <___vfiprintf_internal_r+0x1118>
  1497a8:	88c00047 	ldb	r3,1(r17)
  1497ac:	8d400044 	addi	r21,r17,1
  1497b0:	d8011d85 	stb	zero,1142(sp)
  1497b4:	000d883a 	mov	r6,zero
  1497b8:	02bfffc4 	movi	r10,-1
  1497bc:	d8012015 	stw	zero,1152(sp)
  1497c0:	0039883a 	mov	fp,zero
  1497c4:	01001604 	movi	r4,88
  1497c8:	01400244 	movi	r5,9
  1497cc:	02000a84 	movi	r8,42
  1497d0:	01c01b04 	movi	r7,108
  1497d4:	ad400044 	addi	r21,r21,1
  1497d8:	18bff804 	addi	r2,r3,-32
  1497dc:	20825236 	bltu	r4,r2,14a128 <___vfiprintf_internal_r+0xad4>
  1497e0:	1085883a 	add	r2,r2,r2
  1497e4:	1085883a 	add	r2,r2,r2
  1497e8:	02400574 	movhi	r9,21
  1497ec:	4a65ff04 	addi	r9,r9,-26628
  1497f0:	1245883a 	add	r2,r2,r9
  1497f4:	10800017 	ldw	r2,0(r2)
  1497f8:	1000683a 	jmp	r2
  1497fc:	00149f24 	muli	zero,zero,21116
  149800:	0014a128 	cmpgeui	zero,zero,21124
  149804:	0014a128 	cmpgeui	zero,zero,21124
  149808:	0014a0a8 	cmpgeui	zero,zero,21122
  14980c:	0014a128 	cmpgeui	zero,zero,21124
  149810:	0014a128 	cmpgeui	zero,zero,21124
  149814:	0014a128 	cmpgeui	zero,zero,21124
  149818:	0014a128 	cmpgeui	zero,zero,21124
  14981c:	0014a128 	cmpgeui	zero,zero,21124
  149820:	0014a128 	cmpgeui	zero,zero,21124
  149824:	0014a080 	call	14a08 <__alt_mem_onchip_memory2-0x12b5f8>
  149828:	0014a11c 	xori	zero,zero,21124
  14982c:	0014a128 	cmpgeui	zero,zero,21124
  149830:	00149ddc 	xori	zero,zero,21111
  149834:	00149eac 	andhi	zero,zero,21114
  149838:	0014a128 	cmpgeui	zero,zero,21124
  14983c:	00149e10 	cmplti	zero,zero,21112
  149840:	00149e1c 	xori	zero,zero,21112
  149844:	00149e1c 	xori	zero,zero,21112
  149848:	00149e1c 	xori	zero,zero,21112
  14984c:	00149e1c 	xori	zero,zero,21112
  149850:	00149e1c 	xori	zero,zero,21112
  149854:	00149e1c 	xori	zero,zero,21112
  149858:	00149e1c 	xori	zero,zero,21112
  14985c:	00149e1c 	xori	zero,zero,21112
  149860:	00149e1c 	xori	zero,zero,21112
  149864:	0014a128 	cmpgeui	zero,zero,21124
  149868:	0014a128 	cmpgeui	zero,zero,21124
  14986c:	0014a128 	cmpgeui	zero,zero,21124
  149870:	0014a128 	cmpgeui	zero,zero,21124
  149874:	0014a128 	cmpgeui	zero,zero,21124
  149878:	0014a128 	cmpgeui	zero,zero,21124
  14987c:	0014a128 	cmpgeui	zero,zero,21124
  149880:	0014a128 	cmpgeui	zero,zero,21124
  149884:	0014a128 	cmpgeui	zero,zero,21124
  149888:	0014a128 	cmpgeui	zero,zero,21124
  14988c:	00149e4c 	andi	zero,zero,21113
  149890:	0014a128 	cmpgeui	zero,zero,21124
  149894:	0014a128 	cmpgeui	zero,zero,21124
  149898:	0014a128 	cmpgeui	zero,zero,21124
  14989c:	0014a128 	cmpgeui	zero,zero,21124
  1498a0:	0014a128 	cmpgeui	zero,zero,21124
  1498a4:	0014a128 	cmpgeui	zero,zero,21124
  1498a8:	0014a128 	cmpgeui	zero,zero,21124
  1498ac:	0014a128 	cmpgeui	zero,zero,21124
  1498b0:	0014a128 	cmpgeui	zero,zero,21124
  1498b4:	0014a128 	cmpgeui	zero,zero,21124
  1498b8:	00149c98 	cmpnei	zero,zero,21106
  1498bc:	0014a128 	cmpgeui	zero,zero,21124
  1498c0:	0014a128 	cmpgeui	zero,zero,21124
  1498c4:	0014a128 	cmpgeui	zero,zero,21124
  1498c8:	0014a128 	cmpgeui	zero,zero,21124
  1498cc:	0014a128 	cmpgeui	zero,zero,21124
  1498d0:	00149974 	movhi	zero,21093
  1498d4:	0014a128 	cmpgeui	zero,zero,21124
  1498d8:	0014a128 	cmpgeui	zero,zero,21124
  1498dc:	0014a0b4 	movhi	zero,21122
  1498e0:	0014a128 	cmpgeui	zero,zero,21124
  1498e4:	0014a128 	cmpgeui	zero,zero,21124
  1498e8:	0014a128 	cmpgeui	zero,zero,21124
  1498ec:	0014a128 	cmpgeui	zero,zero,21124
  1498f0:	0014a128 	cmpgeui	zero,zero,21124
  1498f4:	0014a128 	cmpgeui	zero,zero,21124
  1498f8:	0014a128 	cmpgeui	zero,zero,21124
  1498fc:	0014a128 	cmpgeui	zero,zero,21124
  149900:	0014a128 	cmpgeui	zero,zero,21124
  149904:	0014a128 	cmpgeui	zero,zero,21124
  149908:	00149f94 	movui	zero,21118
  14990c:	0014a0ec 	andhi	zero,zero,21123
  149910:	0014a128 	cmpgeui	zero,zero,21124
  149914:	0014a128 	cmpgeui	zero,zero,21124
  149918:	0014a128 	cmpgeui	zero,zero,21124
  14991c:	0014a00c 	andi	zero,zero,21120
  149920:	0014a0ec 	andhi	zero,zero,21123
  149924:	0014a128 	cmpgeui	zero,zero,21124
  149928:	0014a128 	cmpgeui	zero,zero,21124
  14992c:	0014a018 	cmpnei	zero,zero,21120
  149930:	0014a128 	cmpgeui	zero,zero,21124
  149934:	00149eec 	andhi	zero,zero,21115
  149938:	00149c9c 	xori	zero,zero,21106
  14993c:	00149fc0 	call	149fc <__alt_mem_onchip_memory2-0x12b604>
  149940:	0014a000 	call	14a00 <__alt_mem_onchip_memory2-0x12b600>
  149944:	0014a128 	cmpgeui	zero,zero,21124
  149948:	00149f40 	call	149f4 <__alt_mem_onchip_memory2-0x12b60c>
  14994c:	0014a128 	cmpgeui	zero,zero,21124
  149950:	00149978 	rdprs	zero,zero,21093
  149954:	0014a128 	cmpgeui	zero,zero,21124
  149958:	0014a128 	cmpgeui	zero,zero,21124
  14995c:	0014a02c 	andhi	zero,zero,21120
  149960:	84000204 	addi	r16,r16,8
  149964:	da412417 	ldw	r9,1168(sp)
  149968:	4c93883a 	add	r9,r9,r18
  14996c:	da412415 	stw	r9,1168(sp)
  149970:	003f8b06 	br	1497a0 <___vfiprintf_internal_r+0x14c>
  149974:	e7000414 	ori	fp,fp,16
  149978:	e080080c 	andi	r2,fp,32
  14997c:	1001431e 	bne	r2,zero,149e8c <___vfiprintf_internal_r+0x838>
  149980:	e080040c 	andi	r2,fp,16
  149984:	10033826 	beq	r2,zero,14a668 <___vfiprintf_internal_r+0x1014>
  149988:	da412317 	ldw	r9,1164(sp)
  14998c:	4c400017 	ldw	r17,0(r9)
  149990:	4a400104 	addi	r9,r9,4
  149994:	0017883a 	mov	r11,zero
  149998:	da412315 	stw	r9,1164(sp)
  14999c:	00800044 	movi	r2,1
  1499a0:	8809883a 	mov	r4,r17
  1499a4:	d8011d85 	stb	zero,1142(sp)
  1499a8:	5025883a 	mov	r18,r10
  1499ac:	002d883a 	mov	r22,zero
  1499b0:	50000216 	blt	r10,zero,1499bc <___vfiprintf_internal_r+0x368>
  1499b4:	00ffdfc4 	movi	r3,-129
  1499b8:	e0f8703a 	and	fp,fp,r3
  1499bc:	10803fcc 	andi	r2,r2,255
  1499c0:	2002101e 	bne	r4,zero,14a204 <___vfiprintf_internal_r+0xbb0>
  1499c4:	50020f1e 	bne	r10,zero,14a204 <___vfiprintf_internal_r+0xbb0>
  1499c8:	1002af1e 	bne	r2,zero,14a488 <___vfiprintf_internal_r+0xe34>
  1499cc:	e080004c 	andi	r2,fp,1
  1499d0:	1002ad26 	beq	r2,zero,14a488 <___vfiprintf_internal_r+0xe34>
  1499d4:	dc812717 	ldw	r18,1180(sp)
  1499d8:	00800c04 	movi	r2,48
  1499dc:	d88109c5 	stb	r2,1063(sp)
  1499e0:	dcc109c4 	addi	r19,sp,1063
  1499e4:	9023883a 	mov	r17,r18
  1499e8:	9280010e 	bge	r18,r10,1499f0 <___vfiprintf_internal_r+0x39c>
  1499ec:	5023883a 	mov	r17,r10
  1499f0:	b5803fcc 	andi	r22,r22,255
  1499f4:	b580201c 	xori	r22,r22,128
  1499f8:	b5bfe004 	addi	r22,r22,-128
  1499fc:	b0000126 	beq	r22,zero,149a04 <___vfiprintf_internal_r+0x3b0>
  149a00:	8c400044 	addi	r17,r17,1
  149a04:	e380008c 	andi	r14,fp,2
  149a08:	70000126 	beq	r14,zero,149a10 <___vfiprintf_internal_r+0x3bc>
  149a0c:	8c400084 	addi	r17,r17,2
  149a10:	e580210c 	andi	r22,fp,132
  149a14:	b001db1e 	bne	r22,zero,14a184 <___vfiprintf_internal_r+0xb30>
  149a18:	da412017 	ldw	r9,1152(sp)
  149a1c:	4c47c83a 	sub	r3,r9,r17
  149a20:	00c1d80e 	bge	zero,r3,14a184 <___vfiprintf_internal_r+0xb30>
  149a24:	01c00404 	movi	r7,16
  149a28:	d8811c17 	ldw	r2,1136(sp)
  149a2c:	38c36f0e 	bge	r7,r3,14a7ec <___vfiprintf_internal_r+0x1198>
  149a30:	02400574 	movhi	r9,21
  149a34:	4a44b004 	addi	r9,r9,4800
  149a38:	8011883a 	mov	r8,r16
  149a3c:	d9811b17 	ldw	r6,1132(sp)
  149a40:	da412515 	stw	r9,1172(sp)
  149a44:	02c001c4 	movi	r11,7
  149a48:	da812815 	stw	r10,1184(sp)
  149a4c:	db812915 	stw	r14,1188(sp)
  149a50:	1821883a 	mov	r16,r3
  149a54:	00000506 	br	149a6c <___vfiprintf_internal_r+0x418>
  149a58:	31000084 	addi	r4,r6,2
  149a5c:	42000204 	addi	r8,r8,8
  149a60:	280d883a 	mov	r6,r5
  149a64:	843ffc04 	addi	r16,r16,-16
  149a68:	3c000d0e 	bge	r7,r16,149aa0 <___vfiprintf_internal_r+0x44c>
  149a6c:	10800404 	addi	r2,r2,16
  149a70:	31400044 	addi	r5,r6,1
  149a74:	45000015 	stw	r20,0(r8)
  149a78:	41c00115 	stw	r7,4(r8)
  149a7c:	d8811c15 	stw	r2,1136(sp)
  149a80:	d9411b15 	stw	r5,1132(sp)
  149a84:	597ff40e 	bge	r11,r5,149a58 <___vfiprintf_internal_r+0x404>
  149a88:	1001b01e 	bne	r2,zero,14a14c <___vfiprintf_internal_r+0xaf8>
  149a8c:	843ffc04 	addi	r16,r16,-16
  149a90:	000d883a 	mov	r6,zero
  149a94:	01000044 	movi	r4,1
  149a98:	d811883a 	mov	r8,sp
  149a9c:	3c3ff316 	blt	r7,r16,149a6c <___vfiprintf_internal_r+0x418>
  149aa0:	da812817 	ldw	r10,1184(sp)
  149aa4:	db812917 	ldw	r14,1188(sp)
  149aa8:	8007883a 	mov	r3,r16
  149aac:	4021883a 	mov	r16,r8
  149ab0:	da412517 	ldw	r9,1172(sp)
  149ab4:	1885883a 	add	r2,r3,r2
  149ab8:	80c00115 	stw	r3,4(r16)
  149abc:	82400015 	stw	r9,0(r16)
  149ac0:	d8811c15 	stw	r2,1136(sp)
  149ac4:	d9011b15 	stw	r4,1132(sp)
  149ac8:	00c001c4 	movi	r3,7
  149acc:	19029316 	blt	r3,r4,14a51c <___vfiprintf_internal_r+0xec8>
  149ad0:	d8c11d87 	ldb	r3,1142(sp)
  149ad4:	84000204 	addi	r16,r16,8
  149ad8:	21800044 	addi	r6,r4,1
  149adc:	1801ae1e 	bne	r3,zero,14a198 <___vfiprintf_internal_r+0xb44>
  149ae0:	70000c26 	beq	r14,zero,149b14 <___vfiprintf_internal_r+0x4c0>
  149ae4:	d8c11d04 	addi	r3,sp,1140
  149ae8:	10800084 	addi	r2,r2,2
  149aec:	80c00015 	stw	r3,0(r16)
  149af0:	00c00084 	movi	r3,2
  149af4:	80c00115 	stw	r3,4(r16)
  149af8:	d8811c15 	stw	r2,1136(sp)
  149afc:	d9811b15 	stw	r6,1132(sp)
  149b00:	00c001c4 	movi	r3,7
  149b04:	19824216 	blt	r3,r6,14a410 <___vfiprintf_internal_r+0xdbc>
  149b08:	3009883a 	mov	r4,r6
  149b0c:	84000204 	addi	r16,r16,8
  149b10:	31800044 	addi	r6,r6,1
  149b14:	00c02004 	movi	r3,128
  149b18:	b0c1fe26 	beq	r22,r3,14a314 <___vfiprintf_internal_r+0xcc0>
  149b1c:	54adc83a 	sub	r22,r10,r18
  149b20:	0580230e 	bge	zero,r22,149bb0 <___vfiprintf_internal_r+0x55c>
  149b24:	02400574 	movhi	r9,21
  149b28:	4a44ac04 	addi	r9,r9,4784
  149b2c:	00c00404 	movi	r3,16
  149b30:	da412515 	stw	r9,1172(sp)
  149b34:	1d80140e 	bge	r3,r22,149b88 <___vfiprintf_internal_r+0x534>
  149b38:	01c001c4 	movi	r7,7
  149b3c:	00000506 	br	149b54 <___vfiprintf_internal_r+0x500>
  149b40:	21800084 	addi	r6,r4,2
  149b44:	84000204 	addi	r16,r16,8
  149b48:	2809883a 	mov	r4,r5
  149b4c:	b5bffc04 	addi	r22,r22,-16
  149b50:	1d800d0e 	bge	r3,r22,149b88 <___vfiprintf_internal_r+0x534>
  149b54:	10800404 	addi	r2,r2,16
  149b58:	21400044 	addi	r5,r4,1
  149b5c:	85c00015 	stw	r23,0(r16)
  149b60:	80c00115 	stw	r3,4(r16)
  149b64:	d8811c15 	stw	r2,1136(sp)
  149b68:	d9411b15 	stw	r5,1132(sp)
  149b6c:	397ff40e 	bge	r7,r5,149b40 <___vfiprintf_internal_r+0x4ec>
  149b70:	1001961e 	bne	r2,zero,14a1cc <___vfiprintf_internal_r+0xb78>
  149b74:	b5bffc04 	addi	r22,r22,-16
  149b78:	0009883a 	mov	r4,zero
  149b7c:	01800044 	movi	r6,1
  149b80:	d821883a 	mov	r16,sp
  149b84:	1dbff316 	blt	r3,r22,149b54 <___vfiprintf_internal_r+0x500>
  149b88:	d8c12517 	ldw	r3,1172(sp)
  149b8c:	1585883a 	add	r2,r2,r22
  149b90:	85800115 	stw	r22,4(r16)
  149b94:	80c00015 	stw	r3,0(r16)
  149b98:	d8811c15 	stw	r2,1136(sp)
  149b9c:	d9811b15 	stw	r6,1132(sp)
  149ba0:	00c001c4 	movi	r3,7
  149ba4:	1981d116 	blt	r3,r6,14a2ec <___vfiprintf_internal_r+0xc98>
  149ba8:	84000204 	addi	r16,r16,8
  149bac:	31800044 	addi	r6,r6,1
  149bb0:	9085883a 	add	r2,r18,r2
  149bb4:	84c00015 	stw	r19,0(r16)
  149bb8:	84800115 	stw	r18,4(r16)
  149bbc:	d8811c15 	stw	r2,1136(sp)
  149bc0:	d9811b15 	stw	r6,1132(sp)
  149bc4:	00c001c4 	movi	r3,7
  149bc8:	1981d00e 	bge	r3,r6,14a30c <___vfiprintf_internal_r+0xcb8>
  149bcc:	1002581e 	bne	r2,zero,14a530 <___vfiprintf_internal_r+0xedc>
  149bd0:	d8011b15 	stw	zero,1132(sp)
  149bd4:	d821883a 	mov	r16,sp
  149bd8:	e280010c 	andi	r10,fp,4
  149bdc:	5001a426 	beq	r10,zero,14a270 <___vfiprintf_internal_r+0xc1c>
  149be0:	da412017 	ldw	r9,1152(sp)
  149be4:	4c65c83a 	sub	r18,r9,r17
  149be8:	0481a10e 	bge	zero,r18,14a270 <___vfiprintf_internal_r+0xc1c>
  149bec:	02000404 	movi	r8,16
  149bf0:	4483100e 	bge	r8,r18,14a834 <___vfiprintf_internal_r+0x11e0>
  149bf4:	02400574 	movhi	r9,21
  149bf8:	4a44b004 	addi	r9,r9,4800
  149bfc:	d9011b17 	ldw	r4,1132(sp)
  149c00:	da412515 	stw	r9,1172(sp)
  149c04:	4039883a 	mov	fp,r8
  149c08:	04c001c4 	movi	r19,7
  149c0c:	dd812117 	ldw	r22,1156(sp)
  149c10:	00000506 	br	149c28 <___vfiprintf_internal_r+0x5d4>
  149c14:	21400084 	addi	r5,r4,2
  149c18:	84000204 	addi	r16,r16,8
  149c1c:	1809883a 	mov	r4,r3
  149c20:	94bffc04 	addi	r18,r18,-16
  149c24:	e4800d0e 	bge	fp,r18,149c5c <___vfiprintf_internal_r+0x608>
  149c28:	10800404 	addi	r2,r2,16
  149c2c:	20c00044 	addi	r3,r4,1
  149c30:	85000015 	stw	r20,0(r16)
  149c34:	87000115 	stw	fp,4(r16)
  149c38:	d8811c15 	stw	r2,1136(sp)
  149c3c:	d8c11b15 	stw	r3,1132(sp)
  149c40:	98fff40e 	bge	r19,r3,149c14 <___vfiprintf_internal_r+0x5c0>
  149c44:	10019f1e 	bne	r2,zero,14a2c4 <___vfiprintf_internal_r+0xc70>
  149c48:	94bffc04 	addi	r18,r18,-16
  149c4c:	0009883a 	mov	r4,zero
  149c50:	01400044 	movi	r5,1
  149c54:	d821883a 	mov	r16,sp
  149c58:	e4bff316 	blt	fp,r18,149c28 <___vfiprintf_internal_r+0x5d4>
  149c5c:	d8c12517 	ldw	r3,1172(sp)
  149c60:	1485883a 	add	r2,r2,r18
  149c64:	84800115 	stw	r18,4(r16)
  149c68:	80c00015 	stw	r3,0(r16)
  149c6c:	d8811c15 	stw	r2,1136(sp)
  149c70:	d9411b15 	stw	r5,1132(sp)
  149c74:	00c001c4 	movi	r3,7
  149c78:	19417d0e 	bge	r3,r5,14a270 <___vfiprintf_internal_r+0xc1c>
  149c7c:	1001761e 	bne	r2,zero,14a258 <___vfiprintf_internal_r+0xc04>
  149c80:	da412017 	ldw	r9,1152(sp)
  149c84:	8a42b016 	blt	r17,r9,14a748 <___vfiprintf_internal_r+0x10f4>
  149c88:	da412417 	ldw	r9,1168(sp)
  149c8c:	4c53883a 	add	r9,r9,r17
  149c90:	da412415 	stw	r9,1168(sp)
  149c94:	00018206 	br	14a2a0 <___vfiprintf_internal_r+0xc4c>
  149c98:	e7000414 	ori	fp,fp,16
  149c9c:	e080080c 	andi	r2,fp,32
  149ca0:	10005126 	beq	r2,zero,149de8 <___vfiprintf_internal_r+0x794>
  149ca4:	da412317 	ldw	r9,1164(sp)
  149ca8:	0005883a 	mov	r2,zero
  149cac:	4c400017 	ldw	r17,0(r9)
  149cb0:	4ac00117 	ldw	r11,4(r9)
  149cb4:	4a400204 	addi	r9,r9,8
  149cb8:	da412315 	stw	r9,1164(sp)
  149cbc:	8ac8b03a 	or	r4,r17,r11
  149cc0:	d8011d85 	stb	zero,1142(sp)
  149cc4:	5025883a 	mov	r18,r10
  149cc8:	002d883a 	mov	r22,zero
  149ccc:	003f3806 	br	1499b0 <___vfiprintf_internal_r+0x35c>
  149cd0:	d9012117 	ldw	r4,1156(sp)
  149cd4:	980b883a 	mov	r5,r19
  149cd8:	01445340 	call	144534 <__swsetup_r>
  149cdc:	10002c1e 	bne	r2,zero,149d90 <___vfiprintf_internal_r+0x73c>
  149ce0:	9880030b 	ldhu	r2,12(r19)
  149ce4:	01000284 	movi	r4,10
  149ce8:	1007883a 	mov	r3,r2
  149cec:	18c0068c 	andi	r3,r3,26
  149cf0:	193e7c1e 	bne	r3,r4,1496e4 <___vfiprintf_internal_r+0x90>
  149cf4:	98c0038b 	ldhu	r3,14(r19)
  149cf8:	193fffcc 	andi	r4,r3,65535
  149cfc:	2120001c 	xori	r4,r4,32768
  149d00:	21200004 	addi	r4,r4,-32768
  149d04:	203e7716 	blt	r4,zero,1496e4 <___vfiprintf_internal_r+0x90>
  149d08:	9b001917 	ldw	r12,100(r19)
  149d0c:	9ac00717 	ldw	r11,28(r19)
  149d10:	9a800917 	ldw	r10,36(r19)
  149d14:	d9012117 	ldw	r4,1156(sp)
  149d18:	d9c12317 	ldw	r7,1164(sp)
  149d1c:	02410004 	movi	r9,1024
  149d20:	10bfff4c 	andi	r2,r2,65533
  149d24:	da4b883a 	add	r5,sp,r9
  149d28:	b00d883a 	mov	r6,r22
  149d2c:	d881030d 	sth	r2,1036(sp)
  149d30:	db011915 	stw	r12,1124(sp)
  149d34:	d8c1038d 	sth	r3,1038(sp)
  149d38:	dac10715 	stw	r11,1052(sp)
  149d3c:	da810915 	stw	r10,1060(sp)
  149d40:	dec10015 	stw	sp,1024(sp)
  149d44:	dec10415 	stw	sp,1040(sp)
  149d48:	da410215 	stw	r9,1032(sp)
  149d4c:	da410515 	stw	r9,1044(sp)
  149d50:	d8010615 	stw	zero,1048(sp)
  149d54:	01496540 	call	149654 <___vfiprintf_internal_r>
  149d58:	1021883a 	mov	r16,r2
  149d5c:	10000416 	blt	r2,zero,149d70 <___vfiprintf_internal_r+0x71c>
  149d60:	d9012117 	ldw	r4,1156(sp)
  149d64:	d9410004 	addi	r5,sp,1024
  149d68:	0145eac0 	call	145eac <_fflush_r>
  149d6c:	1002c31e 	bne	r2,zero,14a87c <___vfiprintf_internal_r+0x1228>
  149d70:	d881030b 	ldhu	r2,1036(sp)
  149d74:	1080100c 	andi	r2,r2,64
  149d78:	10000326 	beq	r2,zero,149d88 <___vfiprintf_internal_r+0x734>
  149d7c:	9880030b 	ldhu	r2,12(r19)
  149d80:	10801014 	ori	r2,r2,64
  149d84:	9880030d 	sth	r2,12(r19)
  149d88:	8005883a 	mov	r2,r16
  149d8c:	00000106 	br	149d94 <___vfiprintf_internal_r+0x740>
  149d90:	00bfffc4 	movi	r2,-1
  149d94:	dfc13517 	ldw	ra,1236(sp)
  149d98:	df013417 	ldw	fp,1232(sp)
  149d9c:	ddc13317 	ldw	r23,1228(sp)
  149da0:	dd813217 	ldw	r22,1224(sp)
  149da4:	dd413117 	ldw	r21,1220(sp)
  149da8:	dd013017 	ldw	r20,1216(sp)
  149dac:	dcc12f17 	ldw	r19,1212(sp)
  149db0:	dc812e17 	ldw	r18,1208(sp)
  149db4:	dc412d17 	ldw	r17,1204(sp)
  149db8:	dc012c17 	ldw	r16,1200(sp)
  149dbc:	dec13604 	addi	sp,sp,1240
  149dc0:	f800283a 	ret
  149dc4:	01461b80 	call	1461b8 <__sinit>
  149dc8:	003e3406 	br	14969c <___vfiprintf_internal_r+0x48>
  149dcc:	da412017 	ldw	r9,1152(sp)
  149dd0:	d8812315 	stw	r2,1164(sp)
  149dd4:	0253c83a 	sub	r9,zero,r9
  149dd8:	da412015 	stw	r9,1152(sp)
  149ddc:	e7000114 	ori	fp,fp,4
  149de0:	a8c00007 	ldb	r3,0(r21)
  149de4:	003e7b06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  149de8:	e080040c 	andi	r2,fp,16
  149dec:	10021926 	beq	r2,zero,14a654 <___vfiprintf_internal_r+0x1000>
  149df0:	da412317 	ldw	r9,1164(sp)
  149df4:	4c400017 	ldw	r17,0(r9)
  149df8:	4a400104 	addi	r9,r9,4
  149dfc:	0017883a 	mov	r11,zero
  149e00:	da412315 	stw	r9,1164(sp)
  149e04:	0005883a 	mov	r2,zero
  149e08:	8809883a 	mov	r4,r17
  149e0c:	003fac06 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  149e10:	e7002014 	ori	fp,fp,128
  149e14:	a8c00007 	ldb	r3,0(r21)
  149e18:	003e6e06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  149e1c:	d8012015 	stw	zero,1152(sp)
  149e20:	18bff404 	addi	r2,r3,-48
  149e24:	da412017 	ldw	r9,1152(sp)
  149e28:	a8c00007 	ldb	r3,0(r21)
  149e2c:	4ac002a4 	muli	r11,r9,10
  149e30:	aa400044 	addi	r9,r21,1
  149e34:	482b883a 	mov	r21,r9
  149e38:	5885883a 	add	r2,r11,r2
  149e3c:	d8812015 	stw	r2,1152(sp)
  149e40:	18bff404 	addi	r2,r3,-48
  149e44:	28bff72e 	bgeu	r5,r2,149e24 <___vfiprintf_internal_r+0x7d0>
  149e48:	003e6306 	br	1497d8 <___vfiprintf_internal_r+0x184>
  149e4c:	e7000414 	ori	fp,fp,16
  149e50:	d9811d85 	stb	r6,1142(sp)
  149e54:	e080080c 	andi	r2,fp,32
  149e58:	1000a726 	beq	r2,zero,14a0f8 <___vfiprintf_internal_r+0xaa4>
  149e5c:	da412317 	ldw	r9,1164(sp)
  149e60:	48800117 	ldw	r2,4(r9)
  149e64:	4c400017 	ldw	r17,0(r9)
  149e68:	4a400204 	addi	r9,r9,8
  149e6c:	da412315 	stw	r9,1164(sp)
  149e70:	1017883a 	mov	r11,r2
  149e74:	1001eb16 	blt	r2,zero,14a624 <___vfiprintf_internal_r+0xfd0>
  149e78:	dd811d83 	ldbu	r22,1142(sp)
  149e7c:	5025883a 	mov	r18,r10
  149e80:	00800044 	movi	r2,1
  149e84:	8ac8b03a 	or	r4,r17,r11
  149e88:	003ec906 	br	1499b0 <___vfiprintf_internal_r+0x35c>
  149e8c:	da412317 	ldw	r9,1164(sp)
  149e90:	00800044 	movi	r2,1
  149e94:	4c400017 	ldw	r17,0(r9)
  149e98:	4ac00117 	ldw	r11,4(r9)
  149e9c:	4a400204 	addi	r9,r9,8
  149ea0:	da412315 	stw	r9,1164(sp)
  149ea4:	8ac8b03a 	or	r4,r17,r11
  149ea8:	003f8506 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  149eac:	a8c00007 	ldb	r3,0(r21)
  149eb0:	aa400044 	addi	r9,r21,1
  149eb4:	1a027326 	beq	r3,r8,14a884 <___vfiprintf_internal_r+0x1230>
  149eb8:	18bff404 	addi	r2,r3,-48
  149ebc:	482b883a 	mov	r21,r9
  149ec0:	0015883a 	mov	r10,zero
  149ec4:	28be4436 	bltu	r5,r2,1497d8 <___vfiprintf_internal_r+0x184>
  149ec8:	a8c00007 	ldb	r3,0(r21)
  149ecc:	528002a4 	muli	r10,r10,10
  149ed0:	ad400044 	addi	r21,r21,1
  149ed4:	1295883a 	add	r10,r2,r10
  149ed8:	18bff404 	addi	r2,r3,-48
  149edc:	28bffa2e 	bgeu	r5,r2,149ec8 <___vfiprintf_internal_r+0x874>
  149ee0:	503e3d0e 	bge	r10,zero,1497d8 <___vfiprintf_internal_r+0x184>
  149ee4:	02bfffc4 	movi	r10,-1
  149ee8:	003e3b06 	br	1497d8 <___vfiprintf_internal_r+0x184>
  149eec:	d9811d85 	stb	r6,1142(sp)
  149ef0:	e080080c 	andi	r2,fp,32
  149ef4:	1001e326 	beq	r2,zero,14a684 <___vfiprintf_internal_r+0x1030>
  149ef8:	da412317 	ldw	r9,1164(sp)
  149efc:	48800017 	ldw	r2,0(r9)
  149f00:	da412417 	ldw	r9,1168(sp)
  149f04:	4807d7fa 	srai	r3,r9,31
  149f08:	da412317 	ldw	r9,1164(sp)
  149f0c:	10c00115 	stw	r3,4(r2)
  149f10:	4a400104 	addi	r9,r9,4
  149f14:	da412315 	stw	r9,1164(sp)
  149f18:	da412417 	ldw	r9,1168(sp)
  149f1c:	12400015 	stw	r9,0(r2)
  149f20:	003e0306 	br	149730 <___vfiprintf_internal_r+0xdc>
  149f24:	30803fcc 	andi	r2,r6,255
  149f28:	1080201c 	xori	r2,r2,128
  149f2c:	10bfe004 	addi	r2,r2,-128
  149f30:	1001d21e 	bne	r2,zero,14a67c <___vfiprintf_internal_r+0x1028>
  149f34:	01800804 	movi	r6,32
  149f38:	a8c00007 	ldb	r3,0(r21)
  149f3c:	003e2506 	br	1497d4 <___vfiprintf_internal_r+0x180>
  149f40:	da412317 	ldw	r9,1164(sp)
  149f44:	d8011d85 	stb	zero,1142(sp)
  149f48:	4cc00017 	ldw	r19,0(r9)
  149f4c:	48c00104 	addi	r3,r9,4
  149f50:	98022c26 	beq	r19,zero,14a804 <___vfiprintf_internal_r+0x11b0>
  149f54:	9809883a 	mov	r4,r19
  149f58:	50021016 	blt	r10,zero,14a79c <___vfiprintf_internal_r+0x1148>
  149f5c:	500d883a 	mov	r6,r10
  149f60:	000b883a 	mov	r5,zero
  149f64:	d8c12a15 	stw	r3,1192(sp)
  149f68:	da812b15 	stw	r10,1196(sp)
  149f6c:	01479140 	call	147914 <memchr>
  149f70:	d8c12a17 	ldw	r3,1192(sp)
  149f74:	da812b17 	ldw	r10,1196(sp)
  149f78:	10023426 	beq	r2,zero,14a84c <___vfiprintf_internal_r+0x11f8>
  149f7c:	14e5c83a 	sub	r18,r2,r19
  149f80:	5481f316 	blt	r10,r18,14a750 <___vfiprintf_internal_r+0x10fc>
  149f84:	dd811d83 	ldbu	r22,1142(sp)
  149f88:	d8c12315 	stw	r3,1164(sp)
  149f8c:	0015883a 	mov	r10,zero
  149f90:	003e9406 	br	1499e4 <___vfiprintf_internal_r+0x390>
  149f94:	da412317 	ldw	r9,1164(sp)
  149f98:	04400044 	movi	r17,1
  149f9c:	d8011d85 	stb	zero,1142(sp)
  149fa0:	48800017 	ldw	r2,0(r9)
  149fa4:	4a400104 	addi	r9,r9,4
  149fa8:	da412315 	stw	r9,1164(sp)
  149fac:	d8810005 	stb	r2,1024(sp)
  149fb0:	8825883a 	mov	r18,r17
  149fb4:	dcc10004 	addi	r19,sp,1024
  149fb8:	0015883a 	mov	r10,zero
  149fbc:	003e9106 	br	149a04 <___vfiprintf_internal_r+0x3b0>
  149fc0:	da412317 	ldw	r9,1164(sp)
  149fc4:	00800c04 	movi	r2,48
  149fc8:	d8811d05 	stb	r2,1140(sp)
  149fcc:	4c400017 	ldw	r17,0(r9)
  149fd0:	4a400104 	addi	r9,r9,4
  149fd4:	00801e04 	movi	r2,120
  149fd8:	da412315 	stw	r9,1164(sp)
  149fdc:	02400574 	movhi	r9,21
  149fe0:	4a444b04 	addi	r9,r9,4396
  149fe4:	d8811d45 	stb	r2,1141(sp)
  149fe8:	0017883a 	mov	r11,zero
  149fec:	e7000094 	ori	fp,fp,2
  149ff0:	da412615 	stw	r9,1176(sp)
  149ff4:	00800084 	movi	r2,2
  149ff8:	8809883a 	mov	r4,r17
  149ffc:	003f3006 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  14a000:	e7000814 	ori	fp,fp,32
  14a004:	a8c00007 	ldb	r3,0(r21)
  14a008:	003df206 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a00c:	e7001014 	ori	fp,fp,64
  14a010:	a8c00007 	ldb	r3,0(r21)
  14a014:	003def06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a018:	a8c00007 	ldb	r3,0(r21)
  14a01c:	a805883a 	mov	r2,r21
  14a020:	19c1da26 	beq	r3,r7,14a78c <___vfiprintf_internal_r+0x1138>
  14a024:	e7000414 	ori	fp,fp,16
  14a028:	003dea06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a02c:	02400574 	movhi	r9,21
  14a030:	4a444b04 	addi	r9,r9,4396
  14a034:	d9811d85 	stb	r6,1142(sp)
  14a038:	da412615 	stw	r9,1176(sp)
  14a03c:	e080080c 	andi	r2,fp,32
  14a040:	10002226 	beq	r2,zero,14a0cc <___vfiprintf_internal_r+0xa78>
  14a044:	da412317 	ldw	r9,1164(sp)
  14a048:	4c400017 	ldw	r17,0(r9)
  14a04c:	4ac00117 	ldw	r11,4(r9)
  14a050:	4a400204 	addi	r9,r9,8
  14a054:	da412315 	stw	r9,1164(sp)
  14a058:	e080004c 	andi	r2,fp,1
  14a05c:	10013c26 	beq	r2,zero,14a550 <___vfiprintf_internal_r+0xefc>
  14a060:	8ac8b03a 	or	r4,r17,r11
  14a064:	20017926 	beq	r4,zero,14a64c <___vfiprintf_internal_r+0xff8>
  14a068:	00800c04 	movi	r2,48
  14a06c:	d8811d05 	stb	r2,1140(sp)
  14a070:	d8c11d45 	stb	r3,1141(sp)
  14a074:	e7000094 	ori	fp,fp,2
  14a078:	00800084 	movi	r2,2
  14a07c:	003f1006 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  14a080:	da412317 	ldw	r9,1164(sp)
  14a084:	4a400017 	ldw	r9,0(r9)
  14a088:	da412015 	stw	r9,1152(sp)
  14a08c:	da412317 	ldw	r9,1164(sp)
  14a090:	48800104 	addi	r2,r9,4
  14a094:	da412017 	ldw	r9,1152(sp)
  14a098:	483f4c16 	blt	r9,zero,149dcc <___vfiprintf_internal_r+0x778>
  14a09c:	d8812315 	stw	r2,1164(sp)
  14a0a0:	a8c00007 	ldb	r3,0(r21)
  14a0a4:	003dcb06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a0a8:	e7000054 	ori	fp,fp,1
  14a0ac:	a8c00007 	ldb	r3,0(r21)
  14a0b0:	003dc806 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a0b4:	02400574 	movhi	r9,21
  14a0b8:	4a444604 	addi	r9,r9,4376
  14a0bc:	d9811d85 	stb	r6,1142(sp)
  14a0c0:	da412615 	stw	r9,1176(sp)
  14a0c4:	e080080c 	andi	r2,fp,32
  14a0c8:	103fde1e 	bne	r2,zero,14a044 <___vfiprintf_internal_r+0x9f0>
  14a0cc:	e080040c 	andi	r2,fp,16
  14a0d0:	10017e26 	beq	r2,zero,14a6cc <___vfiprintf_internal_r+0x1078>
  14a0d4:	da412317 	ldw	r9,1164(sp)
  14a0d8:	0017883a 	mov	r11,zero
  14a0dc:	4c400017 	ldw	r17,0(r9)
  14a0e0:	4a400104 	addi	r9,r9,4
  14a0e4:	da412315 	stw	r9,1164(sp)
  14a0e8:	003fdb06 	br	14a058 <___vfiprintf_internal_r+0xa04>
  14a0ec:	d9811d85 	stb	r6,1142(sp)
  14a0f0:	e080080c 	andi	r2,fp,32
  14a0f4:	103f591e 	bne	r2,zero,149e5c <___vfiprintf_internal_r+0x808>
  14a0f8:	e080040c 	andi	r2,fp,16
  14a0fc:	10017b26 	beq	r2,zero,14a6ec <___vfiprintf_internal_r+0x1098>
  14a100:	da412317 	ldw	r9,1164(sp)
  14a104:	4c400017 	ldw	r17,0(r9)
  14a108:	4a400104 	addi	r9,r9,4
  14a10c:	da412315 	stw	r9,1164(sp)
  14a110:	8817d7fa 	srai	r11,r17,31
  14a114:	5805883a 	mov	r2,r11
  14a118:	003f5606 	br	149e74 <___vfiprintf_internal_r+0x820>
  14a11c:	01800ac4 	movi	r6,43
  14a120:	a8c00007 	ldb	r3,0(r21)
  14a124:	003dab06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a128:	d9811d85 	stb	r6,1142(sp)
  14a12c:	18018f26 	beq	r3,zero,14a76c <___vfiprintf_internal_r+0x1118>
  14a130:	04400044 	movi	r17,1
  14a134:	d8c10005 	stb	r3,1024(sp)
  14a138:	d8011d85 	stb	zero,1142(sp)
  14a13c:	8825883a 	mov	r18,r17
  14a140:	dcc10004 	addi	r19,sp,1024
  14a144:	0015883a 	mov	r10,zero
  14a148:	003e2e06 	br	149a04 <___vfiprintf_internal_r+0x3b0>
  14a14c:	d9012117 	ldw	r4,1156(sp)
  14a150:	d9412217 	ldw	r5,1160(sp)
  14a154:	d9811a04 	addi	r6,sp,1128
  14a158:	d9c12b15 	stw	r7,1196(sp)
  14a15c:	dac12a15 	stw	r11,1192(sp)
  14a160:	01495400 	call	149540 <__sprint_r.part.0>
  14a164:	d9c12b17 	ldw	r7,1196(sp)
  14a168:	dac12a17 	ldw	r11,1192(sp)
  14a16c:	10004f1e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a170:	d9811b17 	ldw	r6,1132(sp)
  14a174:	d8811c17 	ldw	r2,1136(sp)
  14a178:	d811883a 	mov	r8,sp
  14a17c:	31000044 	addi	r4,r6,1
  14a180:	003e3806 	br	149a64 <___vfiprintf_internal_r+0x410>
  14a184:	d9011b17 	ldw	r4,1132(sp)
  14a188:	d8811c17 	ldw	r2,1136(sp)
  14a18c:	21800044 	addi	r6,r4,1
  14a190:	d8c11d87 	ldb	r3,1142(sp)
  14a194:	183e5226 	beq	r3,zero,149ae0 <___vfiprintf_internal_r+0x48c>
  14a198:	00c00044 	movi	r3,1
  14a19c:	d9011d84 	addi	r4,sp,1142
  14a1a0:	10c5883a 	add	r2,r2,r3
  14a1a4:	81000015 	stw	r4,0(r16)
  14a1a8:	80c00115 	stw	r3,4(r16)
  14a1ac:	d8811c15 	stw	r2,1136(sp)
  14a1b0:	d9811b15 	stw	r6,1132(sp)
  14a1b4:	010001c4 	movi	r4,7
  14a1b8:	21809016 	blt	r4,r6,14a3fc <___vfiprintf_internal_r+0xda8>
  14a1bc:	3009883a 	mov	r4,r6
  14a1c0:	84000204 	addi	r16,r16,8
  14a1c4:	30cd883a 	add	r6,r6,r3
  14a1c8:	003e4506 	br	149ae0 <___vfiprintf_internal_r+0x48c>
  14a1cc:	d9012117 	ldw	r4,1156(sp)
  14a1d0:	d9412217 	ldw	r5,1160(sp)
  14a1d4:	d9811a04 	addi	r6,sp,1128
  14a1d8:	d8c12a15 	stw	r3,1192(sp)
  14a1dc:	d9c12b15 	stw	r7,1196(sp)
  14a1e0:	01495400 	call	149540 <__sprint_r.part.0>
  14a1e4:	d8c12a17 	ldw	r3,1192(sp)
  14a1e8:	d9c12b17 	ldw	r7,1196(sp)
  14a1ec:	10002f1e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a1f0:	d9011b17 	ldw	r4,1132(sp)
  14a1f4:	d8811c17 	ldw	r2,1136(sp)
  14a1f8:	d821883a 	mov	r16,sp
  14a1fc:	21800044 	addi	r6,r4,1
  14a200:	003e5206 	br	149b4c <___vfiprintf_internal_r+0x4f8>
  14a204:	00c00044 	movi	r3,1
  14a208:	10c0a126 	beq	r2,r3,14a490 <___vfiprintf_internal_r+0xe3c>
  14a20c:	00c00084 	movi	r3,2
  14a210:	10c0841e 	bne	r2,r3,14a424 <___vfiprintf_internal_r+0xdd0>
  14a214:	d9412617 	ldw	r5,1176(sp)
  14a218:	d88109c4 	addi	r2,sp,1063
  14a21c:	88c003cc 	andi	r3,r17,15
  14a220:	5808973a 	slli	r4,r11,28
  14a224:	28c7883a 	add	r3,r5,r3
  14a228:	8822d13a 	srli	r17,r17,4
  14a22c:	18c00003 	ldbu	r3,0(r3)
  14a230:	5816d13a 	srli	r11,r11,4
  14a234:	2462b03a 	or	r17,r4,r17
  14a238:	10c00005 	stb	r3,0(r2)
  14a23c:	8ac6b03a 	or	r3,r17,r11
  14a240:	1027883a 	mov	r19,r2
  14a244:	10bfffc4 	addi	r2,r2,-1
  14a248:	183ff41e 	bne	r3,zero,14a21c <___vfiprintf_internal_r+0xbc8>
  14a24c:	da411f17 	ldw	r9,1148(sp)
  14a250:	4ce5c83a 	sub	r18,r9,r19
  14a254:	003de306 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a258:	d9012117 	ldw	r4,1156(sp)
  14a25c:	d9412217 	ldw	r5,1160(sp)
  14a260:	d9811a04 	addi	r6,sp,1128
  14a264:	01495400 	call	149540 <__sprint_r.part.0>
  14a268:	1000101e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a26c:	d8811c17 	ldw	r2,1136(sp)
  14a270:	da412017 	ldw	r9,1152(sp)
  14a274:	8a40010e 	bge	r17,r9,14a27c <___vfiprintf_internal_r+0xc28>
  14a278:	4823883a 	mov	r17,r9
  14a27c:	da412417 	ldw	r9,1168(sp)
  14a280:	4c53883a 	add	r9,r9,r17
  14a284:	da412415 	stw	r9,1168(sp)
  14a288:	10000526 	beq	r2,zero,14a2a0 <___vfiprintf_internal_r+0xc4c>
  14a28c:	d9012117 	ldw	r4,1156(sp)
  14a290:	d9412217 	ldw	r5,1160(sp)
  14a294:	d9811a04 	addi	r6,sp,1128
  14a298:	01495400 	call	149540 <__sprint_r.part.0>
  14a29c:	1000031e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a2a0:	d8011b15 	stw	zero,1132(sp)
  14a2a4:	d821883a 	mov	r16,sp
  14a2a8:	003d2106 	br	149730 <___vfiprintf_internal_r+0xdc>
  14a2ac:	dcc12217 	ldw	r19,1160(sp)
  14a2b0:	9880030b 	ldhu	r2,12(r19)
  14a2b4:	1080100c 	andi	r2,r2,64
  14a2b8:	103eb51e 	bne	r2,zero,149d90 <___vfiprintf_internal_r+0x73c>
  14a2bc:	d8812417 	ldw	r2,1168(sp)
  14a2c0:	003eb406 	br	149d94 <___vfiprintf_internal_r+0x740>
  14a2c4:	d9412217 	ldw	r5,1160(sp)
  14a2c8:	b009883a 	mov	r4,r22
  14a2cc:	d9811a04 	addi	r6,sp,1128
  14a2d0:	01495400 	call	149540 <__sprint_r.part.0>
  14a2d4:	103ff51e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a2d8:	d9011b17 	ldw	r4,1132(sp)
  14a2dc:	d8811c17 	ldw	r2,1136(sp)
  14a2e0:	d821883a 	mov	r16,sp
  14a2e4:	21400044 	addi	r5,r4,1
  14a2e8:	003e4d06 	br	149c20 <___vfiprintf_internal_r+0x5cc>
  14a2ec:	1000c11e 	bne	r2,zero,14a5f4 <___vfiprintf_internal_r+0xfa0>
  14a2f0:	00800044 	movi	r2,1
  14a2f4:	d8811b15 	stw	r2,1132(sp)
  14a2f8:	dcc00015 	stw	r19,0(sp)
  14a2fc:	dc800115 	stw	r18,4(sp)
  14a300:	dc811c15 	stw	r18,1136(sp)
  14a304:	9005883a 	mov	r2,r18
  14a308:	d821883a 	mov	r16,sp
  14a30c:	84000204 	addi	r16,r16,8
  14a310:	003e3106 	br	149bd8 <___vfiprintf_internal_r+0x584>
  14a314:	da412017 	ldw	r9,1152(sp)
  14a318:	4c6dc83a 	sub	r22,r9,r17
  14a31c:	05bdff0e 	bge	zero,r22,149b1c <___vfiprintf_internal_r+0x4c8>
  14a320:	01c00404 	movi	r7,16
  14a324:	3d814e0e 	bge	r7,r22,14a860 <___vfiprintf_internal_r+0x120c>
  14a328:	00c00574 	movhi	r3,21
  14a32c:	18c4ac04 	addi	r3,r3,4784
  14a330:	800b883a 	mov	r5,r16
  14a334:	d8c12515 	stw	r3,1172(sp)
  14a338:	02c001c4 	movi	r11,7
  14a33c:	5021883a 	mov	r16,r10
  14a340:	00000506 	br	14a358 <___vfiprintf_internal_r+0xd04>
  14a344:	23800084 	addi	r14,r4,2
  14a348:	29400204 	addi	r5,r5,8
  14a34c:	1809883a 	mov	r4,r3
  14a350:	b5bffc04 	addi	r22,r22,-16
  14a354:	3d800d0e 	bge	r7,r22,14a38c <___vfiprintf_internal_r+0xd38>
  14a358:	10800404 	addi	r2,r2,16
  14a35c:	20c00044 	addi	r3,r4,1
  14a360:	2dc00015 	stw	r23,0(r5)
  14a364:	29c00115 	stw	r7,4(r5)
  14a368:	d8811c15 	stw	r2,1136(sp)
  14a36c:	d8c11b15 	stw	r3,1132(sp)
  14a370:	58fff40e 	bge	r11,r3,14a344 <___vfiprintf_internal_r+0xcf0>
  14a374:	1000131e 	bne	r2,zero,14a3c4 <___vfiprintf_internal_r+0xd70>
  14a378:	b5bffc04 	addi	r22,r22,-16
  14a37c:	0009883a 	mov	r4,zero
  14a380:	03800044 	movi	r14,1
  14a384:	d80b883a 	mov	r5,sp
  14a388:	3dbff316 	blt	r7,r22,14a358 <___vfiprintf_internal_r+0xd04>
  14a38c:	8015883a 	mov	r10,r16
  14a390:	2821883a 	mov	r16,r5
  14a394:	d8c12517 	ldw	r3,1172(sp)
  14a398:	1585883a 	add	r2,r2,r22
  14a39c:	85800115 	stw	r22,4(r16)
  14a3a0:	80c00015 	stw	r3,0(r16)
  14a3a4:	d8811c15 	stw	r2,1136(sp)
  14a3a8:	db811b15 	stw	r14,1132(sp)
  14a3ac:	00c001c4 	movi	r3,7
  14a3b0:	1b808b16 	blt	r3,r14,14a5e0 <___vfiprintf_internal_r+0xf8c>
  14a3b4:	84000204 	addi	r16,r16,8
  14a3b8:	71800044 	addi	r6,r14,1
  14a3bc:	7009883a 	mov	r4,r14
  14a3c0:	003dd606 	br	149b1c <___vfiprintf_internal_r+0x4c8>
  14a3c4:	d9012117 	ldw	r4,1156(sp)
  14a3c8:	d9412217 	ldw	r5,1160(sp)
  14a3cc:	d9811a04 	addi	r6,sp,1128
  14a3d0:	d9c12b15 	stw	r7,1196(sp)
  14a3d4:	dac12a15 	stw	r11,1192(sp)
  14a3d8:	01495400 	call	149540 <__sprint_r.part.0>
  14a3dc:	d9c12b17 	ldw	r7,1196(sp)
  14a3e0:	dac12a17 	ldw	r11,1192(sp)
  14a3e4:	103fb11e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a3e8:	d9011b17 	ldw	r4,1132(sp)
  14a3ec:	d8811c17 	ldw	r2,1136(sp)
  14a3f0:	d80b883a 	mov	r5,sp
  14a3f4:	23800044 	addi	r14,r4,1
  14a3f8:	003fd506 	br	14a350 <___vfiprintf_internal_r+0xcfc>
  14a3fc:	10005e1e 	bne	r2,zero,14a578 <___vfiprintf_internal_r+0xf24>
  14a400:	0009883a 	mov	r4,zero
  14a404:	180d883a 	mov	r6,r3
  14a408:	d821883a 	mov	r16,sp
  14a40c:	003db406 	br	149ae0 <___vfiprintf_internal_r+0x48c>
  14a410:	1000671e 	bne	r2,zero,14a5b0 <___vfiprintf_internal_r+0xf5c>
  14a414:	0009883a 	mov	r4,zero
  14a418:	01800044 	movi	r6,1
  14a41c:	d821883a 	mov	r16,sp
  14a420:	003dbc06 	br	149b14 <___vfiprintf_internal_r+0x4c0>
  14a424:	d8c109c4 	addi	r3,sp,1063
  14a428:	8808d0fa 	srli	r4,r17,3
  14a42c:	580a977a 	slli	r5,r11,29
  14a430:	5816d0fa 	srli	r11,r11,3
  14a434:	8c4001cc 	andi	r17,r17,7
  14a438:	88800c04 	addi	r2,r17,48
  14a43c:	2922b03a 	or	r17,r5,r4
  14a440:	18800005 	stb	r2,0(r3)
  14a444:	8ac8b03a 	or	r4,r17,r11
  14a448:	1827883a 	mov	r19,r3
  14a44c:	18ffffc4 	addi	r3,r3,-1
  14a450:	203ff51e 	bne	r4,zero,14a428 <___vfiprintf_internal_r+0xdd4>
  14a454:	e100004c 	andi	r4,fp,1
  14a458:	980b883a 	mov	r5,r19
  14a45c:	203f7b26 	beq	r4,zero,14a24c <___vfiprintf_internal_r+0xbf8>
  14a460:	10803fcc 	andi	r2,r2,255
  14a464:	1080201c 	xori	r2,r2,128
  14a468:	10bfe004 	addi	r2,r2,-128
  14a46c:	01000c04 	movi	r4,48
  14a470:	113f7626 	beq	r2,r4,14a24c <___vfiprintf_internal_r+0xbf8>
  14a474:	da411f17 	ldw	r9,1148(sp)
  14a478:	1827883a 	mov	r19,r3
  14a47c:	293fffc5 	stb	r4,-1(r5)
  14a480:	48e5c83a 	sub	r18,r9,r3
  14a484:	003d5706 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a488:	dcc10a04 	addi	r19,sp,1064
  14a48c:	003d5506 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a490:	5800021e 	bne	r11,zero,14a49c <___vfiprintf_internal_r+0xe48>
  14a494:	00800244 	movi	r2,9
  14a498:	14401b2e 	bgeu	r2,r17,14a508 <___vfiprintf_internal_r+0xeb4>
  14a49c:	dc012515 	stw	r16,1172(sp)
  14a4a0:	d88109c4 	addi	r2,sp,1063
  14a4a4:	5025883a 	mov	r18,r10
  14a4a8:	5821883a 	mov	r16,r11
  14a4ac:	8809883a 	mov	r4,r17
  14a4b0:	800b883a 	mov	r5,r16
  14a4b4:	01800284 	movi	r6,10
  14a4b8:	000f883a 	mov	r7,zero
  14a4bc:	1027883a 	mov	r19,r2
  14a4c0:	014b8b80 	call	14b8b8 <__umoddi3>
  14a4c4:	10800c04 	addi	r2,r2,48
  14a4c8:	8809883a 	mov	r4,r17
  14a4cc:	800b883a 	mov	r5,r16
  14a4d0:	98800005 	stb	r2,0(r19)
  14a4d4:	01800284 	movi	r6,10
  14a4d8:	000f883a 	mov	r7,zero
  14a4dc:	014b2f40 	call	14b2f4 <__udivdi3>
  14a4e0:	1821883a 	mov	r16,r3
  14a4e4:	10c6b03a 	or	r3,r2,r3
  14a4e8:	1023883a 	mov	r17,r2
  14a4ec:	98bfffc4 	addi	r2,r19,-1
  14a4f0:	183fee1e 	bne	r3,zero,14a4ac <___vfiprintf_internal_r+0xe58>
  14a4f4:	da411f17 	ldw	r9,1148(sp)
  14a4f8:	9015883a 	mov	r10,r18
  14a4fc:	dc012517 	ldw	r16,1172(sp)
  14a500:	4ce5c83a 	sub	r18,r9,r19
  14a504:	003d3706 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a508:	8c400c04 	addi	r17,r17,48
  14a50c:	dc4109c5 	stb	r17,1063(sp)
  14a510:	dc812717 	ldw	r18,1180(sp)
  14a514:	dcc109c4 	addi	r19,sp,1063
  14a518:	003d3206 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a51c:	10007c1e 	bne	r2,zero,14a710 <___vfiprintf_internal_r+0x10bc>
  14a520:	0009883a 	mov	r4,zero
  14a524:	01800044 	movi	r6,1
  14a528:	d821883a 	mov	r16,sp
  14a52c:	003f1806 	br	14a190 <___vfiprintf_internal_r+0xb3c>
  14a530:	d9012117 	ldw	r4,1156(sp)
  14a534:	d9412217 	ldw	r5,1160(sp)
  14a538:	d9811a04 	addi	r6,sp,1128
  14a53c:	01495400 	call	149540 <__sprint_r.part.0>
  14a540:	103f5a1e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a544:	d8811c17 	ldw	r2,1136(sp)
  14a548:	d821883a 	mov	r16,sp
  14a54c:	003da206 	br	149bd8 <___vfiprintf_internal_r+0x584>
  14a550:	00800084 	movi	r2,2
  14a554:	8ac8b03a 	or	r4,r17,r11
  14a558:	003dd906 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  14a55c:	d9012117 	ldw	r4,1156(sp)
  14a560:	d9412217 	ldw	r5,1160(sp)
  14a564:	d9811a04 	addi	r6,sp,1128
  14a568:	01495400 	call	149540 <__sprint_r.part.0>
  14a56c:	103f4f1e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a570:	d821883a 	mov	r16,sp
  14a574:	003cfb06 	br	149964 <___vfiprintf_internal_r+0x310>
  14a578:	d9012117 	ldw	r4,1156(sp)
  14a57c:	d9412217 	ldw	r5,1160(sp)
  14a580:	d9811a04 	addi	r6,sp,1128
  14a584:	da812b15 	stw	r10,1196(sp)
  14a588:	db812a15 	stw	r14,1192(sp)
  14a58c:	01495400 	call	149540 <__sprint_r.part.0>
  14a590:	da812b17 	ldw	r10,1196(sp)
  14a594:	db812a17 	ldw	r14,1192(sp)
  14a598:	103f441e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a59c:	d9011b17 	ldw	r4,1132(sp)
  14a5a0:	d8811c17 	ldw	r2,1136(sp)
  14a5a4:	d821883a 	mov	r16,sp
  14a5a8:	21800044 	addi	r6,r4,1
  14a5ac:	003d4c06 	br	149ae0 <___vfiprintf_internal_r+0x48c>
  14a5b0:	d9012117 	ldw	r4,1156(sp)
  14a5b4:	d9412217 	ldw	r5,1160(sp)
  14a5b8:	d9811a04 	addi	r6,sp,1128
  14a5bc:	da812b15 	stw	r10,1196(sp)
  14a5c0:	01495400 	call	149540 <__sprint_r.part.0>
  14a5c4:	da812b17 	ldw	r10,1196(sp)
  14a5c8:	103f381e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a5cc:	d9011b17 	ldw	r4,1132(sp)
  14a5d0:	d8811c17 	ldw	r2,1136(sp)
  14a5d4:	d821883a 	mov	r16,sp
  14a5d8:	21800044 	addi	r6,r4,1
  14a5dc:	003d4d06 	br	149b14 <___vfiprintf_internal_r+0x4c0>
  14a5e0:	1000761e 	bne	r2,zero,14a7bc <___vfiprintf_internal_r+0x1168>
  14a5e4:	0009883a 	mov	r4,zero
  14a5e8:	01800044 	movi	r6,1
  14a5ec:	d821883a 	mov	r16,sp
  14a5f0:	003d4a06 	br	149b1c <___vfiprintf_internal_r+0x4c8>
  14a5f4:	d9012117 	ldw	r4,1156(sp)
  14a5f8:	d9412217 	ldw	r5,1160(sp)
  14a5fc:	d9811a04 	addi	r6,sp,1128
  14a600:	01495400 	call	149540 <__sprint_r.part.0>
  14a604:	103f291e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a608:	d9811b17 	ldw	r6,1132(sp)
  14a60c:	d8811c17 	ldw	r2,1136(sp)
  14a610:	d821883a 	mov	r16,sp
  14a614:	31800044 	addi	r6,r6,1
  14a618:	003d6506 	br	149bb0 <___vfiprintf_internal_r+0x55c>
  14a61c:	a823883a 	mov	r17,r21
  14a620:	003c5f06 	br	1497a0 <___vfiprintf_internal_r+0x14c>
  14a624:	0463c83a 	sub	r17,zero,r17
  14a628:	8804c03a 	cmpne	r2,r17,zero
  14a62c:	02d7c83a 	sub	r11,zero,r11
  14a630:	5897c83a 	sub	r11,r11,r2
  14a634:	05800b44 	movi	r22,45
  14a638:	dd811d85 	stb	r22,1142(sp)
  14a63c:	5025883a 	mov	r18,r10
  14a640:	00800044 	movi	r2,1
  14a644:	8ac8b03a 	or	r4,r17,r11
  14a648:	003cd906 	br	1499b0 <___vfiprintf_internal_r+0x35c>
  14a64c:	00800084 	movi	r2,2
  14a650:	003d9b06 	br	149cc0 <___vfiprintf_internal_r+0x66c>
  14a654:	e080100c 	andi	r2,fp,64
  14a658:	da412317 	ldw	r9,1164(sp)
  14a65c:	103de526 	beq	r2,zero,149df4 <___vfiprintf_internal_r+0x7a0>
  14a660:	4c40000b 	ldhu	r17,0(r9)
  14a664:	003de406 	br	149df8 <___vfiprintf_internal_r+0x7a4>
  14a668:	e080100c 	andi	r2,fp,64
  14a66c:	da412317 	ldw	r9,1164(sp)
  14a670:	103cc626 	beq	r2,zero,14998c <___vfiprintf_internal_r+0x338>
  14a674:	4c40000b 	ldhu	r17,0(r9)
  14a678:	003cc506 	br	149990 <___vfiprintf_internal_r+0x33c>
  14a67c:	a8c00007 	ldb	r3,0(r21)
  14a680:	003c5406 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a684:	e080040c 	andi	r2,fp,16
  14a688:	1000091e 	bne	r2,zero,14a6b0 <___vfiprintf_internal_r+0x105c>
  14a68c:	e280100c 	andi	r10,fp,64
  14a690:	50000726 	beq	r10,zero,14a6b0 <___vfiprintf_internal_r+0x105c>
  14a694:	da412317 	ldw	r9,1164(sp)
  14a698:	48800017 	ldw	r2,0(r9)
  14a69c:	4a400104 	addi	r9,r9,4
  14a6a0:	da412315 	stw	r9,1164(sp)
  14a6a4:	da412417 	ldw	r9,1168(sp)
  14a6a8:	1240000d 	sth	r9,0(r2)
  14a6ac:	003c2006 	br	149730 <___vfiprintf_internal_r+0xdc>
  14a6b0:	da412317 	ldw	r9,1164(sp)
  14a6b4:	48800017 	ldw	r2,0(r9)
  14a6b8:	4a400104 	addi	r9,r9,4
  14a6bc:	da412315 	stw	r9,1164(sp)
  14a6c0:	da412417 	ldw	r9,1168(sp)
  14a6c4:	12400015 	stw	r9,0(r2)
  14a6c8:	003c1906 	br	149730 <___vfiprintf_internal_r+0xdc>
  14a6cc:	e080100c 	andi	r2,fp,64
  14a6d0:	da412317 	ldw	r9,1164(sp)
  14a6d4:	10002026 	beq	r2,zero,14a758 <___vfiprintf_internal_r+0x1104>
  14a6d8:	4c40000b 	ldhu	r17,0(r9)
  14a6dc:	4a400104 	addi	r9,r9,4
  14a6e0:	0017883a 	mov	r11,zero
  14a6e4:	da412315 	stw	r9,1164(sp)
  14a6e8:	003e5b06 	br	14a058 <___vfiprintf_internal_r+0xa04>
  14a6ec:	e080100c 	andi	r2,fp,64
  14a6f0:	da412317 	ldw	r9,1164(sp)
  14a6f4:	103e8326 	beq	r2,zero,14a104 <___vfiprintf_internal_r+0xab0>
  14a6f8:	4c40000f 	ldh	r17,0(r9)
  14a6fc:	4a400104 	addi	r9,r9,4
  14a700:	da412315 	stw	r9,1164(sp)
  14a704:	8817d7fa 	srai	r11,r17,31
  14a708:	5805883a 	mov	r2,r11
  14a70c:	003dd906 	br	149e74 <___vfiprintf_internal_r+0x820>
  14a710:	d9012117 	ldw	r4,1156(sp)
  14a714:	d9412217 	ldw	r5,1160(sp)
  14a718:	d9811a04 	addi	r6,sp,1128
  14a71c:	da812b15 	stw	r10,1196(sp)
  14a720:	db812a15 	stw	r14,1192(sp)
  14a724:	01495400 	call	149540 <__sprint_r.part.0>
  14a728:	da812b17 	ldw	r10,1196(sp)
  14a72c:	db812a17 	ldw	r14,1192(sp)
  14a730:	103ede1e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a734:	d9011b17 	ldw	r4,1132(sp)
  14a738:	d8811c17 	ldw	r2,1136(sp)
  14a73c:	d821883a 	mov	r16,sp
  14a740:	21800044 	addi	r6,r4,1
  14a744:	003e9206 	br	14a190 <___vfiprintf_internal_r+0xb3c>
  14a748:	4823883a 	mov	r17,r9
  14a74c:	003d4e06 	br	149c88 <___vfiprintf_internal_r+0x634>
  14a750:	5025883a 	mov	r18,r10
  14a754:	003e0b06 	br	149f84 <___vfiprintf_internal_r+0x930>
  14a758:	4c400017 	ldw	r17,0(r9)
  14a75c:	4a400104 	addi	r9,r9,4
  14a760:	0017883a 	mov	r11,zero
  14a764:	da412315 	stw	r9,1164(sp)
  14a768:	003e3b06 	br	14a058 <___vfiprintf_internal_r+0xa04>
  14a76c:	d8811c17 	ldw	r2,1136(sp)
  14a770:	dcc12217 	ldw	r19,1160(sp)
  14a774:	103ece26 	beq	r2,zero,14a2b0 <___vfiprintf_internal_r+0xc5c>
  14a778:	d9012117 	ldw	r4,1156(sp)
  14a77c:	980b883a 	mov	r5,r19
  14a780:	d9811a04 	addi	r6,sp,1128
  14a784:	01495400 	call	149540 <__sprint_r.part.0>
  14a788:	003ec906 	br	14a2b0 <___vfiprintf_internal_r+0xc5c>
  14a78c:	ad400044 	addi	r21,r21,1
  14a790:	e7000814 	ori	fp,fp,32
  14a794:	10c00047 	ldb	r3,1(r2)
  14a798:	003c0e06 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a79c:	d8c12a15 	stw	r3,1192(sp)
  14a7a0:	01424a80 	call	1424a8 <strlen>
  14a7a4:	d8c12a17 	ldw	r3,1192(sp)
  14a7a8:	1025883a 	mov	r18,r2
  14a7ac:	dd811d83 	ldbu	r22,1142(sp)
  14a7b0:	d8c12315 	stw	r3,1164(sp)
  14a7b4:	0015883a 	mov	r10,zero
  14a7b8:	003c8a06 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a7bc:	d9012117 	ldw	r4,1156(sp)
  14a7c0:	d9412217 	ldw	r5,1160(sp)
  14a7c4:	d9811a04 	addi	r6,sp,1128
  14a7c8:	da812b15 	stw	r10,1196(sp)
  14a7cc:	01495400 	call	149540 <__sprint_r.part.0>
  14a7d0:	da812b17 	ldw	r10,1196(sp)
  14a7d4:	103eb51e 	bne	r2,zero,14a2ac <___vfiprintf_internal_r+0xc58>
  14a7d8:	d9011b17 	ldw	r4,1132(sp)
  14a7dc:	d8811c17 	ldw	r2,1136(sp)
  14a7e0:	d821883a 	mov	r16,sp
  14a7e4:	21800044 	addi	r6,r4,1
  14a7e8:	003ccc06 	br	149b1c <___vfiprintf_internal_r+0x4c8>
  14a7ec:	d9011b17 	ldw	r4,1132(sp)
  14a7f0:	02400574 	movhi	r9,21
  14a7f4:	4a44b004 	addi	r9,r9,4800
  14a7f8:	da412515 	stw	r9,1172(sp)
  14a7fc:	21000044 	addi	r4,r4,1
  14a800:	003cab06 	br	149ab0 <___vfiprintf_internal_r+0x45c>
  14a804:	00800184 	movi	r2,6
  14a808:	5019883a 	mov	r12,r10
  14a80c:	1280012e 	bgeu	r2,r10,14a814 <___vfiprintf_internal_r+0x11c0>
  14a810:	1019883a 	mov	r12,r2
  14a814:	6025883a 	mov	r18,r12
  14a818:	6023883a 	mov	r17,r12
  14a81c:	60001516 	blt	r12,zero,14a874 <___vfiprintf_internal_r+0x1220>
  14a820:	d8c12315 	stw	r3,1164(sp)
  14a824:	04c00574 	movhi	r19,21
  14a828:	9cc45004 	addi	r19,r19,4416
  14a82c:	0015883a 	mov	r10,zero
  14a830:	003c7406 	br	149a04 <___vfiprintf_internal_r+0x3b0>
  14a834:	d9411b17 	ldw	r5,1132(sp)
  14a838:	00c00574 	movhi	r3,21
  14a83c:	18c4b004 	addi	r3,r3,4800
  14a840:	d8c12515 	stw	r3,1172(sp)
  14a844:	29400044 	addi	r5,r5,1
  14a848:	003d0406 	br	149c5c <___vfiprintf_internal_r+0x608>
  14a84c:	5025883a 	mov	r18,r10
  14a850:	dd811d83 	ldbu	r22,1142(sp)
  14a854:	d8c12315 	stw	r3,1164(sp)
  14a858:	0015883a 	mov	r10,zero
  14a85c:	003c6106 	br	1499e4 <___vfiprintf_internal_r+0x390>
  14a860:	02400574 	movhi	r9,21
  14a864:	4a44ac04 	addi	r9,r9,4784
  14a868:	301d883a 	mov	r14,r6
  14a86c:	da412515 	stw	r9,1172(sp)
  14a870:	003ec806 	br	14a394 <___vfiprintf_internal_r+0xd40>
  14a874:	0023883a 	mov	r17,zero
  14a878:	003fe906 	br	14a820 <___vfiprintf_internal_r+0x11cc>
  14a87c:	043fffc4 	movi	r16,-1
  14a880:	003d3b06 	br	149d70 <___vfiprintf_internal_r+0x71c>
  14a884:	d8812317 	ldw	r2,1164(sp)
  14a888:	a8c00043 	ldbu	r3,1(r21)
  14a88c:	482b883a 	mov	r21,r9
  14a890:	12800017 	ldw	r10,0(r2)
  14a894:	10800104 	addi	r2,r2,4
  14a898:	d8812315 	stw	r2,1164(sp)
  14a89c:	50000416 	blt	r10,zero,14a8b0 <___vfiprintf_internal_r+0x125c>
  14a8a0:	18c03fcc 	andi	r3,r3,255
  14a8a4:	18c0201c 	xori	r3,r3,128
  14a8a8:	18ffe004 	addi	r3,r3,-128
  14a8ac:	003bc906 	br	1497d4 <___vfiprintf_internal_r+0x180>
  14a8b0:	18c03fcc 	andi	r3,r3,255
  14a8b4:	18c0201c 	xori	r3,r3,128
  14a8b8:	02bfffc4 	movi	r10,-1
  14a8bc:	18ffe004 	addi	r3,r3,-128
  14a8c0:	003bc406 	br	1497d4 <___vfiprintf_internal_r+0x180>

0014a8c4 <__vfiprintf_internal>:
  14a8c4:	00800574 	movhi	r2,21
  14a8c8:	108bab04 	addi	r2,r2,11948
  14a8cc:	2007883a 	mov	r3,r4
  14a8d0:	11000017 	ldw	r4,0(r2)
  14a8d4:	2805883a 	mov	r2,r5
  14a8d8:	300f883a 	mov	r7,r6
  14a8dc:	180b883a 	mov	r5,r3
  14a8e0:	100d883a 	mov	r6,r2
  14a8e4:	01496541 	jmpi	149654 <___vfiprintf_internal_r>

0014a8e8 <__swbuf_r>:
  14a8e8:	defffc04 	addi	sp,sp,-16
  14a8ec:	dc800215 	stw	r18,8(sp)
  14a8f0:	dc400115 	stw	r17,4(sp)
  14a8f4:	dc000015 	stw	r16,0(sp)
  14a8f8:	dfc00315 	stw	ra,12(sp)
  14a8fc:	2023883a 	mov	r17,r4
  14a900:	2825883a 	mov	r18,r5
  14a904:	3021883a 	mov	r16,r6
  14a908:	20000226 	beq	r4,zero,14a914 <__swbuf_r+0x2c>
  14a90c:	20800e17 	ldw	r2,56(r4)
  14a910:	10004d26 	beq	r2,zero,14aa48 <__swbuf_r+0x160>
  14a914:	80800617 	ldw	r2,24(r16)
  14a918:	80c0030b 	ldhu	r3,12(r16)
  14a91c:	80800215 	stw	r2,8(r16)
  14a920:	1880020c 	andi	r2,r3,8
  14a924:	10004126 	beq	r2,zero,14aa2c <__swbuf_r+0x144>
  14a928:	80800417 	ldw	r2,16(r16)
  14a92c:	10003f26 	beq	r2,zero,14aa2c <__swbuf_r+0x144>
  14a930:	1908000c 	andi	r4,r3,8192
  14a934:	94803fcc 	andi	r18,r18,255
  14a938:	20001726 	beq	r4,zero,14a998 <__swbuf_r+0xb0>
  14a93c:	80c00017 	ldw	r3,0(r16)
  14a940:	81000517 	ldw	r4,20(r16)
  14a944:	1885c83a 	sub	r2,r3,r2
  14a948:	11001d0e 	bge	r2,r4,14a9c0 <__swbuf_r+0xd8>
  14a94c:	81000217 	ldw	r4,8(r16)
  14a950:	19400044 	addi	r5,r3,1
  14a954:	81400015 	stw	r5,0(r16)
  14a958:	213fffc4 	addi	r4,r4,-1
  14a95c:	81000215 	stw	r4,8(r16)
  14a960:	1c800005 	stb	r18,0(r3)
  14a964:	80c00517 	ldw	r3,20(r16)
  14a968:	10800044 	addi	r2,r2,1
  14a96c:	18802226 	beq	r3,r2,14a9f8 <__swbuf_r+0x110>
  14a970:	8080030b 	ldhu	r2,12(r16)
  14a974:	1080004c 	andi	r2,r2,1
  14a978:	1000251e 	bne	r2,zero,14aa10 <__swbuf_r+0x128>
  14a97c:	9005883a 	mov	r2,r18
  14a980:	dfc00317 	ldw	ra,12(sp)
  14a984:	dc800217 	ldw	r18,8(sp)
  14a988:	dc400117 	ldw	r17,4(sp)
  14a98c:	dc000017 	ldw	r16,0(sp)
  14a990:	dec00404 	addi	sp,sp,16
  14a994:	f800283a 	ret
  14a998:	81401917 	ldw	r5,100(r16)
  14a99c:	18c80014 	ori	r3,r3,8192
  14a9a0:	0137ffc4 	movi	r4,-8193
  14a9a4:	2908703a 	and	r4,r5,r4
  14a9a8:	80c0030d 	sth	r3,12(r16)
  14a9ac:	80c00017 	ldw	r3,0(r16)
  14a9b0:	81001915 	stw	r4,100(r16)
  14a9b4:	81000517 	ldw	r4,20(r16)
  14a9b8:	1885c83a 	sub	r2,r3,r2
  14a9bc:	113fe316 	blt	r2,r4,14a94c <__swbuf_r+0x64>
  14a9c0:	8809883a 	mov	r4,r17
  14a9c4:	800b883a 	mov	r5,r16
  14a9c8:	0145eac0 	call	145eac <_fflush_r>
  14a9cc:	10000e1e 	bne	r2,zero,14aa08 <__swbuf_r+0x120>
  14a9d0:	80c00017 	ldw	r3,0(r16)
  14a9d4:	81000217 	ldw	r4,8(r16)
  14a9d8:	00800044 	movi	r2,1
  14a9dc:	19400044 	addi	r5,r3,1
  14a9e0:	213fffc4 	addi	r4,r4,-1
  14a9e4:	81400015 	stw	r5,0(r16)
  14a9e8:	81000215 	stw	r4,8(r16)
  14a9ec:	1c800005 	stb	r18,0(r3)
  14a9f0:	80c00517 	ldw	r3,20(r16)
  14a9f4:	18bfde1e 	bne	r3,r2,14a970 <__swbuf_r+0x88>
  14a9f8:	8809883a 	mov	r4,r17
  14a9fc:	800b883a 	mov	r5,r16
  14aa00:	0145eac0 	call	145eac <_fflush_r>
  14aa04:	103fdd26 	beq	r2,zero,14a97c <__swbuf_r+0x94>
  14aa08:	00bfffc4 	movi	r2,-1
  14aa0c:	003fdc06 	br	14a980 <__swbuf_r+0x98>
  14aa10:	00800284 	movi	r2,10
  14aa14:	90bfd91e 	bne	r18,r2,14a97c <__swbuf_r+0x94>
  14aa18:	8809883a 	mov	r4,r17
  14aa1c:	800b883a 	mov	r5,r16
  14aa20:	0145eac0 	call	145eac <_fflush_r>
  14aa24:	103fd526 	beq	r2,zero,14a97c <__swbuf_r+0x94>
  14aa28:	003ff706 	br	14aa08 <__swbuf_r+0x120>
  14aa2c:	8809883a 	mov	r4,r17
  14aa30:	800b883a 	mov	r5,r16
  14aa34:	01445340 	call	144534 <__swsetup_r>
  14aa38:	80c0030b 	ldhu	r3,12(r16)
  14aa3c:	1000041e 	bne	r2,zero,14aa50 <__swbuf_r+0x168>
  14aa40:	80800417 	ldw	r2,16(r16)
  14aa44:	003fba06 	br	14a930 <__swbuf_r+0x48>
  14aa48:	01461b80 	call	1461b8 <__sinit>
  14aa4c:	003fb106 	br	14a914 <__swbuf_r+0x2c>
  14aa50:	18c01014 	ori	r3,r3,64
  14aa54:	80c0030d 	sth	r3,12(r16)
  14aa58:	00c00244 	movi	r3,9
  14aa5c:	00bfffc4 	movi	r2,-1
  14aa60:	88c00015 	stw	r3,0(r17)
  14aa64:	003fc606 	br	14a980 <__swbuf_r+0x98>

0014aa68 <__swbuf>:
  14aa68:	00c00574 	movhi	r3,21
  14aa6c:	18cbab04 	addi	r3,r3,11948
  14aa70:	2005883a 	mov	r2,r4
  14aa74:	19000017 	ldw	r4,0(r3)
  14aa78:	280d883a 	mov	r6,r5
  14aa7c:	100b883a 	mov	r5,r2
  14aa80:	014a8e81 	jmpi	14a8e8 <__swbuf_r>

0014aa84 <_write_r>:
  14aa84:	defffd04 	addi	sp,sp,-12
  14aa88:	dc400115 	stw	r17,4(sp)
  14aa8c:	dc000015 	stw	r16,0(sp)
  14aa90:	2023883a 	mov	r17,r4
  14aa94:	04000574 	movhi	r16,21
  14aa98:	840bc004 	addi	r16,r16,12032
  14aa9c:	2809883a 	mov	r4,r5
  14aaa0:	300b883a 	mov	r5,r6
  14aaa4:	380d883a 	mov	r6,r7
  14aaa8:	dfc00215 	stw	ra,8(sp)
  14aaac:	80000015 	stw	zero,0(r16)
  14aab0:	014ec080 	call	14ec08 <write>
  14aab4:	00ffffc4 	movi	r3,-1
  14aab8:	10c00526 	beq	r2,r3,14aad0 <_write_r+0x4c>
  14aabc:	dfc00217 	ldw	ra,8(sp)
  14aac0:	dc400117 	ldw	r17,4(sp)
  14aac4:	dc000017 	ldw	r16,0(sp)
  14aac8:	dec00304 	addi	sp,sp,12
  14aacc:	f800283a 	ret
  14aad0:	80c00017 	ldw	r3,0(r16)
  14aad4:	183ff926 	beq	r3,zero,14aabc <_write_r+0x38>
  14aad8:	88c00015 	stw	r3,0(r17)
  14aadc:	dfc00217 	ldw	ra,8(sp)
  14aae0:	dc400117 	ldw	r17,4(sp)
  14aae4:	dc000017 	ldw	r16,0(sp)
  14aae8:	dec00304 	addi	sp,sp,12
  14aaec:	f800283a 	ret

0014aaf0 <_close_r>:
  14aaf0:	defffd04 	addi	sp,sp,-12
  14aaf4:	dc400115 	stw	r17,4(sp)
  14aaf8:	dc000015 	stw	r16,0(sp)
  14aafc:	2023883a 	mov	r17,r4
  14ab00:	04000574 	movhi	r16,21
  14ab04:	840bc004 	addi	r16,r16,12032
  14ab08:	2809883a 	mov	r4,r5
  14ab0c:	dfc00215 	stw	ra,8(sp)
  14ab10:	80000015 	stw	zero,0(r16)
  14ab14:	014e4b00 	call	14e4b0 <close>
  14ab18:	00ffffc4 	movi	r3,-1
  14ab1c:	10c00526 	beq	r2,r3,14ab34 <_close_r+0x44>
  14ab20:	dfc00217 	ldw	ra,8(sp)
  14ab24:	dc400117 	ldw	r17,4(sp)
  14ab28:	dc000017 	ldw	r16,0(sp)
  14ab2c:	dec00304 	addi	sp,sp,12
  14ab30:	f800283a 	ret
  14ab34:	80c00017 	ldw	r3,0(r16)
  14ab38:	183ff926 	beq	r3,zero,14ab20 <_close_r+0x30>
  14ab3c:	88c00015 	stw	r3,0(r17)
  14ab40:	dfc00217 	ldw	ra,8(sp)
  14ab44:	dc400117 	ldw	r17,4(sp)
  14ab48:	dc000017 	ldw	r16,0(sp)
  14ab4c:	dec00304 	addi	sp,sp,12
  14ab50:	f800283a 	ret

0014ab54 <_calloc_r>:
  14ab54:	298b383a 	mul	r5,r5,r6
  14ab58:	defffe04 	addi	sp,sp,-8
  14ab5c:	dc000015 	stw	r16,0(sp)
  14ab60:	dfc00115 	stw	ra,4(sp)
  14ab64:	01471500 	call	147150 <_malloc_r>
  14ab68:	1021883a 	mov	r16,r2
  14ab6c:	10002826 	beq	r2,zero,14ac10 <_calloc_r+0xbc>
  14ab70:	11bfff17 	ldw	r6,-4(r2)
  14ab74:	00ffff04 	movi	r3,-4
  14ab78:	00800904 	movi	r2,36
  14ab7c:	30cc703a 	and	r6,r6,r3
  14ab80:	30cd883a 	add	r6,r6,r3
  14ab84:	11801436 	bltu	r2,r6,14abd8 <_calloc_r+0x84>
  14ab88:	00c004c4 	movi	r3,19
  14ab8c:	19800936 	bltu	r3,r6,14abb4 <_calloc_r+0x60>
  14ab90:	8005883a 	mov	r2,r16
  14ab94:	10000015 	stw	zero,0(r2)
  14ab98:	10000115 	stw	zero,4(r2)
  14ab9c:	10000215 	stw	zero,8(r2)
  14aba0:	8005883a 	mov	r2,r16
  14aba4:	dfc00117 	ldw	ra,4(sp)
  14aba8:	dc000017 	ldw	r16,0(sp)
  14abac:	dec00204 	addi	sp,sp,8
  14abb0:	f800283a 	ret
  14abb4:	80000015 	stw	zero,0(r16)
  14abb8:	80000115 	stw	zero,4(r16)
  14abbc:	00c006c4 	movi	r3,27
  14abc0:	19800d2e 	bgeu	r3,r6,14abf8 <_calloc_r+0xa4>
  14abc4:	80000215 	stw	zero,8(r16)
  14abc8:	80000315 	stw	zero,12(r16)
  14abcc:	30800c26 	beq	r6,r2,14ac00 <_calloc_r+0xac>
  14abd0:	80800404 	addi	r2,r16,16
  14abd4:	003fef06 	br	14ab94 <_calloc_r+0x40>
  14abd8:	8009883a 	mov	r4,r16
  14abdc:	000b883a 	mov	r5,zero
  14abe0:	0147b380 	call	147b38 <memset>
  14abe4:	8005883a 	mov	r2,r16
  14abe8:	dfc00117 	ldw	ra,4(sp)
  14abec:	dc000017 	ldw	r16,0(sp)
  14abf0:	dec00204 	addi	sp,sp,8
  14abf4:	f800283a 	ret
  14abf8:	80800204 	addi	r2,r16,8
  14abfc:	003fe506 	br	14ab94 <_calloc_r+0x40>
  14ac00:	80000415 	stw	zero,16(r16)
  14ac04:	80800604 	addi	r2,r16,24
  14ac08:	80000515 	stw	zero,20(r16)
  14ac0c:	003fe106 	br	14ab94 <_calloc_r+0x40>
  14ac10:	0005883a 	mov	r2,zero
  14ac14:	003fe306 	br	14aba4 <_calloc_r+0x50>

0014ac18 <_fclose_r>:
  14ac18:	defffc04 	addi	sp,sp,-16
  14ac1c:	dc000015 	stw	r16,0(sp)
  14ac20:	dfc00315 	stw	ra,12(sp)
  14ac24:	dc800215 	stw	r18,8(sp)
  14ac28:	dc400115 	stw	r17,4(sp)
  14ac2c:	2821883a 	mov	r16,r5
  14ac30:	28003126 	beq	r5,zero,14acf8 <_fclose_r+0xe0>
  14ac34:	2023883a 	mov	r17,r4
  14ac38:	01464700 	call	146470 <__sfp_lock_acquire>
  14ac3c:	88000226 	beq	r17,zero,14ac48 <_fclose_r+0x30>
  14ac40:	88800e17 	ldw	r2,56(r17)
  14ac44:	10003326 	beq	r2,zero,14ad14 <_fclose_r+0xfc>
  14ac48:	8080030f 	ldh	r2,12(r16)
  14ac4c:	10002226 	beq	r2,zero,14acd8 <_fclose_r+0xc0>
  14ac50:	8809883a 	mov	r4,r17
  14ac54:	800b883a 	mov	r5,r16
  14ac58:	0145eac0 	call	145eac <_fflush_r>
  14ac5c:	80c00b17 	ldw	r3,44(r16)
  14ac60:	1025883a 	mov	r18,r2
  14ac64:	18000426 	beq	r3,zero,14ac78 <_fclose_r+0x60>
  14ac68:	81400717 	ldw	r5,28(r16)
  14ac6c:	8809883a 	mov	r4,r17
  14ac70:	183ee83a 	callr	r3
  14ac74:	10003016 	blt	r2,zero,14ad38 <_fclose_r+0x120>
  14ac78:	8080030b 	ldhu	r2,12(r16)
  14ac7c:	1080200c 	andi	r2,r2,128
  14ac80:	1000291e 	bne	r2,zero,14ad28 <_fclose_r+0x110>
  14ac84:	81400c17 	ldw	r5,48(r16)
  14ac88:	28000526 	beq	r5,zero,14aca0 <_fclose_r+0x88>
  14ac8c:	80801004 	addi	r2,r16,64
  14ac90:	28800226 	beq	r5,r2,14ac9c <_fclose_r+0x84>
  14ac94:	8809883a 	mov	r4,r17
  14ac98:	01465ec0 	call	1465ec <_free_r>
  14ac9c:	80000c15 	stw	zero,48(r16)
  14aca0:	81401117 	ldw	r5,68(r16)
  14aca4:	28000326 	beq	r5,zero,14acb4 <_fclose_r+0x9c>
  14aca8:	8809883a 	mov	r4,r17
  14acac:	01465ec0 	call	1465ec <_free_r>
  14acb0:	80001115 	stw	zero,68(r16)
  14acb4:	8000030d 	sth	zero,12(r16)
  14acb8:	01464740 	call	146474 <__sfp_lock_release>
  14acbc:	9005883a 	mov	r2,r18
  14acc0:	dfc00317 	ldw	ra,12(sp)
  14acc4:	dc800217 	ldw	r18,8(sp)
  14acc8:	dc400117 	ldw	r17,4(sp)
  14accc:	dc000017 	ldw	r16,0(sp)
  14acd0:	dec00404 	addi	sp,sp,16
  14acd4:	f800283a 	ret
  14acd8:	01464740 	call	146474 <__sfp_lock_release>
  14acdc:	0005883a 	mov	r2,zero
  14ace0:	dfc00317 	ldw	ra,12(sp)
  14ace4:	dc800217 	ldw	r18,8(sp)
  14ace8:	dc400117 	ldw	r17,4(sp)
  14acec:	dc000017 	ldw	r16,0(sp)
  14acf0:	dec00404 	addi	sp,sp,16
  14acf4:	f800283a 	ret
  14acf8:	0005883a 	mov	r2,zero
  14acfc:	dfc00317 	ldw	ra,12(sp)
  14ad00:	dc800217 	ldw	r18,8(sp)
  14ad04:	dc400117 	ldw	r17,4(sp)
  14ad08:	dc000017 	ldw	r16,0(sp)
  14ad0c:	dec00404 	addi	sp,sp,16
  14ad10:	f800283a 	ret
  14ad14:	8809883a 	mov	r4,r17
  14ad18:	01461b80 	call	1461b8 <__sinit>
  14ad1c:	8080030f 	ldh	r2,12(r16)
  14ad20:	103fcb1e 	bne	r2,zero,14ac50 <_fclose_r+0x38>
  14ad24:	003fec06 	br	14acd8 <_fclose_r+0xc0>
  14ad28:	81400417 	ldw	r5,16(r16)
  14ad2c:	8809883a 	mov	r4,r17
  14ad30:	01465ec0 	call	1465ec <_free_r>
  14ad34:	003fd306 	br	14ac84 <_fclose_r+0x6c>
  14ad38:	04bfffc4 	movi	r18,-1
  14ad3c:	003fce06 	br	14ac78 <_fclose_r+0x60>

0014ad40 <fclose>:
  14ad40:	00800574 	movhi	r2,21
  14ad44:	108bab04 	addi	r2,r2,11948
  14ad48:	200b883a 	mov	r5,r4
  14ad4c:	11000017 	ldw	r4,0(r2)
  14ad50:	014ac181 	jmpi	14ac18 <_fclose_r>

0014ad54 <_fputwc_r>:
  14ad54:	3080030b 	ldhu	r2,12(r6)
  14ad58:	defff804 	addi	sp,sp,-32
  14ad5c:	dcc00415 	stw	r19,16(sp)
  14ad60:	dc800315 	stw	r18,12(sp)
  14ad64:	dc000115 	stw	r16,4(sp)
  14ad68:	dfc00715 	stw	ra,28(sp)
  14ad6c:	dd400615 	stw	r21,24(sp)
  14ad70:	dd000515 	stw	r20,20(sp)
  14ad74:	dc400215 	stw	r17,8(sp)
  14ad78:	10c8000c 	andi	r3,r2,8192
  14ad7c:	3021883a 	mov	r16,r6
  14ad80:	2027883a 	mov	r19,r4
  14ad84:	2825883a 	mov	r18,r5
  14ad88:	1800051e 	bne	r3,zero,14ada0 <_fputwc_r+0x4c>
  14ad8c:	30c01917 	ldw	r3,100(r6)
  14ad90:	10880014 	ori	r2,r2,8192
  14ad94:	3080030d 	sth	r2,12(r6)
  14ad98:	18880014 	ori	r2,r3,8192
  14ad9c:	30801915 	stw	r2,100(r6)
  14ada0:	0146f440 	call	146f44 <__locale_mb_cur_max>
  14ada4:	00c00044 	movi	r3,1
  14ada8:	10c03e26 	beq	r2,r3,14aea4 <_fputwc_r+0x150>
  14adac:	9809883a 	mov	r4,r19
  14adb0:	d80b883a 	mov	r5,sp
  14adb4:	900d883a 	mov	r6,r18
  14adb8:	81c01704 	addi	r7,r16,92
  14adbc:	014b0f40 	call	14b0f4 <_wcrtomb_r>
  14adc0:	1029883a 	mov	r20,r2
  14adc4:	00bfffc4 	movi	r2,-1
  14adc8:	a0802026 	beq	r20,r2,14ae4c <_fputwc_r+0xf8>
  14adcc:	d9400003 	ldbu	r5,0(sp)
  14add0:	a0001c26 	beq	r20,zero,14ae44 <_fputwc_r+0xf0>
  14add4:	0023883a 	mov	r17,zero
  14add8:	05400284 	movi	r21,10
  14addc:	00000906 	br	14ae04 <_fputwc_r+0xb0>
  14ade0:	80c00017 	ldw	r3,0(r16)
  14ade4:	19400005 	stb	r5,0(r3)
  14ade8:	80c00017 	ldw	r3,0(r16)
  14adec:	18c00044 	addi	r3,r3,1
  14adf0:	80c00015 	stw	r3,0(r16)
  14adf4:	8c400044 	addi	r17,r17,1
  14adf8:	dc47883a 	add	r3,sp,r17
  14adfc:	8d00112e 	bgeu	r17,r20,14ae44 <_fputwc_r+0xf0>
  14ae00:	19400003 	ldbu	r5,0(r3)
  14ae04:	80c00217 	ldw	r3,8(r16)
  14ae08:	18ffffc4 	addi	r3,r3,-1
  14ae0c:	80c00215 	stw	r3,8(r16)
  14ae10:	183ff30e 	bge	r3,zero,14ade0 <_fputwc_r+0x8c>
  14ae14:	80800617 	ldw	r2,24(r16)
  14ae18:	18801916 	blt	r3,r2,14ae80 <_fputwc_r+0x12c>
  14ae1c:	80800017 	ldw	r2,0(r16)
  14ae20:	11400005 	stb	r5,0(r2)
  14ae24:	80800017 	ldw	r2,0(r16)
  14ae28:	10c00003 	ldbu	r3,0(r2)
  14ae2c:	10800044 	addi	r2,r2,1
  14ae30:	1d402326 	beq	r3,r21,14aec0 <_fputwc_r+0x16c>
  14ae34:	8c400044 	addi	r17,r17,1
  14ae38:	80800015 	stw	r2,0(r16)
  14ae3c:	dc47883a 	add	r3,sp,r17
  14ae40:	8d3fef36 	bltu	r17,r20,14ae00 <_fputwc_r+0xac>
  14ae44:	9005883a 	mov	r2,r18
  14ae48:	00000406 	br	14ae5c <_fputwc_r+0x108>
  14ae4c:	80c0030b 	ldhu	r3,12(r16)
  14ae50:	a005883a 	mov	r2,r20
  14ae54:	18c01014 	ori	r3,r3,64
  14ae58:	80c0030d 	sth	r3,12(r16)
  14ae5c:	dfc00717 	ldw	ra,28(sp)
  14ae60:	dd400617 	ldw	r21,24(sp)
  14ae64:	dd000517 	ldw	r20,20(sp)
  14ae68:	dcc00417 	ldw	r19,16(sp)
  14ae6c:	dc800317 	ldw	r18,12(sp)
  14ae70:	dc400217 	ldw	r17,8(sp)
  14ae74:	dc000117 	ldw	r16,4(sp)
  14ae78:	dec00804 	addi	sp,sp,32
  14ae7c:	f800283a 	ret
  14ae80:	9809883a 	mov	r4,r19
  14ae84:	29403fcc 	andi	r5,r5,255
  14ae88:	800d883a 	mov	r6,r16
  14ae8c:	014a8e80 	call	14a8e8 <__swbuf_r>
  14ae90:	10bfffe0 	cmpeqi	r2,r2,-1
  14ae94:	10803fcc 	andi	r2,r2,255
  14ae98:	103fd626 	beq	r2,zero,14adf4 <_fputwc_r+0xa0>
  14ae9c:	00bfffc4 	movi	r2,-1
  14aea0:	003fee06 	br	14ae5c <_fputwc_r+0x108>
  14aea4:	90ffffc4 	addi	r3,r18,-1
  14aea8:	01003f84 	movi	r4,254
  14aeac:	20ffbf36 	bltu	r4,r3,14adac <_fputwc_r+0x58>
  14aeb0:	900b883a 	mov	r5,r18
  14aeb4:	dc800005 	stb	r18,0(sp)
  14aeb8:	1029883a 	mov	r20,r2
  14aebc:	003fc506 	br	14add4 <_fputwc_r+0x80>
  14aec0:	9809883a 	mov	r4,r19
  14aec4:	a80b883a 	mov	r5,r21
  14aec8:	800d883a 	mov	r6,r16
  14aecc:	014a8e80 	call	14a8e8 <__swbuf_r>
  14aed0:	10bfffe0 	cmpeqi	r2,r2,-1
  14aed4:	003fef06 	br	14ae94 <_fputwc_r+0x140>

0014aed8 <fputwc>:
  14aed8:	defffc04 	addi	sp,sp,-16
  14aedc:	dc000115 	stw	r16,4(sp)
  14aee0:	04000574 	movhi	r16,21
  14aee4:	840bab04 	addi	r16,r16,11948
  14aee8:	80800017 	ldw	r2,0(r16)
  14aeec:	dc400215 	stw	r17,8(sp)
  14aef0:	dfc00315 	stw	ra,12(sp)
  14aef4:	2023883a 	mov	r17,r4
  14aef8:	280d883a 	mov	r6,r5
  14aefc:	10000d26 	beq	r2,zero,14af34 <fputwc+0x5c>
  14af00:	10c00e17 	ldw	r3,56(r2)
  14af04:	1009883a 	mov	r4,r2
  14af08:	1800041e 	bne	r3,zero,14af1c <fputwc+0x44>
  14af0c:	d9400015 	stw	r5,0(sp)
  14af10:	01461b80 	call	1461b8 <__sinit>
  14af14:	81000017 	ldw	r4,0(r16)
  14af18:	d9800017 	ldw	r6,0(sp)
  14af1c:	880b883a 	mov	r5,r17
  14af20:	dfc00317 	ldw	ra,12(sp)
  14af24:	dc400217 	ldw	r17,8(sp)
  14af28:	dc000117 	ldw	r16,4(sp)
  14af2c:	dec00404 	addi	sp,sp,16
  14af30:	014ad541 	jmpi	14ad54 <_fputwc_r>
  14af34:	0009883a 	mov	r4,zero
  14af38:	880b883a 	mov	r5,r17
  14af3c:	dfc00317 	ldw	ra,12(sp)
  14af40:	dc400217 	ldw	r17,8(sp)
  14af44:	dc000117 	ldw	r16,4(sp)
  14af48:	dec00404 	addi	sp,sp,16
  14af4c:	014ad541 	jmpi	14ad54 <_fputwc_r>

0014af50 <_fstat_r>:
  14af50:	defffd04 	addi	sp,sp,-12
  14af54:	dc400115 	stw	r17,4(sp)
  14af58:	dc000015 	stw	r16,0(sp)
  14af5c:	2023883a 	mov	r17,r4
  14af60:	04000574 	movhi	r16,21
  14af64:	840bc004 	addi	r16,r16,12032
  14af68:	2809883a 	mov	r4,r5
  14af6c:	300b883a 	mov	r5,r6
  14af70:	dfc00215 	stw	ra,8(sp)
  14af74:	80000015 	stw	zero,0(r16)
  14af78:	014e5f40 	call	14e5f4 <fstat>
  14af7c:	00ffffc4 	movi	r3,-1
  14af80:	10c00526 	beq	r2,r3,14af98 <_fstat_r+0x48>
  14af84:	dfc00217 	ldw	ra,8(sp)
  14af88:	dc400117 	ldw	r17,4(sp)
  14af8c:	dc000017 	ldw	r16,0(sp)
  14af90:	dec00304 	addi	sp,sp,12
  14af94:	f800283a 	ret
  14af98:	80c00017 	ldw	r3,0(r16)
  14af9c:	183ff926 	beq	r3,zero,14af84 <_fstat_r+0x34>
  14afa0:	88c00015 	stw	r3,0(r17)
  14afa4:	dfc00217 	ldw	ra,8(sp)
  14afa8:	dc400117 	ldw	r17,4(sp)
  14afac:	dc000017 	ldw	r16,0(sp)
  14afb0:	dec00304 	addi	sp,sp,12
  14afb4:	f800283a 	ret

0014afb8 <_isatty_r>:
  14afb8:	defffd04 	addi	sp,sp,-12
  14afbc:	dc400115 	stw	r17,4(sp)
  14afc0:	dc000015 	stw	r16,0(sp)
  14afc4:	2023883a 	mov	r17,r4
  14afc8:	04000574 	movhi	r16,21
  14afcc:	840bc004 	addi	r16,r16,12032
  14afd0:	2809883a 	mov	r4,r5
  14afd4:	dfc00215 	stw	ra,8(sp)
  14afd8:	80000015 	stw	zero,0(r16)
  14afdc:	014e6f00 	call	14e6f0 <isatty>
  14afe0:	00ffffc4 	movi	r3,-1
  14afe4:	10c00526 	beq	r2,r3,14affc <_isatty_r+0x44>
  14afe8:	dfc00217 	ldw	ra,8(sp)
  14afec:	dc400117 	ldw	r17,4(sp)
  14aff0:	dc000017 	ldw	r16,0(sp)
  14aff4:	dec00304 	addi	sp,sp,12
  14aff8:	f800283a 	ret
  14affc:	80c00017 	ldw	r3,0(r16)
  14b000:	183ff926 	beq	r3,zero,14afe8 <_isatty_r+0x30>
  14b004:	88c00015 	stw	r3,0(r17)
  14b008:	dfc00217 	ldw	ra,8(sp)
  14b00c:	dc400117 	ldw	r17,4(sp)
  14b010:	dc000017 	ldw	r16,0(sp)
  14b014:	dec00304 	addi	sp,sp,12
  14b018:	f800283a 	ret

0014b01c <_lseek_r>:
  14b01c:	defffd04 	addi	sp,sp,-12
  14b020:	dc400115 	stw	r17,4(sp)
  14b024:	dc000015 	stw	r16,0(sp)
  14b028:	2023883a 	mov	r17,r4
  14b02c:	04000574 	movhi	r16,21
  14b030:	840bc004 	addi	r16,r16,12032
  14b034:	2809883a 	mov	r4,r5
  14b038:	300b883a 	mov	r5,r6
  14b03c:	380d883a 	mov	r6,r7
  14b040:	dfc00215 	stw	ra,8(sp)
  14b044:	80000015 	stw	zero,0(r16)
  14b048:	014e7e00 	call	14e7e0 <lseek>
  14b04c:	00ffffc4 	movi	r3,-1
  14b050:	10c00526 	beq	r2,r3,14b068 <_lseek_r+0x4c>
  14b054:	dfc00217 	ldw	ra,8(sp)
  14b058:	dc400117 	ldw	r17,4(sp)
  14b05c:	dc000017 	ldw	r16,0(sp)
  14b060:	dec00304 	addi	sp,sp,12
  14b064:	f800283a 	ret
  14b068:	80c00017 	ldw	r3,0(r16)
  14b06c:	183ff926 	beq	r3,zero,14b054 <_lseek_r+0x38>
  14b070:	88c00015 	stw	r3,0(r17)
  14b074:	dfc00217 	ldw	ra,8(sp)
  14b078:	dc400117 	ldw	r17,4(sp)
  14b07c:	dc000017 	ldw	r16,0(sp)
  14b080:	dec00304 	addi	sp,sp,12
  14b084:	f800283a 	ret

0014b088 <_read_r>:
  14b088:	defffd04 	addi	sp,sp,-12
  14b08c:	dc400115 	stw	r17,4(sp)
  14b090:	dc000015 	stw	r16,0(sp)
  14b094:	2023883a 	mov	r17,r4
  14b098:	04000574 	movhi	r16,21
  14b09c:	840bc004 	addi	r16,r16,12032
  14b0a0:	2809883a 	mov	r4,r5
  14b0a4:	300b883a 	mov	r5,r6
  14b0a8:	380d883a 	mov	r6,r7
  14b0ac:	dfc00215 	stw	ra,8(sp)
  14b0b0:	80000015 	stw	zero,0(r16)
  14b0b4:	014e9b80 	call	14e9b8 <read>
  14b0b8:	00ffffc4 	movi	r3,-1
  14b0bc:	10c00526 	beq	r2,r3,14b0d4 <_read_r+0x4c>
  14b0c0:	dfc00217 	ldw	ra,8(sp)
  14b0c4:	dc400117 	ldw	r17,4(sp)
  14b0c8:	dc000017 	ldw	r16,0(sp)
  14b0cc:	dec00304 	addi	sp,sp,12
  14b0d0:	f800283a 	ret
  14b0d4:	80c00017 	ldw	r3,0(r16)
  14b0d8:	183ff926 	beq	r3,zero,14b0c0 <_read_r+0x38>
  14b0dc:	88c00015 	stw	r3,0(r17)
  14b0e0:	dfc00217 	ldw	ra,8(sp)
  14b0e4:	dc400117 	ldw	r17,4(sp)
  14b0e8:	dc000017 	ldw	r16,0(sp)
  14b0ec:	dec00304 	addi	sp,sp,12
  14b0f0:	f800283a 	ret

0014b0f4 <_wcrtomb_r>:
  14b0f4:	defff604 	addi	sp,sp,-40
  14b0f8:	dc800815 	stw	r18,32(sp)
  14b0fc:	dc400715 	stw	r17,28(sp)
  14b100:	dc000615 	stw	r16,24(sp)
  14b104:	00800574 	movhi	r2,21
  14b108:	108baf04 	addi	r2,r2,11964
  14b10c:	dfc00915 	stw	ra,36(sp)
  14b110:	2021883a 	mov	r16,r4
  14b114:	3823883a 	mov	r17,r7
  14b118:	14800017 	ldw	r18,0(r2)
  14b11c:	28001426 	beq	r5,zero,14b170 <_wcrtomb_r+0x7c>
  14b120:	d9400415 	stw	r5,16(sp)
  14b124:	d9800515 	stw	r6,20(sp)
  14b128:	0146f380 	call	146f38 <__locale_charset>
  14b12c:	d9400417 	ldw	r5,16(sp)
  14b130:	d9800517 	ldw	r6,20(sp)
  14b134:	8009883a 	mov	r4,r16
  14b138:	dc400015 	stw	r17,0(sp)
  14b13c:	100f883a 	mov	r7,r2
  14b140:	903ee83a 	callr	r18
  14b144:	00ffffc4 	movi	r3,-1
  14b148:	10c0031e 	bne	r2,r3,14b158 <_wcrtomb_r+0x64>
  14b14c:	88000015 	stw	zero,0(r17)
  14b150:	00c02284 	movi	r3,138
  14b154:	80c00015 	stw	r3,0(r16)
  14b158:	dfc00917 	ldw	ra,36(sp)
  14b15c:	dc800817 	ldw	r18,32(sp)
  14b160:	dc400717 	ldw	r17,28(sp)
  14b164:	dc000617 	ldw	r16,24(sp)
  14b168:	dec00a04 	addi	sp,sp,40
  14b16c:	f800283a 	ret
  14b170:	0146f380 	call	146f38 <__locale_charset>
  14b174:	8009883a 	mov	r4,r16
  14b178:	dc400015 	stw	r17,0(sp)
  14b17c:	d9400104 	addi	r5,sp,4
  14b180:	000d883a 	mov	r6,zero
  14b184:	100f883a 	mov	r7,r2
  14b188:	903ee83a 	callr	r18
  14b18c:	003fed06 	br	14b144 <_wcrtomb_r+0x50>

0014b190 <wcrtomb>:
  14b190:	defff504 	addi	sp,sp,-44
  14b194:	dc400515 	stw	r17,20(sp)
  14b198:	dc000415 	stw	r16,16(sp)
  14b19c:	dfc00a15 	stw	ra,40(sp)
  14b1a0:	dd400915 	stw	r21,36(sp)
  14b1a4:	dd000815 	stw	r20,32(sp)
  14b1a8:	dcc00715 	stw	r19,28(sp)
  14b1ac:	dc800615 	stw	r18,24(sp)
  14b1b0:	2021883a 	mov	r16,r4
  14b1b4:	3023883a 	mov	r17,r6
  14b1b8:	20001d26 	beq	r4,zero,14b230 <wcrtomb+0xa0>
  14b1bc:	04800574 	movhi	r18,21
  14b1c0:	948bab04 	addi	r18,r18,11948
  14b1c4:	95400017 	ldw	r21,0(r18)
  14b1c8:	00800574 	movhi	r2,21
  14b1cc:	108baf04 	addi	r2,r2,11964
  14b1d0:	15000017 	ldw	r20,0(r2)
  14b1d4:	2827883a 	mov	r19,r5
  14b1d8:	0146f380 	call	146f38 <__locale_charset>
  14b1dc:	a809883a 	mov	r4,r21
  14b1e0:	dc400015 	stw	r17,0(sp)
  14b1e4:	800b883a 	mov	r5,r16
  14b1e8:	980d883a 	mov	r6,r19
  14b1ec:	100f883a 	mov	r7,r2
  14b1f0:	a03ee83a 	callr	r20
  14b1f4:	00ffffc4 	movi	r3,-1
  14b1f8:	10c0041e 	bne	r2,r3,14b20c <wcrtomb+0x7c>
  14b1fc:	90c00017 	ldw	r3,0(r18)
  14b200:	01002284 	movi	r4,138
  14b204:	88000015 	stw	zero,0(r17)
  14b208:	19000015 	stw	r4,0(r3)
  14b20c:	dfc00a17 	ldw	ra,40(sp)
  14b210:	dd400917 	ldw	r21,36(sp)
  14b214:	dd000817 	ldw	r20,32(sp)
  14b218:	dcc00717 	ldw	r19,28(sp)
  14b21c:	dc800617 	ldw	r18,24(sp)
  14b220:	dc400517 	ldw	r17,20(sp)
  14b224:	dc000417 	ldw	r16,16(sp)
  14b228:	dec00b04 	addi	sp,sp,44
  14b22c:	f800283a 	ret
  14b230:	04800574 	movhi	r18,21
  14b234:	948bab04 	addi	r18,r18,11948
  14b238:	94c00017 	ldw	r19,0(r18)
  14b23c:	00800574 	movhi	r2,21
  14b240:	108baf04 	addi	r2,r2,11964
  14b244:	14000017 	ldw	r16,0(r2)
  14b248:	0146f380 	call	146f38 <__locale_charset>
  14b24c:	9809883a 	mov	r4,r19
  14b250:	dc400015 	stw	r17,0(sp)
  14b254:	d9400104 	addi	r5,sp,4
  14b258:	000d883a 	mov	r6,zero
  14b25c:	100f883a 	mov	r7,r2
  14b260:	803ee83a 	callr	r16
  14b264:	003fe306 	br	14b1f4 <wcrtomb+0x64>

0014b268 <__ascii_wctomb>:
  14b268:	28000526 	beq	r5,zero,14b280 <__ascii_wctomb+0x18>
  14b26c:	00803fc4 	movi	r2,255
  14b270:	11800536 	bltu	r2,r6,14b288 <__ascii_wctomb+0x20>
  14b274:	29800005 	stb	r6,0(r5)
  14b278:	00800044 	movi	r2,1
  14b27c:	f800283a 	ret
  14b280:	0005883a 	mov	r2,zero
  14b284:	f800283a 	ret
  14b288:	00802284 	movi	r2,138
  14b28c:	20800015 	stw	r2,0(r4)
  14b290:	00bfffc4 	movi	r2,-1
  14b294:	f800283a 	ret

0014b298 <_wctomb_r>:
  14b298:	defff904 	addi	sp,sp,-28
  14b29c:	00800574 	movhi	r2,21
  14b2a0:	108baf04 	addi	r2,r2,11964
  14b2a4:	dfc00615 	stw	ra,24(sp)
  14b2a8:	dc400515 	stw	r17,20(sp)
  14b2ac:	dc000415 	stw	r16,16(sp)
  14b2b0:	3823883a 	mov	r17,r7
  14b2b4:	14000017 	ldw	r16,0(r2)
  14b2b8:	d9000115 	stw	r4,4(sp)
  14b2bc:	d9400215 	stw	r5,8(sp)
  14b2c0:	d9800315 	stw	r6,12(sp)
  14b2c4:	0146f380 	call	146f38 <__locale_charset>
  14b2c8:	d9000117 	ldw	r4,4(sp)
  14b2cc:	d9400217 	ldw	r5,8(sp)
  14b2d0:	d9800317 	ldw	r6,12(sp)
  14b2d4:	dc400015 	stw	r17,0(sp)
  14b2d8:	100f883a 	mov	r7,r2
  14b2dc:	803ee83a 	callr	r16
  14b2e0:	dfc00617 	ldw	ra,24(sp)
  14b2e4:	dc400517 	ldw	r17,20(sp)
  14b2e8:	dc000417 	ldw	r16,16(sp)
  14b2ec:	dec00704 	addi	sp,sp,28
  14b2f0:	f800283a 	ret

0014b2f4 <__udivdi3>:
  14b2f4:	defff504 	addi	sp,sp,-44
  14b2f8:	dc800315 	stw	r18,12(sp)
  14b2fc:	dc400215 	stw	r17,8(sp)
  14b300:	dfc00a15 	stw	ra,40(sp)
  14b304:	df000915 	stw	fp,36(sp)
  14b308:	ddc00815 	stw	r23,32(sp)
  14b30c:	dd800715 	stw	r22,28(sp)
  14b310:	dd400615 	stw	r21,24(sp)
  14b314:	dd000515 	stw	r20,20(sp)
  14b318:	dcc00415 	stw	r19,16(sp)
  14b31c:	dc000115 	stw	r16,4(sp)
  14b320:	2025883a 	mov	r18,r4
  14b324:	2823883a 	mov	r17,r5
  14b328:	3800421e 	bne	r7,zero,14b434 <__udivdi3+0x140>
  14b32c:	3021883a 	mov	r16,r6
  14b330:	2027883a 	mov	r19,r4
  14b334:	2980542e 	bgeu	r5,r6,14b488 <__udivdi3+0x194>
  14b338:	00bfffd4 	movui	r2,65535
  14b33c:	2829883a 	mov	r20,r5
  14b340:	1180a836 	bltu	r2,r6,14b5e4 <__udivdi3+0x2f0>
  14b344:	00803fc4 	movi	r2,255
  14b348:	11814336 	bltu	r2,r6,14b858 <__udivdi3+0x564>
  14b34c:	0005883a 	mov	r2,zero
  14b350:	0007883a 	mov	r3,zero
  14b354:	3084d83a 	srl	r2,r6,r2
  14b358:	01000574 	movhi	r4,21
  14b35c:	21040104 	addi	r4,r4,4100
  14b360:	2085883a 	add	r2,r4,r2
  14b364:	10800003 	ldbu	r2,0(r2)
  14b368:	10c7883a 	add	r3,r2,r3
  14b36c:	00800804 	movi	r2,32
  14b370:	10c5c83a 	sub	r2,r2,r3
  14b374:	10000526 	beq	r2,zero,14b38c <__udivdi3+0x98>
  14b378:	88a2983a 	sll	r17,r17,r2
  14b37c:	90c6d83a 	srl	r3,r18,r3
  14b380:	30a0983a 	sll	r16,r6,r2
  14b384:	90a6983a 	sll	r19,r18,r2
  14b388:	88e8b03a 	or	r20,r17,r3
  14b38c:	8022d43a 	srli	r17,r16,16
  14b390:	a009883a 	mov	r4,r20
  14b394:	857fffcc 	andi	r21,r16,65535
  14b398:	880b883a 	mov	r5,r17
  14b39c:	014bf5c0 	call	14bf5c <__umodsi3>
  14b3a0:	a009883a 	mov	r4,r20
  14b3a4:	880b883a 	mov	r5,r17
  14b3a8:	102d883a 	mov	r22,r2
  14b3ac:	014bf540 	call	14bf54 <__udivsi3>
  14b3b0:	b02c943a 	slli	r22,r22,16
  14b3b4:	9806d43a 	srli	r3,r19,16
  14b3b8:	1549383a 	mul	r4,r2,r21
  14b3bc:	1025883a 	mov	r18,r2
  14b3c0:	b0c6b03a 	or	r3,r22,r3
  14b3c4:	1900052e 	bgeu	r3,r4,14b3dc <__udivdi3+0xe8>
  14b3c8:	1c07883a 	add	r3,r3,r16
  14b3cc:	10bfffc4 	addi	r2,r2,-1
  14b3d0:	1c000136 	bltu	r3,r16,14b3d8 <__udivdi3+0xe4>
  14b3d4:	19013536 	bltu	r3,r4,14b8ac <__udivdi3+0x5b8>
  14b3d8:	1025883a 	mov	r18,r2
  14b3dc:	1929c83a 	sub	r20,r3,r4
  14b3e0:	a009883a 	mov	r4,r20
  14b3e4:	880b883a 	mov	r5,r17
  14b3e8:	014bf5c0 	call	14bf5c <__umodsi3>
  14b3ec:	102d883a 	mov	r22,r2
  14b3f0:	a009883a 	mov	r4,r20
  14b3f4:	880b883a 	mov	r5,r17
  14b3f8:	014bf540 	call	14bf54 <__udivsi3>
  14b3fc:	b02c943a 	slli	r22,r22,16
  14b400:	156b383a 	mul	r21,r2,r21
  14b404:	9cffffcc 	andi	r19,r19,65535
  14b408:	b4e6b03a 	or	r19,r22,r19
  14b40c:	9d40052e 	bgeu	r19,r21,14b424 <__udivdi3+0x130>
  14b410:	9c27883a 	add	r19,r19,r16
  14b414:	10ffffc4 	addi	r3,r2,-1
  14b418:	9c00f636 	bltu	r19,r16,14b7f4 <__udivdi3+0x500>
  14b41c:	9d40f52e 	bgeu	r19,r21,14b7f4 <__udivdi3+0x500>
  14b420:	10bfff84 	addi	r2,r2,-2
  14b424:	9024943a 	slli	r18,r18,16
  14b428:	0007883a 	mov	r3,zero
  14b42c:	1484b03a 	or	r2,r2,r18
  14b430:	00005b06 	br	14b5a0 <__udivdi3+0x2ac>
  14b434:	29c05836 	bltu	r5,r7,14b598 <__udivdi3+0x2a4>
  14b438:	00bfffd4 	movui	r2,65535
  14b43c:	11c0642e 	bgeu	r2,r7,14b5d0 <__udivdi3+0x2dc>
  14b440:	00804034 	movhi	r2,256
  14b444:	10bfffc4 	addi	r2,r2,-1
  14b448:	11c0f436 	bltu	r2,r7,14b81c <__udivdi3+0x528>
  14b44c:	00c00404 	movi	r3,16
  14b450:	180b883a 	mov	r5,r3
  14b454:	38c6d83a 	srl	r3,r7,r3
  14b458:	01000574 	movhi	r4,21
  14b45c:	21040104 	addi	r4,r4,4100
  14b460:	04000804 	movi	r16,32
  14b464:	20c7883a 	add	r3,r4,r3
  14b468:	18800003 	ldbu	r2,0(r3)
  14b46c:	1145883a 	add	r2,r2,r5
  14b470:	80a1c83a 	sub	r16,r16,r2
  14b474:	8000661e 	bne	r16,zero,14b610 <__udivdi3+0x31c>
  14b478:	3c40fa36 	bltu	r7,r17,14b864 <__udivdi3+0x570>
  14b47c:	9185403a 	cmpgeu	r2,r18,r6
  14b480:	0007883a 	mov	r3,zero
  14b484:	00004606 	br	14b5a0 <__udivdi3+0x2ac>
  14b488:	3000041e 	bne	r6,zero,14b49c <__udivdi3+0x1a8>
  14b48c:	01000044 	movi	r4,1
  14b490:	000b883a 	mov	r5,zero
  14b494:	014bf540 	call	14bf54 <__udivsi3>
  14b498:	1021883a 	mov	r16,r2
  14b49c:	00bfffd4 	movui	r2,65535
  14b4a0:	1400562e 	bgeu	r2,r16,14b5fc <__udivdi3+0x308>
  14b4a4:	00804034 	movhi	r2,256
  14b4a8:	10bfffc4 	addi	r2,r2,-1
  14b4ac:	1400e436 	bltu	r2,r16,14b840 <__udivdi3+0x54c>
  14b4b0:	00800404 	movi	r2,16
  14b4b4:	1007883a 	mov	r3,r2
  14b4b8:	8084d83a 	srl	r2,r16,r2
  14b4bc:	01000574 	movhi	r4,21
  14b4c0:	21040104 	addi	r4,r4,4100
  14b4c4:	2085883a 	add	r2,r4,r2
  14b4c8:	10800003 	ldbu	r2,0(r2)
  14b4cc:	10c7883a 	add	r3,r2,r3
  14b4d0:	00800804 	movi	r2,32
  14b4d4:	10c5c83a 	sub	r2,r2,r3
  14b4d8:	1000921e 	bne	r2,zero,14b724 <__udivdi3+0x430>
  14b4dc:	8028d43a 	srli	r20,r16,16
  14b4e0:	8c23c83a 	sub	r17,r17,r16
  14b4e4:	857fffcc 	andi	r21,r16,65535
  14b4e8:	00c00044 	movi	r3,1
  14b4ec:	8809883a 	mov	r4,r17
  14b4f0:	a00b883a 	mov	r5,r20
  14b4f4:	d8c00015 	stw	r3,0(sp)
  14b4f8:	014bf5c0 	call	14bf5c <__umodsi3>
  14b4fc:	8809883a 	mov	r4,r17
  14b500:	a00b883a 	mov	r5,r20
  14b504:	102d883a 	mov	r22,r2
  14b508:	014bf540 	call	14bf54 <__udivsi3>
  14b50c:	b02c943a 	slli	r22,r22,16
  14b510:	9808d43a 	srli	r4,r19,16
  14b514:	154b383a 	mul	r5,r2,r21
  14b518:	1025883a 	mov	r18,r2
  14b51c:	b108b03a 	or	r4,r22,r4
  14b520:	d8c00017 	ldw	r3,0(sp)
  14b524:	2140052e 	bgeu	r4,r5,14b53c <__udivdi3+0x248>
  14b528:	2409883a 	add	r4,r4,r16
  14b52c:	10bfffc4 	addi	r2,r2,-1
  14b530:	24000136 	bltu	r4,r16,14b538 <__udivdi3+0x244>
  14b534:	2140da36 	bltu	r4,r5,14b8a0 <__udivdi3+0x5ac>
  14b538:	1025883a 	mov	r18,r2
  14b53c:	2163c83a 	sub	r17,r4,r5
  14b540:	8809883a 	mov	r4,r17
  14b544:	a00b883a 	mov	r5,r20
  14b548:	d8c00015 	stw	r3,0(sp)
  14b54c:	014bf5c0 	call	14bf5c <__umodsi3>
  14b550:	102d883a 	mov	r22,r2
  14b554:	8809883a 	mov	r4,r17
  14b558:	a00b883a 	mov	r5,r20
  14b55c:	014bf540 	call	14bf54 <__udivsi3>
  14b560:	b02c943a 	slli	r22,r22,16
  14b564:	156b383a 	mul	r21,r2,r21
  14b568:	9cffffcc 	andi	r19,r19,65535
  14b56c:	b4e6b03a 	or	r19,r22,r19
  14b570:	d8c00017 	ldw	r3,0(sp)
  14b574:	9d40052e 	bgeu	r19,r21,14b58c <__udivdi3+0x298>
  14b578:	9c27883a 	add	r19,r19,r16
  14b57c:	113fffc4 	addi	r4,r2,-1
  14b580:	9c009a36 	bltu	r19,r16,14b7ec <__udivdi3+0x4f8>
  14b584:	9d40992e 	bgeu	r19,r21,14b7ec <__udivdi3+0x4f8>
  14b588:	10bfff84 	addi	r2,r2,-2
  14b58c:	9024943a 	slli	r18,r18,16
  14b590:	1484b03a 	or	r2,r2,r18
  14b594:	00000206 	br	14b5a0 <__udivdi3+0x2ac>
  14b598:	0007883a 	mov	r3,zero
  14b59c:	0005883a 	mov	r2,zero
  14b5a0:	dfc00a17 	ldw	ra,40(sp)
  14b5a4:	df000917 	ldw	fp,36(sp)
  14b5a8:	ddc00817 	ldw	r23,32(sp)
  14b5ac:	dd800717 	ldw	r22,28(sp)
  14b5b0:	dd400617 	ldw	r21,24(sp)
  14b5b4:	dd000517 	ldw	r20,20(sp)
  14b5b8:	dcc00417 	ldw	r19,16(sp)
  14b5bc:	dc800317 	ldw	r18,12(sp)
  14b5c0:	dc400217 	ldw	r17,8(sp)
  14b5c4:	dc000117 	ldw	r16,4(sp)
  14b5c8:	dec00b04 	addi	sp,sp,44
  14b5cc:	f800283a 	ret
  14b5d0:	00803fc4 	movi	r2,255
  14b5d4:	11c09436 	bltu	r2,r7,14b828 <__udivdi3+0x534>
  14b5d8:	0007883a 	mov	r3,zero
  14b5dc:	000b883a 	mov	r5,zero
  14b5e0:	003f9c06 	br	14b454 <__udivdi3+0x160>
  14b5e4:	00804034 	movhi	r2,256
  14b5e8:	10bfffc4 	addi	r2,r2,-1
  14b5ec:	11809136 	bltu	r2,r6,14b834 <__udivdi3+0x540>
  14b5f0:	00800404 	movi	r2,16
  14b5f4:	1007883a 	mov	r3,r2
  14b5f8:	003f5606 	br	14b354 <__udivdi3+0x60>
  14b5fc:	00803fc4 	movi	r2,255
  14b600:	14009236 	bltu	r2,r16,14b84c <__udivdi3+0x558>
  14b604:	0005883a 	mov	r2,zero
  14b608:	0007883a 	mov	r3,zero
  14b60c:	003faa06 	br	14b4b8 <__udivdi3+0x1c4>
  14b610:	3086d83a 	srl	r3,r6,r2
  14b614:	3c0e983a 	sll	r7,r7,r16
  14b618:	88aad83a 	srl	r21,r17,r2
  14b61c:	9084d83a 	srl	r2,r18,r2
  14b620:	38e6b03a 	or	r19,r7,r3
  14b624:	9828d43a 	srli	r20,r19,16
  14b628:	8c22983a 	sll	r17,r17,r16
  14b62c:	a809883a 	mov	r4,r21
  14b630:	a00b883a 	mov	r5,r20
  14b634:	342c983a 	sll	r22,r6,r16
  14b638:	88a2b03a 	or	r17,r17,r2
  14b63c:	014bf5c0 	call	14bf5c <__umodsi3>
  14b640:	a809883a 	mov	r4,r21
  14b644:	a00b883a 	mov	r5,r20
  14b648:	1039883a 	mov	fp,r2
  14b64c:	014bf540 	call	14bf54 <__udivsi3>
  14b650:	102b883a 	mov	r21,r2
  14b654:	9dffffcc 	andi	r23,r19,65535
  14b658:	e008943a 	slli	r4,fp,16
  14b65c:	8804d43a 	srli	r2,r17,16
  14b660:	adcd383a 	mul	r6,r21,r23
  14b664:	2088b03a 	or	r4,r4,r2
  14b668:	2180042e 	bgeu	r4,r6,14b67c <__udivdi3+0x388>
  14b66c:	24c9883a 	add	r4,r4,r19
  14b670:	a8bfffc4 	addi	r2,r21,-1
  14b674:	24c0822e 	bgeu	r4,r19,14b880 <__udivdi3+0x58c>
  14b678:	102b883a 	mov	r21,r2
  14b67c:	21b9c83a 	sub	fp,r4,r6
  14b680:	e009883a 	mov	r4,fp
  14b684:	a00b883a 	mov	r5,r20
  14b688:	014bf5c0 	call	14bf5c <__umodsi3>
  14b68c:	e009883a 	mov	r4,fp
  14b690:	a00b883a 	mov	r5,r20
  14b694:	d8800015 	stw	r2,0(sp)
  14b698:	014bf540 	call	14bf54 <__udivsi3>
  14b69c:	d8c00017 	ldw	r3,0(sp)
  14b6a0:	15cb383a 	mul	r5,r2,r23
  14b6a4:	8c7fffcc 	andi	r17,r17,65535
  14b6a8:	1806943a 	slli	r3,r3,16
  14b6ac:	1009883a 	mov	r4,r2
  14b6b0:	1c46b03a 	or	r3,r3,r17
  14b6b4:	1940042e 	bgeu	r3,r5,14b6c8 <__udivdi3+0x3d4>
  14b6b8:	1cc7883a 	add	r3,r3,r19
  14b6bc:	10bfffc4 	addi	r2,r2,-1
  14b6c0:	1cc06b2e 	bgeu	r3,r19,14b870 <__udivdi3+0x57c>
  14b6c4:	1009883a 	mov	r4,r2
  14b6c8:	a804943a 	slli	r2,r21,16
  14b6cc:	b1ffffcc 	andi	r7,r22,65535
  14b6d0:	b02cd43a 	srli	r22,r22,16
  14b6d4:	2084b03a 	or	r2,r4,r2
  14b6d8:	113fffcc 	andi	r4,r2,65535
  14b6dc:	100cd43a 	srli	r6,r2,16
  14b6e0:	21d1383a 	mul	r8,r4,r7
  14b6e4:	2589383a 	mul	r4,r4,r22
  14b6e8:	31cf383a 	mul	r7,r6,r7
  14b6ec:	4012d43a 	srli	r9,r8,16
  14b6f0:	1947c83a 	sub	r3,r3,r5
  14b6f4:	3909883a 	add	r4,r7,r4
  14b6f8:	2249883a 	add	r4,r4,r9
  14b6fc:	35ad383a 	mul	r22,r6,r22
  14b700:	21c0022e 	bgeu	r4,r7,14b70c <__udivdi3+0x418>
  14b704:	01400074 	movhi	r5,1
  14b708:	b16d883a 	add	r22,r22,r5
  14b70c:	200ad43a 	srli	r5,r4,16
  14b710:	b16d883a 	add	r22,r22,r5
  14b714:	1d803e36 	bltu	r3,r22,14b810 <__udivdi3+0x51c>
  14b718:	1d803826 	beq	r3,r22,14b7fc <__udivdi3+0x508>
  14b71c:	0007883a 	mov	r3,zero
  14b720:	003f9f06 	br	14b5a0 <__udivdi3+0x2ac>
  14b724:	80a0983a 	sll	r16,r16,r2
  14b728:	88ead83a 	srl	r21,r17,r3
  14b72c:	90c6d83a 	srl	r3,r18,r3
  14b730:	8028d43a 	srli	r20,r16,16
  14b734:	88a2983a 	sll	r17,r17,r2
  14b738:	a809883a 	mov	r4,r21
  14b73c:	a00b883a 	mov	r5,r20
  14b740:	88ecb03a 	or	r22,r17,r3
  14b744:	90a6983a 	sll	r19,r18,r2
  14b748:	014bf5c0 	call	14bf5c <__umodsi3>
  14b74c:	a809883a 	mov	r4,r21
  14b750:	a00b883a 	mov	r5,r20
  14b754:	1023883a 	mov	r17,r2
  14b758:	014bf540 	call	14bf54 <__udivsi3>
  14b75c:	1025883a 	mov	r18,r2
  14b760:	857fffcc 	andi	r21,r16,65535
  14b764:	8808943a 	slli	r4,r17,16
  14b768:	b004d43a 	srli	r2,r22,16
  14b76c:	9547383a 	mul	r3,r18,r21
  14b770:	2088b03a 	or	r4,r4,r2
  14b774:	20c0062e 	bgeu	r4,r3,14b790 <__udivdi3+0x49c>
  14b778:	2409883a 	add	r4,r4,r16
  14b77c:	90bfffc4 	addi	r2,r18,-1
  14b780:	24004536 	bltu	r4,r16,14b898 <__udivdi3+0x5a4>
  14b784:	20c0442e 	bgeu	r4,r3,14b898 <__udivdi3+0x5a4>
  14b788:	94bfff84 	addi	r18,r18,-2
  14b78c:	2409883a 	add	r4,r4,r16
  14b790:	20efc83a 	sub	r23,r4,r3
  14b794:	b809883a 	mov	r4,r23
  14b798:	a00b883a 	mov	r5,r20
  14b79c:	014bf5c0 	call	14bf5c <__umodsi3>
  14b7a0:	1023883a 	mov	r17,r2
  14b7a4:	a00b883a 	mov	r5,r20
  14b7a8:	b809883a 	mov	r4,r23
  14b7ac:	014bf540 	call	14bf54 <__udivsi3>
  14b7b0:	8822943a 	slli	r17,r17,16
  14b7b4:	154b383a 	mul	r5,r2,r21
  14b7b8:	b5bfffcc 	andi	r22,r22,65535
  14b7bc:	8da2b03a 	or	r17,r17,r22
  14b7c0:	8940062e 	bgeu	r17,r5,14b7dc <__udivdi3+0x4e8>
  14b7c4:	8c23883a 	add	r17,r17,r16
  14b7c8:	10ffffc4 	addi	r3,r2,-1
  14b7cc:	8c003036 	bltu	r17,r16,14b890 <__udivdi3+0x59c>
  14b7d0:	89402f2e 	bgeu	r17,r5,14b890 <__udivdi3+0x59c>
  14b7d4:	10bfff84 	addi	r2,r2,-2
  14b7d8:	8c23883a 	add	r17,r17,r16
  14b7dc:	9006943a 	slli	r3,r18,16
  14b7e0:	8963c83a 	sub	r17,r17,r5
  14b7e4:	10c6b03a 	or	r3,r2,r3
  14b7e8:	003f4006 	br	14b4ec <__udivdi3+0x1f8>
  14b7ec:	2005883a 	mov	r2,r4
  14b7f0:	003f6606 	br	14b58c <__udivdi3+0x298>
  14b7f4:	1805883a 	mov	r2,r3
  14b7f8:	003f0a06 	br	14b424 <__udivdi3+0x130>
  14b7fc:	2008943a 	slli	r4,r4,16
  14b800:	9420983a 	sll	r16,r18,r16
  14b804:	423fffcc 	andi	r8,r8,65535
  14b808:	2209883a 	add	r4,r4,r8
  14b80c:	813fc32e 	bgeu	r16,r4,14b71c <__udivdi3+0x428>
  14b810:	10bfffc4 	addi	r2,r2,-1
  14b814:	0007883a 	mov	r3,zero
  14b818:	003f6106 	br	14b5a0 <__udivdi3+0x2ac>
  14b81c:	00c00604 	movi	r3,24
  14b820:	180b883a 	mov	r5,r3
  14b824:	003f0b06 	br	14b454 <__udivdi3+0x160>
  14b828:	00c00204 	movi	r3,8
  14b82c:	180b883a 	mov	r5,r3
  14b830:	003f0806 	br	14b454 <__udivdi3+0x160>
  14b834:	00800604 	movi	r2,24
  14b838:	1007883a 	mov	r3,r2
  14b83c:	003ec506 	br	14b354 <__udivdi3+0x60>
  14b840:	00800604 	movi	r2,24
  14b844:	1007883a 	mov	r3,r2
  14b848:	003f1b06 	br	14b4b8 <__udivdi3+0x1c4>
  14b84c:	00800204 	movi	r2,8
  14b850:	1007883a 	mov	r3,r2
  14b854:	003f1806 	br	14b4b8 <__udivdi3+0x1c4>
  14b858:	00800204 	movi	r2,8
  14b85c:	1007883a 	mov	r3,r2
  14b860:	003ebc06 	br	14b354 <__udivdi3+0x60>
  14b864:	0007883a 	mov	r3,zero
  14b868:	00800044 	movi	r2,1
  14b86c:	003f4c06 	br	14b5a0 <__udivdi3+0x2ac>
  14b870:	197f942e 	bgeu	r3,r5,14b6c4 <__udivdi3+0x3d0>
  14b874:	213fff84 	addi	r4,r4,-2
  14b878:	1cc7883a 	add	r3,r3,r19
  14b87c:	003f9206 	br	14b6c8 <__udivdi3+0x3d4>
  14b880:	21bf7d2e 	bgeu	r4,r6,14b678 <__udivdi3+0x384>
  14b884:	ad7fff84 	addi	r21,r21,-2
  14b888:	24c9883a 	add	r4,r4,r19
  14b88c:	003f7b06 	br	14b67c <__udivdi3+0x388>
  14b890:	1805883a 	mov	r2,r3
  14b894:	003fd106 	br	14b7dc <__udivdi3+0x4e8>
  14b898:	1025883a 	mov	r18,r2
  14b89c:	003fbc06 	br	14b790 <__udivdi3+0x49c>
  14b8a0:	94bfff84 	addi	r18,r18,-2
  14b8a4:	2409883a 	add	r4,r4,r16
  14b8a8:	003f2406 	br	14b53c <__udivdi3+0x248>
  14b8ac:	94bfff84 	addi	r18,r18,-2
  14b8b0:	1c07883a 	add	r3,r3,r16
  14b8b4:	003ec906 	br	14b3dc <__udivdi3+0xe8>

0014b8b8 <__umoddi3>:
  14b8b8:	defff504 	addi	sp,sp,-44
  14b8bc:	dd000515 	stw	r20,20(sp)
  14b8c0:	dc800315 	stw	r18,12(sp)
  14b8c4:	dc400215 	stw	r17,8(sp)
  14b8c8:	dfc00a15 	stw	ra,40(sp)
  14b8cc:	df000915 	stw	fp,36(sp)
  14b8d0:	ddc00815 	stw	r23,32(sp)
  14b8d4:	dd800715 	stw	r22,28(sp)
  14b8d8:	dd400615 	stw	r21,24(sp)
  14b8dc:	dcc00415 	stw	r19,16(sp)
  14b8e0:	dc000115 	stw	r16,4(sp)
  14b8e4:	2025883a 	mov	r18,r4
  14b8e8:	2823883a 	mov	r17,r5
  14b8ec:	2829883a 	mov	r20,r5
  14b8f0:	3800381e 	bne	r7,zero,14b9d4 <__umoddi3+0x11c>
  14b8f4:	3021883a 	mov	r16,r6
  14b8f8:	2027883a 	mov	r19,r4
  14b8fc:	29804e2e 	bgeu	r5,r6,14ba38 <__umoddi3+0x180>
  14b900:	00bfffd4 	movui	r2,65535
  14b904:	11809c36 	bltu	r2,r6,14bb78 <__umoddi3+0x2c0>
  14b908:	00803fc4 	movi	r2,255
  14b90c:	11813c36 	bltu	r2,r6,14be00 <__umoddi3+0x548>
  14b910:	0005883a 	mov	r2,zero
  14b914:	0009883a 	mov	r4,zero
  14b918:	3084d83a 	srl	r2,r6,r2
  14b91c:	00c00574 	movhi	r3,21
  14b920:	18c40104 	addi	r3,r3,4100
  14b924:	1885883a 	add	r2,r3,r2
  14b928:	10800003 	ldbu	r2,0(r2)
  14b92c:	1109883a 	add	r4,r2,r4
  14b930:	00800804 	movi	r2,32
  14b934:	1105c83a 	sub	r2,r2,r4
  14b938:	1000ee26 	beq	r2,zero,14bcf4 <__umoddi3+0x43c>
  14b93c:	9108d83a 	srl	r4,r18,r4
  14b940:	88a2983a 	sll	r17,r17,r2
  14b944:	30a0983a 	sll	r16,r6,r2
  14b948:	90a6983a 	sll	r19,r18,r2
  14b94c:	8928b03a 	or	r20,r17,r4
  14b950:	1025883a 	mov	r18,r2
  14b954:	8022d43a 	srli	r17,r16,16
  14b958:	a009883a 	mov	r4,r20
  14b95c:	857fffcc 	andi	r21,r16,65535
  14b960:	880b883a 	mov	r5,r17
  14b964:	014bf5c0 	call	14bf5c <__umodsi3>
  14b968:	a009883a 	mov	r4,r20
  14b96c:	880b883a 	mov	r5,r17
  14b970:	102d883a 	mov	r22,r2
  14b974:	014bf540 	call	14bf54 <__udivsi3>
  14b978:	b02c943a 	slli	r22,r22,16
  14b97c:	9806d43a 	srli	r3,r19,16
  14b980:	1545383a 	mul	r2,r2,r21
  14b984:	b0c6b03a 	or	r3,r22,r3
  14b988:	1880042e 	bgeu	r3,r2,14b99c <__umoddi3+0xe4>
  14b98c:	1c07883a 	add	r3,r3,r16
  14b990:	1c000236 	bltu	r3,r16,14b99c <__umoddi3+0xe4>
  14b994:	1880012e 	bgeu	r3,r2,14b99c <__umoddi3+0xe4>
  14b998:	1c07883a 	add	r3,r3,r16
  14b99c:	18a9c83a 	sub	r20,r3,r2
  14b9a0:	a009883a 	mov	r4,r20
  14b9a4:	880b883a 	mov	r5,r17
  14b9a8:	014bf5c0 	call	14bf5c <__umodsi3>
  14b9ac:	102d883a 	mov	r22,r2
  14b9b0:	a009883a 	mov	r4,r20
  14b9b4:	880b883a 	mov	r5,r17
  14b9b8:	014bf540 	call	14bf54 <__udivsi3>
  14b9bc:	b02c943a 	slli	r22,r22,16
  14b9c0:	1545383a 	mul	r2,r2,r21
  14b9c4:	9cffffcc 	andi	r19,r19,65535
  14b9c8:	b4e6b03a 	or	r19,r22,r19
  14b9cc:	9880532e 	bgeu	r19,r2,14bb1c <__umoddi3+0x264>
  14b9d0:	00004e06 	br	14bb0c <__umoddi3+0x254>
  14b9d4:	29c05536 	bltu	r5,r7,14bb2c <__umoddi3+0x274>
  14b9d8:	00bfffd4 	movui	r2,65535
  14b9dc:	11c0612e 	bgeu	r2,r7,14bb64 <__umoddi3+0x2ac>
  14b9e0:	00804034 	movhi	r2,256
  14b9e4:	10bfffc4 	addi	r2,r2,-1
  14b9e8:	11c0f936 	bltu	r2,r7,14bdd0 <__umoddi3+0x518>
  14b9ec:	00c00404 	movi	r3,16
  14b9f0:	1827883a 	mov	r19,r3
  14b9f4:	38c6d83a 	srl	r3,r7,r3
  14b9f8:	01000574 	movhi	r4,21
  14b9fc:	21040104 	addi	r4,r4,4100
  14ba00:	04000804 	movi	r16,32
  14ba04:	20c7883a 	add	r3,r4,r3
  14ba08:	18800003 	ldbu	r2,0(r3)
  14ba0c:	14e7883a 	add	r19,r2,r19
  14ba10:	84e1c83a 	sub	r16,r16,r19
  14ba14:	8000631e 	bne	r16,zero,14bba4 <__umoddi3+0x2ec>
  14ba18:	3c400136 	bltu	r7,r17,14ba20 <__umoddi3+0x168>
  14ba1c:	91810536 	bltu	r18,r6,14be34 <__umoddi3+0x57c>
  14ba20:	9185c83a 	sub	r2,r18,r6
  14ba24:	89e3c83a 	sub	r17,r17,r7
  14ba28:	90a5803a 	cmpltu	r18,r18,r2
  14ba2c:	8ca9c83a 	sub	r20,r17,r18
  14ba30:	a007883a 	mov	r3,r20
  14ba34:	00003f06 	br	14bb34 <__umoddi3+0x27c>
  14ba38:	3000041e 	bne	r6,zero,14ba4c <__umoddi3+0x194>
  14ba3c:	01000044 	movi	r4,1
  14ba40:	000b883a 	mov	r5,zero
  14ba44:	014bf540 	call	14bf54 <__udivsi3>
  14ba48:	1021883a 	mov	r16,r2
  14ba4c:	00bfffd4 	movui	r2,65535
  14ba50:	14004f2e 	bgeu	r2,r16,14bb90 <__umoddi3+0x2d8>
  14ba54:	00804034 	movhi	r2,256
  14ba58:	10bfffc4 	addi	r2,r2,-1
  14ba5c:	1400e536 	bltu	r2,r16,14bdf4 <__umoddi3+0x53c>
  14ba60:	00800404 	movi	r2,16
  14ba64:	1007883a 	mov	r3,r2
  14ba68:	8084d83a 	srl	r2,r16,r2
  14ba6c:	01000574 	movhi	r4,21
  14ba70:	21040104 	addi	r4,r4,4100
  14ba74:	05400804 	movi	r21,32
  14ba78:	2085883a 	add	r2,r4,r2
  14ba7c:	10800003 	ldbu	r2,0(r2)
  14ba80:	10c7883a 	add	r3,r2,r3
  14ba84:	a8ebc83a 	sub	r21,r21,r3
  14ba88:	a8009c1e 	bne	r21,zero,14bcfc <__umoddi3+0x444>
  14ba8c:	8028d43a 	srli	r20,r16,16
  14ba90:	8c23c83a 	sub	r17,r17,r16
  14ba94:	85bfffcc 	andi	r22,r16,65535
  14ba98:	0025883a 	mov	r18,zero
  14ba9c:	8809883a 	mov	r4,r17
  14baa0:	a00b883a 	mov	r5,r20
  14baa4:	014bf5c0 	call	14bf5c <__umodsi3>
  14baa8:	8809883a 	mov	r4,r17
  14baac:	a00b883a 	mov	r5,r20
  14bab0:	102b883a 	mov	r21,r2
  14bab4:	014bf540 	call	14bf54 <__udivsi3>
  14bab8:	a82a943a 	slli	r21,r21,16
  14babc:	9806d43a 	srli	r3,r19,16
  14bac0:	1585383a 	mul	r2,r2,r22
  14bac4:	a8c6b03a 	or	r3,r21,r3
  14bac8:	1880032e 	bgeu	r3,r2,14bad8 <__umoddi3+0x220>
  14bacc:	1c07883a 	add	r3,r3,r16
  14bad0:	1c000136 	bltu	r3,r16,14bad8 <__umoddi3+0x220>
  14bad4:	1880d536 	bltu	r3,r2,14be2c <__umoddi3+0x574>
  14bad8:	18a3c83a 	sub	r17,r3,r2
  14badc:	8809883a 	mov	r4,r17
  14bae0:	a00b883a 	mov	r5,r20
  14bae4:	014bf5c0 	call	14bf5c <__umodsi3>
  14bae8:	102b883a 	mov	r21,r2
  14baec:	8809883a 	mov	r4,r17
  14baf0:	a00b883a 	mov	r5,r20
  14baf4:	014bf540 	call	14bf54 <__udivsi3>
  14baf8:	a82a943a 	slli	r21,r21,16
  14bafc:	1585383a 	mul	r2,r2,r22
  14bb00:	9cffffcc 	andi	r19,r19,65535
  14bb04:	ace6b03a 	or	r19,r21,r19
  14bb08:	9880042e 	bgeu	r19,r2,14bb1c <__umoddi3+0x264>
  14bb0c:	9c27883a 	add	r19,r19,r16
  14bb10:	9c000236 	bltu	r19,r16,14bb1c <__umoddi3+0x264>
  14bb14:	9880012e 	bgeu	r19,r2,14bb1c <__umoddi3+0x264>
  14bb18:	9c27883a 	add	r19,r19,r16
  14bb1c:	98a7c83a 	sub	r19,r19,r2
  14bb20:	9c84d83a 	srl	r2,r19,r18
  14bb24:	0007883a 	mov	r3,zero
  14bb28:	00000206 	br	14bb34 <__umoddi3+0x27c>
  14bb2c:	2005883a 	mov	r2,r4
  14bb30:	2807883a 	mov	r3,r5
  14bb34:	dfc00a17 	ldw	ra,40(sp)
  14bb38:	df000917 	ldw	fp,36(sp)
  14bb3c:	ddc00817 	ldw	r23,32(sp)
  14bb40:	dd800717 	ldw	r22,28(sp)
  14bb44:	dd400617 	ldw	r21,24(sp)
  14bb48:	dd000517 	ldw	r20,20(sp)
  14bb4c:	dcc00417 	ldw	r19,16(sp)
  14bb50:	dc800317 	ldw	r18,12(sp)
  14bb54:	dc400217 	ldw	r17,8(sp)
  14bb58:	dc000117 	ldw	r16,4(sp)
  14bb5c:	dec00b04 	addi	sp,sp,44
  14bb60:	f800283a 	ret
  14bb64:	00803fc4 	movi	r2,255
  14bb68:	11c09636 	bltu	r2,r7,14bdc4 <__umoddi3+0x50c>
  14bb6c:	0007883a 	mov	r3,zero
  14bb70:	0027883a 	mov	r19,zero
  14bb74:	003f9f06 	br	14b9f4 <__umoddi3+0x13c>
  14bb78:	00804034 	movhi	r2,256
  14bb7c:	10bfffc4 	addi	r2,r2,-1
  14bb80:	11809636 	bltu	r2,r6,14bddc <__umoddi3+0x524>
  14bb84:	00800404 	movi	r2,16
  14bb88:	1009883a 	mov	r4,r2
  14bb8c:	003f6206 	br	14b918 <__umoddi3+0x60>
  14bb90:	00803fc4 	movi	r2,255
  14bb94:	14009436 	bltu	r2,r16,14bde8 <__umoddi3+0x530>
  14bb98:	0005883a 	mov	r2,zero
  14bb9c:	0007883a 	mov	r3,zero
  14bba0:	003fb106 	br	14ba68 <__umoddi3+0x1b0>
  14bba4:	3c0e983a 	sll	r7,r7,r16
  14bba8:	34c4d83a 	srl	r2,r6,r19
  14bbac:	8ceed83a 	srl	r23,r17,r19
  14bbb0:	8c22983a 	sll	r17,r17,r16
  14bbb4:	38a8b03a 	or	r20,r7,r2
  14bbb8:	a02ad43a 	srli	r21,r20,16
  14bbbc:	94c4d83a 	srl	r2,r18,r19
  14bbc0:	b809883a 	mov	r4,r23
  14bbc4:	a80b883a 	mov	r5,r21
  14bbc8:	88a2b03a 	or	r17,r17,r2
  14bbcc:	342c983a 	sll	r22,r6,r16
  14bbd0:	014bf5c0 	call	14bf5c <__umodsi3>
  14bbd4:	b809883a 	mov	r4,r23
  14bbd8:	a80b883a 	mov	r5,r21
  14bbdc:	d8800015 	stw	r2,0(sp)
  14bbe0:	014bf540 	call	14bf54 <__udivsi3>
  14bbe4:	d8c00017 	ldw	r3,0(sp)
  14bbe8:	102f883a 	mov	r23,r2
  14bbec:	a73fffcc 	andi	fp,r20,65535
  14bbf0:	180a943a 	slli	r5,r3,16
  14bbf4:	8804d43a 	srli	r2,r17,16
  14bbf8:	bf0f383a 	mul	r7,r23,fp
  14bbfc:	9424983a 	sll	r18,r18,r16
  14bc00:	288ab03a 	or	r5,r5,r2
  14bc04:	29c0042e 	bgeu	r5,r7,14bc18 <__umoddi3+0x360>
  14bc08:	2d0b883a 	add	r5,r5,r20
  14bc0c:	b8bfffc4 	addi	r2,r23,-1
  14bc10:	2d00822e 	bgeu	r5,r20,14be1c <__umoddi3+0x564>
  14bc14:	102f883a 	mov	r23,r2
  14bc18:	29cfc83a 	sub	r7,r5,r7
  14bc1c:	3809883a 	mov	r4,r7
  14bc20:	a80b883a 	mov	r5,r21
  14bc24:	d9c00015 	stw	r7,0(sp)
  14bc28:	014bf5c0 	call	14bf5c <__umodsi3>
  14bc2c:	d9c00017 	ldw	r7,0(sp)
  14bc30:	a80b883a 	mov	r5,r21
  14bc34:	d8800015 	stw	r2,0(sp)
  14bc38:	3809883a 	mov	r4,r7
  14bc3c:	014bf540 	call	14bf54 <__udivsi3>
  14bc40:	d8c00017 	ldw	r3,0(sp)
  14bc44:	170d383a 	mul	r6,r2,fp
  14bc48:	8c7fffcc 	andi	r17,r17,65535
  14bc4c:	1808943a 	slli	r4,r3,16
  14bc50:	2448b03a 	or	r4,r4,r17
  14bc54:	2180042e 	bgeu	r4,r6,14bc68 <__umoddi3+0x3b0>
  14bc58:	2509883a 	add	r4,r4,r20
  14bc5c:	10ffffc4 	addi	r3,r2,-1
  14bc60:	25006a2e 	bgeu	r4,r20,14be0c <__umoddi3+0x554>
  14bc64:	1805883a 	mov	r2,r3
  14bc68:	b82e943a 	slli	r23,r23,16
  14bc6c:	b010d43a 	srli	r8,r22,16
  14bc70:	b1ffffcc 	andi	r7,r22,65535
  14bc74:	15eeb03a 	or	r23,r2,r23
  14bc78:	b8bfffcc 	andi	r2,r23,65535
  14bc7c:	b82ed43a 	srli	r23,r23,16
  14bc80:	11c7383a 	mul	r3,r2,r7
  14bc84:	1205383a 	mul	r2,r2,r8
  14bc88:	b9cf383a 	mul	r7,r23,r7
  14bc8c:	400b883a 	mov	r5,r8
  14bc90:	1810d43a 	srli	r8,r3,16
  14bc94:	3885883a 	add	r2,r7,r2
  14bc98:	2189c83a 	sub	r4,r4,r6
  14bc9c:	1205883a 	add	r2,r2,r8
  14bca0:	b94b383a 	mul	r5,r23,r5
  14bca4:	11c0022e 	bgeu	r2,r7,14bcb0 <__umoddi3+0x3f8>
  14bca8:	01800074 	movhi	r6,1
  14bcac:	298b883a 	add	r5,r5,r6
  14bcb0:	100cd43a 	srli	r6,r2,16
  14bcb4:	1004943a 	slli	r2,r2,16
  14bcb8:	18ffffcc 	andi	r3,r3,65535
  14bcbc:	298b883a 	add	r5,r5,r6
  14bcc0:	10c5883a 	add	r2,r2,r3
  14bcc4:	21403936 	bltu	r4,r5,14bdac <__umoddi3+0x4f4>
  14bcc8:	21405d26 	beq	r4,r5,14be40 <__umoddi3+0x588>
  14bccc:	2147c83a 	sub	r3,r4,r5
  14bcd0:	102d883a 	mov	r22,r2
  14bcd4:	95adc83a 	sub	r22,r18,r22
  14bcd8:	95a5803a 	cmpltu	r18,r18,r22
  14bcdc:	1c87c83a 	sub	r3,r3,r18
  14bce0:	1cc4983a 	sll	r2,r3,r19
  14bce4:	b42cd83a 	srl	r22,r22,r16
  14bce8:	1c06d83a 	srl	r3,r3,r16
  14bcec:	1584b03a 	or	r2,r2,r22
  14bcf0:	003f9006 	br	14bb34 <__umoddi3+0x27c>
  14bcf4:	0025883a 	mov	r18,zero
  14bcf8:	003f1606 	br	14b954 <__umoddi3+0x9c>
  14bcfc:	8560983a 	sll	r16,r16,r21
  14bd00:	88e6d83a 	srl	r19,r17,r3
  14bd04:	90c6d83a 	srl	r3,r18,r3
  14bd08:	8028d43a 	srli	r20,r16,16
  14bd0c:	8d62983a 	sll	r17,r17,r21
  14bd10:	9809883a 	mov	r4,r19
  14bd14:	a00b883a 	mov	r5,r20
  14bd18:	88eeb03a 	or	r23,r17,r3
  14bd1c:	014bf5c0 	call	14bf5c <__umodsi3>
  14bd20:	9809883a 	mov	r4,r19
  14bd24:	a00b883a 	mov	r5,r20
  14bd28:	1023883a 	mov	r17,r2
  14bd2c:	014bf540 	call	14bf54 <__udivsi3>
  14bd30:	85bfffcc 	andi	r22,r16,65535
  14bd34:	8808943a 	slli	r4,r17,16
  14bd38:	b806d43a 	srli	r3,r23,16
  14bd3c:	1585383a 	mul	r2,r2,r22
  14bd40:	9566983a 	sll	r19,r18,r21
  14bd44:	20c8b03a 	or	r4,r4,r3
  14bd48:	2080042e 	bgeu	r4,r2,14bd5c <__umoddi3+0x4a4>
  14bd4c:	2409883a 	add	r4,r4,r16
  14bd50:	24000236 	bltu	r4,r16,14bd5c <__umoddi3+0x4a4>
  14bd54:	2080012e 	bgeu	r4,r2,14bd5c <__umoddi3+0x4a4>
  14bd58:	2409883a 	add	r4,r4,r16
  14bd5c:	20a5c83a 	sub	r18,r4,r2
  14bd60:	9009883a 	mov	r4,r18
  14bd64:	a00b883a 	mov	r5,r20
  14bd68:	014bf5c0 	call	14bf5c <__umodsi3>
  14bd6c:	1023883a 	mov	r17,r2
  14bd70:	9009883a 	mov	r4,r18
  14bd74:	a00b883a 	mov	r5,r20
  14bd78:	014bf540 	call	14bf54 <__udivsi3>
  14bd7c:	8822943a 	slli	r17,r17,16
  14bd80:	1585383a 	mul	r2,r2,r22
  14bd84:	bdffffcc 	andi	r23,r23,65535
  14bd88:	8de2b03a 	or	r17,r17,r23
  14bd8c:	8880042e 	bgeu	r17,r2,14bda0 <__umoddi3+0x4e8>
  14bd90:	8c23883a 	add	r17,r17,r16
  14bd94:	8c000236 	bltu	r17,r16,14bda0 <__umoddi3+0x4e8>
  14bd98:	8880012e 	bgeu	r17,r2,14bda0 <__umoddi3+0x4e8>
  14bd9c:	8c23883a 	add	r17,r17,r16
  14bda0:	88a3c83a 	sub	r17,r17,r2
  14bda4:	a825883a 	mov	r18,r21
  14bda8:	003f3c06 	br	14ba9c <__umoddi3+0x1e4>
  14bdac:	15adc83a 	sub	r22,r2,r22
  14bdb0:	2d07c83a 	sub	r3,r5,r20
  14bdb4:	1585803a 	cmpltu	r2,r2,r22
  14bdb8:	1887c83a 	sub	r3,r3,r2
  14bdbc:	20c7c83a 	sub	r3,r4,r3
  14bdc0:	003fc406 	br	14bcd4 <__umoddi3+0x41c>
  14bdc4:	00c00204 	movi	r3,8
  14bdc8:	1827883a 	mov	r19,r3
  14bdcc:	003f0906 	br	14b9f4 <__umoddi3+0x13c>
  14bdd0:	00c00604 	movi	r3,24
  14bdd4:	1827883a 	mov	r19,r3
  14bdd8:	003f0606 	br	14b9f4 <__umoddi3+0x13c>
  14bddc:	00800604 	movi	r2,24
  14bde0:	1009883a 	mov	r4,r2
  14bde4:	003ecc06 	br	14b918 <__umoddi3+0x60>
  14bde8:	00800204 	movi	r2,8
  14bdec:	1007883a 	mov	r3,r2
  14bdf0:	003f1d06 	br	14ba68 <__umoddi3+0x1b0>
  14bdf4:	00800604 	movi	r2,24
  14bdf8:	1007883a 	mov	r3,r2
  14bdfc:	003f1a06 	br	14ba68 <__umoddi3+0x1b0>
  14be00:	00800204 	movi	r2,8
  14be04:	1009883a 	mov	r4,r2
  14be08:	003ec306 	br	14b918 <__umoddi3+0x60>
  14be0c:	21bf952e 	bgeu	r4,r6,14bc64 <__umoddi3+0x3ac>
  14be10:	10bfff84 	addi	r2,r2,-2
  14be14:	2509883a 	add	r4,r4,r20
  14be18:	003f9306 	br	14bc68 <__umoddi3+0x3b0>
  14be1c:	29ff7d2e 	bgeu	r5,r7,14bc14 <__umoddi3+0x35c>
  14be20:	bdffff84 	addi	r23,r23,-2
  14be24:	2d0b883a 	add	r5,r5,r20
  14be28:	003f7b06 	br	14bc18 <__umoddi3+0x360>
  14be2c:	1c07883a 	add	r3,r3,r16
  14be30:	003f2906 	br	14bad8 <__umoddi3+0x220>
  14be34:	9005883a 	mov	r2,r18
  14be38:	a007883a 	mov	r3,r20
  14be3c:	003f3d06 	br	14bb34 <__umoddi3+0x27c>
  14be40:	90bfda36 	bltu	r18,r2,14bdac <__umoddi3+0x4f4>
  14be44:	102d883a 	mov	r22,r2
  14be48:	0007883a 	mov	r3,zero
  14be4c:	003fa106 	br	14bcd4 <__umoddi3+0x41c>

0014be50 <udivmodsi4>:
  14be50:	2900182e 	bgeu	r5,r4,14beb4 <udivmodsi4+0x64>
  14be54:	28001716 	blt	r5,zero,14beb4 <udivmodsi4+0x64>
  14be58:	00800804 	movi	r2,32
  14be5c:	00c00044 	movi	r3,1
  14be60:	00000206 	br	14be6c <udivmodsi4+0x1c>
  14be64:	10001126 	beq	r2,zero,14beac <udivmodsi4+0x5c>
  14be68:	28000516 	blt	r5,zero,14be80 <udivmodsi4+0x30>
  14be6c:	294b883a 	add	r5,r5,r5
  14be70:	10bfffc4 	addi	r2,r2,-1
  14be74:	18c7883a 	add	r3,r3,r3
  14be78:	293ffa36 	bltu	r5,r4,14be64 <udivmodsi4+0x14>
  14be7c:	18000b26 	beq	r3,zero,14beac <udivmodsi4+0x5c>
  14be80:	0005883a 	mov	r2,zero
  14be84:	21400236 	bltu	r4,r5,14be90 <udivmodsi4+0x40>
  14be88:	2149c83a 	sub	r4,r4,r5
  14be8c:	10c4b03a 	or	r2,r2,r3
  14be90:	1806d07a 	srli	r3,r3,1
  14be94:	280ad07a 	srli	r5,r5,1
  14be98:	183ffa1e 	bne	r3,zero,14be84 <udivmodsi4+0x34>
  14be9c:	3000011e 	bne	r6,zero,14bea4 <udivmodsi4+0x54>
  14bea0:	f800283a 	ret
  14bea4:	2005883a 	mov	r2,r4
  14bea8:	f800283a 	ret
  14beac:	0005883a 	mov	r2,zero
  14beb0:	003ffa06 	br	14be9c <udivmodsi4+0x4c>
  14beb4:	00c00044 	movi	r3,1
  14beb8:	0005883a 	mov	r2,zero
  14bebc:	003ff106 	br	14be84 <udivmodsi4+0x34>

0014bec0 <__divsi3>:
  14bec0:	deffff04 	addi	sp,sp,-4
  14bec4:	dfc00015 	stw	ra,0(sp)
  14bec8:	20000916 	blt	r4,zero,14bef0 <__divsi3+0x30>
  14becc:	000f883a 	mov	r7,zero
  14bed0:	28000a16 	blt	r5,zero,14befc <__divsi3+0x3c>
  14bed4:	000d883a 	mov	r6,zero
  14bed8:	014be500 	call	14be50 <udivmodsi4>
  14bedc:	38000126 	beq	r7,zero,14bee4 <__divsi3+0x24>
  14bee0:	0085c83a 	sub	r2,zero,r2
  14bee4:	dfc00017 	ldw	ra,0(sp)
  14bee8:	dec00104 	addi	sp,sp,4
  14beec:	f800283a 	ret
  14bef0:	0109c83a 	sub	r4,zero,r4
  14bef4:	01c00044 	movi	r7,1
  14bef8:	283ff60e 	bge	r5,zero,14bed4 <__divsi3+0x14>
  14befc:	014bc83a 	sub	r5,zero,r5
  14bf00:	39c0005c 	xori	r7,r7,1
  14bf04:	003ff306 	br	14bed4 <__divsi3+0x14>

0014bf08 <__modsi3>:
  14bf08:	20000316 	blt	r4,zero,14bf18 <__modsi3+0x10>
  14bf0c:	28000c16 	blt	r5,zero,14bf40 <__modsi3+0x38>
  14bf10:	01800044 	movi	r6,1
  14bf14:	014be501 	jmpi	14be50 <udivmodsi4>
  14bf18:	deffff04 	addi	sp,sp,-4
  14bf1c:	dfc00015 	stw	ra,0(sp)
  14bf20:	0109c83a 	sub	r4,zero,r4
  14bf24:	28000916 	blt	r5,zero,14bf4c <__modsi3+0x44>
  14bf28:	01800044 	movi	r6,1
  14bf2c:	014be500 	call	14be50 <udivmodsi4>
  14bf30:	0085c83a 	sub	r2,zero,r2
  14bf34:	dfc00017 	ldw	ra,0(sp)
  14bf38:	dec00104 	addi	sp,sp,4
  14bf3c:	f800283a 	ret
  14bf40:	014bc83a 	sub	r5,zero,r5
  14bf44:	01800044 	movi	r6,1
  14bf48:	014be501 	jmpi	14be50 <udivmodsi4>
  14bf4c:	014bc83a 	sub	r5,zero,r5
  14bf50:	003ff506 	br	14bf28 <__modsi3+0x20>

0014bf54 <__udivsi3>:
  14bf54:	000d883a 	mov	r6,zero
  14bf58:	014be501 	jmpi	14be50 <udivmodsi4>

0014bf5c <__umodsi3>:
  14bf5c:	01800044 	movi	r6,1
  14bf60:	014be501 	jmpi	14be50 <udivmodsi4>

0014bf64 <__adddf3>:
  14bf64:	00800434 	movhi	r2,16
  14bf68:	10bfffc4 	addi	r2,r2,-1
  14bf6c:	defffb04 	addi	sp,sp,-20
  14bf70:	2890703a 	and	r8,r5,r2
  14bf74:	2806d7fa 	srli	r3,r5,31
  14bf78:	3884703a 	and	r2,r7,r2
  14bf7c:	2014d77a 	srli	r10,r4,29
  14bf80:	3812d53a 	srli	r9,r7,20
  14bf84:	dc400115 	stw	r17,4(sp)
  14bf88:	100490fa 	slli	r2,r2,3
  14bf8c:	2822d53a 	srli	r17,r5,20
  14bf90:	380ed7fa 	srli	r7,r7,31
  14bf94:	400a90fa 	slli	r5,r8,3
  14bf98:	3010d77a 	srli	r8,r6,29
  14bf9c:	dc800215 	stw	r18,8(sp)
  14bfa0:	dc000015 	stw	r16,0(sp)
  14bfa4:	dfc00415 	stw	ra,16(sp)
  14bfa8:	dcc00315 	stw	r19,12(sp)
  14bfac:	1c803fcc 	andi	r18,r3,255
  14bfb0:	202090fa 	slli	r16,r4,3
  14bfb4:	8c41ffcc 	andi	r17,r17,2047
  14bfb8:	2a8ab03a 	or	r5,r5,r10
  14bfbc:	4901ffcc 	andi	r4,r9,2047
  14bfc0:	1204b03a 	or	r2,r2,r8
  14bfc4:	300c90fa 	slli	r6,r6,3
  14bfc8:	91c07126 	beq	r18,r7,14c190 <__adddf3+0x22c>
  14bfcc:	8907c83a 	sub	r3,r17,r4
  14bfd0:	00c0a00e 	bge	zero,r3,14c254 <__adddf3+0x2f0>
  14bfd4:	2000291e 	bne	r4,zero,14c07c <__adddf3+0x118>
  14bfd8:	1188b03a 	or	r4,r2,r6
  14bfdc:	20008b1e 	bne	r4,zero,14c20c <__adddf3+0x2a8>
  14bfe0:	808001cc 	andi	r2,r16,7
  14bfe4:	10005a26 	beq	r2,zero,14c150 <__adddf3+0x1ec>
  14bfe8:	80c003cc 	andi	r3,r16,15
  14bfec:	00800104 	movi	r2,4
  14bff0:	18805726 	beq	r3,r2,14c150 <__adddf3+0x1ec>
  14bff4:	81000104 	addi	r4,r16,4
  14bff8:	2421803a 	cmpltu	r16,r4,r16
  14bffc:	2c0b883a 	add	r5,r5,r16
  14c000:	2880202c 	andhi	r2,r5,128
  14c004:	9007883a 	mov	r3,r18
  14c008:	2021883a 	mov	r16,r4
  14c00c:	10005326 	beq	r2,zero,14c15c <__adddf3+0x1f8>
  14c010:	8c400044 	addi	r17,r17,1
  14c014:	0081ffc4 	movi	r2,2047
  14c018:	8880ae26 	beq	r17,r2,14c2d4 <__adddf3+0x370>
  14c01c:	00bfe034 	movhi	r2,65408
  14c020:	10bfffc4 	addi	r2,r2,-1
  14c024:	288a703a 	and	r5,r5,r2
  14c028:	2804977a 	slli	r2,r5,29
  14c02c:	280a927a 	slli	r5,r5,9
  14c030:	8020d0fa 	srli	r16,r16,3
  14c034:	280ad33a 	srli	r5,r5,12
  14c038:	1404b03a 	or	r2,r2,r16
  14c03c:	8c41ffcc 	andi	r17,r17,2047
  14c040:	8822953a 	slli	r17,r17,20
  14c044:	18c03fcc 	andi	r3,r3,255
  14c048:	180897fa 	slli	r4,r3,31
  14c04c:	00c00434 	movhi	r3,16
  14c050:	18ffffc4 	addi	r3,r3,-1
  14c054:	28c6703a 	and	r3,r5,r3
  14c058:	1c46b03a 	or	r3,r3,r17
  14c05c:	1906b03a 	or	r3,r3,r4
  14c060:	dfc00417 	ldw	ra,16(sp)
  14c064:	dcc00317 	ldw	r19,12(sp)
  14c068:	dc800217 	ldw	r18,8(sp)
  14c06c:	dc400117 	ldw	r17,4(sp)
  14c070:	dc000017 	ldw	r16,0(sp)
  14c074:	dec00504 	addi	sp,sp,20
  14c078:	f800283a 	ret
  14c07c:	0101ffc4 	movi	r4,2047
  14c080:	893fd726 	beq	r17,r4,14bfe0 <__adddf3+0x7c>
  14c084:	10802034 	orhi	r2,r2,128
  14c088:	01000e04 	movi	r4,56
  14c08c:	20c09416 	blt	r4,r3,14c2e0 <__adddf3+0x37c>
  14c090:	010007c4 	movi	r4,31
  14c094:	20c0b716 	blt	r4,r3,14c374 <__adddf3+0x410>
  14c098:	01000804 	movi	r4,32
  14c09c:	20c9c83a 	sub	r4,r4,r3
  14c0a0:	30ced83a 	srl	r7,r6,r3
  14c0a4:	1110983a 	sll	r8,r2,r4
  14c0a8:	3108983a 	sll	r4,r6,r4
  14c0ac:	10c6d83a 	srl	r3,r2,r3
  14c0b0:	41c4b03a 	or	r2,r8,r7
  14c0b4:	2008c03a 	cmpne	r4,r4,zero
  14c0b8:	110cb03a 	or	r6,r2,r4
  14c0bc:	818dc83a 	sub	r6,r16,r6
  14c0c0:	81a1803a 	cmpltu	r16,r16,r6
  14c0c4:	28cbc83a 	sub	r5,r5,r3
  14c0c8:	2c0bc83a 	sub	r5,r5,r16
  14c0cc:	3021883a 	mov	r16,r6
  14c0d0:	2880202c 	andhi	r2,r5,128
  14c0d4:	103fc226 	beq	r2,zero,14bfe0 <__adddf3+0x7c>
  14c0d8:	04c02034 	movhi	r19,128
  14c0dc:	9cffffc4 	addi	r19,r19,-1
  14c0e0:	2ce6703a 	and	r19,r5,r19
  14c0e4:	98006c26 	beq	r19,zero,14c298 <__adddf3+0x334>
  14c0e8:	9809883a 	mov	r4,r19
  14c0ec:	01421980 	call	142198 <__clzsi2>
  14c0f0:	10fffe04 	addi	r3,r2,-8
  14c0f4:	010007c4 	movi	r4,31
  14c0f8:	20c06d16 	blt	r4,r3,14c2b0 <__adddf3+0x34c>
  14c0fc:	01000a04 	movi	r4,40
  14c100:	2085c83a 	sub	r2,r4,r2
  14c104:	8084d83a 	srl	r2,r16,r2
  14c108:	98e6983a 	sll	r19,r19,r3
  14c10c:	80e0983a 	sll	r16,r16,r3
  14c110:	14c4b03a 	or	r2,r2,r19
  14c114:	1c406a16 	blt	r3,r17,14c2c0 <__adddf3+0x35c>
  14c118:	1c63c83a 	sub	r17,r3,r17
  14c11c:	89400044 	addi	r5,r17,1
  14c120:	00c007c4 	movi	r3,31
  14c124:	19408616 	blt	r3,r5,14c340 <__adddf3+0x3dc>
  14c128:	1c47c83a 	sub	r3,r3,r17
  14c12c:	8148d83a 	srl	r4,r16,r5
  14c130:	80e0983a 	sll	r16,r16,r3
  14c134:	10c6983a 	sll	r3,r2,r3
  14c138:	114ad83a 	srl	r5,r2,r5
  14c13c:	8004c03a 	cmpne	r2,r16,zero
  14c140:	20e0b03a 	or	r16,r4,r3
  14c144:	80a0b03a 	or	r16,r16,r2
  14c148:	0023883a 	mov	r17,zero
  14c14c:	003fa406 	br	14bfe0 <__adddf3+0x7c>
  14c150:	2880202c 	andhi	r2,r5,128
  14c154:	9007883a 	mov	r3,r18
  14c158:	103fad1e 	bne	r2,zero,14c010 <__adddf3+0xac>
  14c15c:	2804977a 	slli	r2,r5,29
  14c160:	8020d0fa 	srli	r16,r16,3
  14c164:	0101ffc4 	movi	r4,2047
  14c168:	280ad0fa 	srli	r5,r5,3
  14c16c:	1404b03a 	or	r2,r2,r16
  14c170:	8900031e 	bne	r17,r4,14c180 <__adddf3+0x21c>
  14c174:	1148b03a 	or	r4,r2,r5
  14c178:	20005626 	beq	r4,zero,14c2d4 <__adddf3+0x370>
  14c17c:	29400234 	orhi	r5,r5,8
  14c180:	01000434 	movhi	r4,16
  14c184:	213fffc4 	addi	r4,r4,-1
  14c188:	290a703a 	and	r5,r5,r4
  14c18c:	003fab06 	br	14c03c <__adddf3+0xd8>
  14c190:	890fc83a 	sub	r7,r17,r4
  14c194:	01c0560e 	bge	zero,r7,14c2f0 <__adddf3+0x38c>
  14c198:	20002426 	beq	r4,zero,14c22c <__adddf3+0x2c8>
  14c19c:	0101ffc4 	movi	r4,2047
  14c1a0:	893f8f26 	beq	r17,r4,14bfe0 <__adddf3+0x7c>
  14c1a4:	10802034 	orhi	r2,r2,128
  14c1a8:	01000e04 	movi	r4,56
  14c1ac:	21c09d0e 	bge	r4,r7,14c424 <__adddf3+0x4c0>
  14c1b0:	118cb03a 	or	r6,r2,r6
  14c1b4:	300cc03a 	cmpne	r6,r6,zero
  14c1b8:	000f883a 	mov	r7,zero
  14c1bc:	340d883a 	add	r6,r6,r16
  14c1c0:	3421803a 	cmpltu	r16,r6,r16
  14c1c4:	394b883a 	add	r5,r7,r5
  14c1c8:	2c0b883a 	add	r5,r5,r16
  14c1cc:	3021883a 	mov	r16,r6
  14c1d0:	2880202c 	andhi	r2,r5,128
  14c1d4:	103f8226 	beq	r2,zero,14bfe0 <__adddf3+0x7c>
  14c1d8:	8c400044 	addi	r17,r17,1
  14c1dc:	0081ffc4 	movi	r2,2047
  14c1e0:	8880cb26 	beq	r17,r2,14c510 <__adddf3+0x5ac>
  14c1e4:	00bfe034 	movhi	r2,65408
  14c1e8:	10bfffc4 	addi	r2,r2,-1
  14c1ec:	288a703a 	and	r5,r5,r2
  14c1f0:	8006d07a 	srli	r3,r16,1
  14c1f4:	280497fa 	slli	r2,r5,31
  14c1f8:	8400004c 	andi	r16,r16,1
  14c1fc:	80e0b03a 	or	r16,r16,r3
  14c200:	80a0b03a 	or	r16,r16,r2
  14c204:	280ad07a 	srli	r5,r5,1
  14c208:	003f7506 	br	14bfe0 <__adddf3+0x7c>
  14c20c:	18ffffc4 	addi	r3,r3,-1
  14c210:	1800481e 	bne	r3,zero,14c334 <__adddf3+0x3d0>
  14c214:	818dc83a 	sub	r6,r16,r6
  14c218:	81a1803a 	cmpltu	r16,r16,r6
  14c21c:	288bc83a 	sub	r5,r5,r2
  14c220:	2c0bc83a 	sub	r5,r5,r16
  14c224:	3021883a 	mov	r16,r6
  14c228:	003fa906 	br	14c0d0 <__adddf3+0x16c>
  14c22c:	1188b03a 	or	r4,r2,r6
  14c230:	203f6b26 	beq	r4,zero,14bfe0 <__adddf3+0x7c>
  14c234:	39ffffc4 	addi	r7,r7,-1
  14c238:	3800931e 	bne	r7,zero,14c488 <__adddf3+0x524>
  14c23c:	340d883a 	add	r6,r6,r16
  14c240:	3421803a 	cmpltu	r16,r6,r16
  14c244:	114b883a 	add	r5,r2,r5
  14c248:	2c0b883a 	add	r5,r5,r16
  14c24c:	3021883a 	mov	r16,r6
  14c250:	003fdf06 	br	14c1d0 <__adddf3+0x26c>
  14c254:	1800531e 	bne	r3,zero,14c3a4 <__adddf3+0x440>
  14c258:	88c00044 	addi	r3,r17,1
  14c25c:	18c1ffcc 	andi	r3,r3,2047
  14c260:	01000044 	movi	r4,1
  14c264:	20c0a00e 	bge	r4,r3,14c4e8 <__adddf3+0x584>
  14c268:	8187c83a 	sub	r3,r16,r6
  14c26c:	80c9803a 	cmpltu	r4,r16,r3
  14c270:	28a7c83a 	sub	r19,r5,r2
  14c274:	9927c83a 	sub	r19,r19,r4
  14c278:	9900202c 	andhi	r4,r19,128
  14c27c:	20006226 	beq	r4,zero,14c408 <__adddf3+0x4a4>
  14c280:	3421c83a 	sub	r16,r6,r16
  14c284:	1145c83a 	sub	r2,r2,r5
  14c288:	340d803a 	cmpltu	r6,r6,r16
  14c28c:	11a7c83a 	sub	r19,r2,r6
  14c290:	3825883a 	mov	r18,r7
  14c294:	983f941e 	bne	r19,zero,14c0e8 <__adddf3+0x184>
  14c298:	8009883a 	mov	r4,r16
  14c29c:	01421980 	call	142198 <__clzsi2>
  14c2a0:	10800804 	addi	r2,r2,32
  14c2a4:	10fffe04 	addi	r3,r2,-8
  14c2a8:	010007c4 	movi	r4,31
  14c2ac:	20ff930e 	bge	r4,r3,14c0fc <__adddf3+0x198>
  14c2b0:	10bff604 	addi	r2,r2,-40
  14c2b4:	8084983a 	sll	r2,r16,r2
  14c2b8:	0021883a 	mov	r16,zero
  14c2bc:	1c7f960e 	bge	r3,r17,14c118 <__adddf3+0x1b4>
  14c2c0:	017fe034 	movhi	r5,65408
  14c2c4:	297fffc4 	addi	r5,r5,-1
  14c2c8:	88e3c83a 	sub	r17,r17,r3
  14c2cc:	114a703a 	and	r5,r2,r5
  14c2d0:	003f4306 	br	14bfe0 <__adddf3+0x7c>
  14c2d4:	000b883a 	mov	r5,zero
  14c2d8:	0005883a 	mov	r2,zero
  14c2dc:	003f5706 	br	14c03c <__adddf3+0xd8>
  14c2e0:	118cb03a 	or	r6,r2,r6
  14c2e4:	300cc03a 	cmpne	r6,r6,zero
  14c2e8:	0007883a 	mov	r3,zero
  14c2ec:	003f7306 	br	14c0bc <__adddf3+0x158>
  14c2f0:	3800961e 	bne	r7,zero,14c54c <__adddf3+0x5e8>
  14c2f4:	89000044 	addi	r4,r17,1
  14c2f8:	2201ffcc 	andi	r8,r4,2047
  14c2fc:	01c00044 	movi	r7,1
  14c300:	3a00680e 	bge	r7,r8,14c4a4 <__adddf3+0x540>
  14c304:	01c1ffc4 	movi	r7,2047
  14c308:	21c0a726 	beq	r4,r7,14c5a8 <__adddf3+0x644>
  14c30c:	340d883a 	add	r6,r6,r16
  14c310:	3421803a 	cmpltu	r16,r6,r16
  14c314:	114b883a 	add	r5,r2,r5
  14c318:	2c0b883a 	add	r5,r5,r16
  14c31c:	282097fa 	slli	r16,r5,31
  14c320:	300cd07a 	srli	r6,r6,1
  14c324:	280ad07a 	srli	r5,r5,1
  14c328:	2023883a 	mov	r17,r4
  14c32c:	81a0b03a 	or	r16,r16,r6
  14c330:	003f2b06 	br	14bfe0 <__adddf3+0x7c>
  14c334:	0101ffc4 	movi	r4,2047
  14c338:	893f531e 	bne	r17,r4,14c088 <__adddf3+0x124>
  14c33c:	003f2806 	br	14bfe0 <__adddf3+0x7c>
  14c340:	893ff844 	addi	r4,r17,-31
  14c344:	00c00804 	movi	r3,32
  14c348:	1108d83a 	srl	r4,r2,r4
  14c34c:	28c05126 	beq	r5,r3,14c494 <__adddf3+0x530>
  14c350:	00c00fc4 	movi	r3,63
  14c354:	1c63c83a 	sub	r17,r3,r17
  14c358:	1444983a 	sll	r2,r2,r17
  14c35c:	1420b03a 	or	r16,r2,r16
  14c360:	8020c03a 	cmpne	r16,r16,zero
  14c364:	8120b03a 	or	r16,r16,r4
  14c368:	000b883a 	mov	r5,zero
  14c36c:	0023883a 	mov	r17,zero
  14c370:	003f1b06 	br	14bfe0 <__adddf3+0x7c>
  14c374:	193ff804 	addi	r4,r3,-32
  14c378:	01c00804 	movi	r7,32
  14c37c:	1108d83a 	srl	r4,r2,r4
  14c380:	19c04626 	beq	r3,r7,14c49c <__adddf3+0x538>
  14c384:	01c01004 	movi	r7,64
  14c388:	38c7c83a 	sub	r3,r7,r3
  14c38c:	10c4983a 	sll	r2,r2,r3
  14c390:	118cb03a 	or	r6,r2,r6
  14c394:	300cc03a 	cmpne	r6,r6,zero
  14c398:	310cb03a 	or	r6,r6,r4
  14c39c:	0007883a 	mov	r3,zero
  14c3a0:	003f4606 	br	14c0bc <__adddf3+0x158>
  14c3a4:	88002b26 	beq	r17,zero,14c454 <__adddf3+0x4f0>
  14c3a8:	0201ffc4 	movi	r8,2047
  14c3ac:	22002f26 	beq	r4,r8,14c46c <__adddf3+0x508>
  14c3b0:	00c7c83a 	sub	r3,zero,r3
  14c3b4:	29402034 	orhi	r5,r5,128
  14c3b8:	02000e04 	movi	r8,56
  14c3bc:	40c07616 	blt	r8,r3,14c598 <__adddf3+0x634>
  14c3c0:	020007c4 	movi	r8,31
  14c3c4:	40c0d216 	blt	r8,r3,14c710 <__adddf3+0x7ac>
  14c3c8:	02000804 	movi	r8,32
  14c3cc:	40d1c83a 	sub	r8,r8,r3
  14c3d0:	2a14983a 	sll	r10,r5,r8
  14c3d4:	80d2d83a 	srl	r9,r16,r3
  14c3d8:	8210983a 	sll	r8,r16,r8
  14c3dc:	28cad83a 	srl	r5,r5,r3
  14c3e0:	5252b03a 	or	r9,r10,r9
  14c3e4:	4006c03a 	cmpne	r3,r8,zero
  14c3e8:	48e0b03a 	or	r16,r9,r3
  14c3ec:	3421c83a 	sub	r16,r6,r16
  14c3f0:	114bc83a 	sub	r5,r2,r5
  14c3f4:	340d803a 	cmpltu	r6,r6,r16
  14c3f8:	298bc83a 	sub	r5,r5,r6
  14c3fc:	2023883a 	mov	r17,r4
  14c400:	3825883a 	mov	r18,r7
  14c404:	003f3206 	br	14c0d0 <__adddf3+0x16c>
  14c408:	98c4b03a 	or	r2,r19,r3
  14c40c:	10001c1e 	bne	r2,zero,14c480 <__adddf3+0x51c>
  14c410:	0007883a 	mov	r3,zero
  14c414:	000b883a 	mov	r5,zero
  14c418:	0021883a 	mov	r16,zero
  14c41c:	0023883a 	mov	r17,zero
  14c420:	003f4e06 	br	14c15c <__adddf3+0x1f8>
  14c424:	010007c4 	movi	r4,31
  14c428:	21c03c16 	blt	r4,r7,14c51c <__adddf3+0x5b8>
  14c42c:	01000804 	movi	r4,32
  14c430:	21c9c83a 	sub	r4,r4,r7
  14c434:	31d0d83a 	srl	r8,r6,r7
  14c438:	1112983a 	sll	r9,r2,r4
  14c43c:	3108983a 	sll	r4,r6,r4
  14c440:	11ced83a 	srl	r7,r2,r7
  14c444:	4a04b03a 	or	r2,r9,r8
  14c448:	2008c03a 	cmpne	r4,r4,zero
  14c44c:	110cb03a 	or	r6,r2,r4
  14c450:	003f5a06 	br	14c1bc <__adddf3+0x258>
  14c454:	2c10b03a 	or	r8,r5,r16
  14c458:	40000426 	beq	r8,zero,14c46c <__adddf3+0x508>
  14c45c:	00c6303a 	nor	r3,zero,r3
  14c460:	183fe226 	beq	r3,zero,14c3ec <__adddf3+0x488>
  14c464:	0201ffc4 	movi	r8,2047
  14c468:	223fd31e 	bne	r4,r8,14c3b8 <__adddf3+0x454>
  14c46c:	100b883a 	mov	r5,r2
  14c470:	3021883a 	mov	r16,r6
  14c474:	2023883a 	mov	r17,r4
  14c478:	3825883a 	mov	r18,r7
  14c47c:	003ed806 	br	14bfe0 <__adddf3+0x7c>
  14c480:	1821883a 	mov	r16,r3
  14c484:	003f1706 	br	14c0e4 <__adddf3+0x180>
  14c488:	0101ffc4 	movi	r4,2047
  14c48c:	893f461e 	bne	r17,r4,14c1a8 <__adddf3+0x244>
  14c490:	003ed306 	br	14bfe0 <__adddf3+0x7c>
  14c494:	0005883a 	mov	r2,zero
  14c498:	003fb006 	br	14c35c <__adddf3+0x3f8>
  14c49c:	0005883a 	mov	r2,zero
  14c4a0:	003fbb06 	br	14c390 <__adddf3+0x42c>
  14c4a4:	2c06b03a 	or	r3,r5,r16
  14c4a8:	8800841e 	bne	r17,zero,14c6bc <__adddf3+0x758>
  14c4ac:	1800b226 	beq	r3,zero,14c778 <__adddf3+0x814>
  14c4b0:	1186b03a 	or	r3,r2,r6
  14c4b4:	183eca26 	beq	r3,zero,14bfe0 <__adddf3+0x7c>
  14c4b8:	340d883a 	add	r6,r6,r16
  14c4bc:	114b883a 	add	r5,r2,r5
  14c4c0:	3421803a 	cmpltu	r16,r6,r16
  14c4c4:	2c0b883a 	add	r5,r5,r16
  14c4c8:	2880202c 	andhi	r2,r5,128
  14c4cc:	1000c026 	beq	r2,zero,14c7d0 <__adddf3+0x86c>
  14c4d0:	00bfe034 	movhi	r2,65408
  14c4d4:	10bfffc4 	addi	r2,r2,-1
  14c4d8:	288a703a 	and	r5,r5,r2
  14c4dc:	3021883a 	mov	r16,r6
  14c4e0:	3823883a 	mov	r17,r7
  14c4e4:	003ebe06 	br	14bfe0 <__adddf3+0x7c>
  14c4e8:	2c06b03a 	or	r3,r5,r16
  14c4ec:	8800221e 	bne	r17,zero,14c578 <__adddf3+0x614>
  14c4f0:	1800481e 	bne	r3,zero,14c614 <__adddf3+0x6b0>
  14c4f4:	1186b03a 	or	r3,r2,r6
  14c4f8:	18000426 	beq	r3,zero,14c50c <__adddf3+0x5a8>
  14c4fc:	100b883a 	mov	r5,r2
  14c500:	3021883a 	mov	r16,r6
  14c504:	3825883a 	mov	r18,r7
  14c508:	003eb506 	br	14bfe0 <__adddf3+0x7c>
  14c50c:	0007883a 	mov	r3,zero
  14c510:	000b883a 	mov	r5,zero
  14c514:	0021883a 	mov	r16,zero
  14c518:	003f1006 	br	14c15c <__adddf3+0x1f8>
  14c51c:	393ff804 	addi	r4,r7,-32
  14c520:	02000804 	movi	r8,32
  14c524:	1108d83a 	srl	r4,r2,r4
  14c528:	3a007726 	beq	r7,r8,14c708 <__adddf3+0x7a4>
  14c52c:	02001004 	movi	r8,64
  14c530:	41cfc83a 	sub	r7,r8,r7
  14c534:	11c4983a 	sll	r2,r2,r7
  14c538:	118cb03a 	or	r6,r2,r6
  14c53c:	300cc03a 	cmpne	r6,r6,zero
  14c540:	310cb03a 	or	r6,r6,r4
  14c544:	000f883a 	mov	r7,zero
  14c548:	003f1c06 	br	14c1bc <__adddf3+0x258>
  14c54c:	88001a1e 	bne	r17,zero,14c5b8 <__adddf3+0x654>
  14c550:	2c10b03a 	or	r8,r5,r16
  14c554:	40005526 	beq	r8,zero,14c6ac <__adddf3+0x748>
  14c558:	01ce303a 	nor	r7,zero,r7
  14c55c:	3800511e 	bne	r7,zero,14c6a4 <__adddf3+0x740>
  14c560:	81a1883a 	add	r16,r16,r6
  14c564:	114b883a 	add	r5,r2,r5
  14c568:	818d803a 	cmpltu	r6,r16,r6
  14c56c:	298b883a 	add	r5,r5,r6
  14c570:	2023883a 	mov	r17,r4
  14c574:	003f1606 	br	14c1d0 <__adddf3+0x26c>
  14c578:	1800341e 	bne	r3,zero,14c64c <__adddf3+0x6e8>
  14c57c:	1186b03a 	or	r3,r2,r6
  14c580:	18006f26 	beq	r3,zero,14c740 <__adddf3+0x7dc>
  14c584:	100b883a 	mov	r5,r2
  14c588:	3021883a 	mov	r16,r6
  14c58c:	3825883a 	mov	r18,r7
  14c590:	0441ffc4 	movi	r17,2047
  14c594:	003e9206 	br	14bfe0 <__adddf3+0x7c>
  14c598:	2c20b03a 	or	r16,r5,r16
  14c59c:	8020c03a 	cmpne	r16,r16,zero
  14c5a0:	000b883a 	mov	r5,zero
  14c5a4:	003f9106 	br	14c3ec <__adddf3+0x488>
  14c5a8:	2023883a 	mov	r17,r4
  14c5ac:	000b883a 	mov	r5,zero
  14c5b0:	0021883a 	mov	r16,zero
  14c5b4:	003ee906 	br	14c15c <__adddf3+0x1f8>
  14c5b8:	0201ffc4 	movi	r8,2047
  14c5bc:	22003b26 	beq	r4,r8,14c6ac <__adddf3+0x748>
  14c5c0:	01cfc83a 	sub	r7,zero,r7
  14c5c4:	29402034 	orhi	r5,r5,128
  14c5c8:	02000e04 	movi	r8,56
  14c5cc:	41c06216 	blt	r8,r7,14c758 <__adddf3+0x7f4>
  14c5d0:	020007c4 	movi	r8,31
  14c5d4:	41c07016 	blt	r8,r7,14c798 <__adddf3+0x834>
  14c5d8:	02000804 	movi	r8,32
  14c5dc:	41d1c83a 	sub	r8,r8,r7
  14c5e0:	2a14983a 	sll	r10,r5,r8
  14c5e4:	81d2d83a 	srl	r9,r16,r7
  14c5e8:	8210983a 	sll	r8,r16,r8
  14c5ec:	29cad83a 	srl	r5,r5,r7
  14c5f0:	5252b03a 	or	r9,r10,r9
  14c5f4:	400ec03a 	cmpne	r7,r8,zero
  14c5f8:	49e0b03a 	or	r16,r9,r7
  14c5fc:	81a1883a 	add	r16,r16,r6
  14c600:	2885883a 	add	r2,r5,r2
  14c604:	818d803a 	cmpltu	r6,r16,r6
  14c608:	118b883a 	add	r5,r2,r6
  14c60c:	2023883a 	mov	r17,r4
  14c610:	003eef06 	br	14c1d0 <__adddf3+0x26c>
  14c614:	1186b03a 	or	r3,r2,r6
  14c618:	183e7126 	beq	r3,zero,14bfe0 <__adddf3+0x7c>
  14c61c:	8187c83a 	sub	r3,r16,r6
  14c620:	80d1803a 	cmpltu	r8,r16,r3
  14c624:	2889c83a 	sub	r4,r5,r2
  14c628:	2209c83a 	sub	r4,r4,r8
  14c62c:	2200202c 	andhi	r8,r4,128
  14c630:	40005426 	beq	r8,zero,14c784 <__adddf3+0x820>
  14c634:	3421c83a 	sub	r16,r6,r16
  14c638:	114bc83a 	sub	r5,r2,r5
  14c63c:	340d803a 	cmpltu	r6,r6,r16
  14c640:	298bc83a 	sub	r5,r5,r6
  14c644:	3825883a 	mov	r18,r7
  14c648:	003e6506 	br	14bfe0 <__adddf3+0x7c>
  14c64c:	1186b03a 	or	r3,r2,r6
  14c650:	18002b26 	beq	r3,zero,14c700 <__adddf3+0x79c>
  14c654:	2806d0fa 	srli	r3,r5,3
  14c658:	8020d0fa 	srli	r16,r16,3
  14c65c:	280a977a 	slli	r5,r5,29
  14c660:	1900022c 	andhi	r4,r3,8
  14c664:	2c20b03a 	or	r16,r5,r16
  14c668:	20000826 	beq	r4,zero,14c68c <__adddf3+0x728>
  14c66c:	1008d0fa 	srli	r4,r2,3
  14c670:	2140022c 	andhi	r5,r4,8
  14c674:	2800051e 	bne	r5,zero,14c68c <__adddf3+0x728>
  14c678:	300cd0fa 	srli	r6,r6,3
  14c67c:	1004977a 	slli	r2,r2,29
  14c680:	2007883a 	mov	r3,r4
  14c684:	3825883a 	mov	r18,r7
  14c688:	11a0b03a 	or	r16,r2,r6
  14c68c:	800ad77a 	srli	r5,r16,29
  14c690:	180690fa 	slli	r3,r3,3
  14c694:	802090fa 	slli	r16,r16,3
  14c698:	0441ffc4 	movi	r17,2047
  14c69c:	28cab03a 	or	r5,r5,r3
  14c6a0:	003e4f06 	br	14bfe0 <__adddf3+0x7c>
  14c6a4:	0201ffc4 	movi	r8,2047
  14c6a8:	223fc71e 	bne	r4,r8,14c5c8 <__adddf3+0x664>
  14c6ac:	100b883a 	mov	r5,r2
  14c6b0:	3021883a 	mov	r16,r6
  14c6b4:	2023883a 	mov	r17,r4
  14c6b8:	003e4906 	br	14bfe0 <__adddf3+0x7c>
  14c6bc:	18002a26 	beq	r3,zero,14c768 <__adddf3+0x804>
  14c6c0:	1186b03a 	or	r3,r2,r6
  14c6c4:	18000e26 	beq	r3,zero,14c700 <__adddf3+0x79c>
  14c6c8:	2806d0fa 	srli	r3,r5,3
  14c6cc:	8020d0fa 	srli	r16,r16,3
  14c6d0:	280a977a 	slli	r5,r5,29
  14c6d4:	1900022c 	andhi	r4,r3,8
  14c6d8:	2c20b03a 	or	r16,r5,r16
  14c6dc:	203feb26 	beq	r4,zero,14c68c <__adddf3+0x728>
  14c6e0:	1008d0fa 	srli	r4,r2,3
  14c6e4:	2140022c 	andhi	r5,r4,8
  14c6e8:	283fe81e 	bne	r5,zero,14c68c <__adddf3+0x728>
  14c6ec:	300cd0fa 	srli	r6,r6,3
  14c6f0:	1004977a 	slli	r2,r2,29
  14c6f4:	2007883a 	mov	r3,r4
  14c6f8:	11a0b03a 	or	r16,r2,r6
  14c6fc:	003fe306 	br	14c68c <__adddf3+0x728>
  14c700:	0441ffc4 	movi	r17,2047
  14c704:	003e3606 	br	14bfe0 <__adddf3+0x7c>
  14c708:	0005883a 	mov	r2,zero
  14c70c:	003f8a06 	br	14c538 <__adddf3+0x5d4>
  14c710:	1a3ff804 	addi	r8,r3,-32
  14c714:	02400804 	movi	r9,32
  14c718:	2a10d83a 	srl	r8,r5,r8
  14c71c:	1a402a26 	beq	r3,r9,14c7c8 <__adddf3+0x864>
  14c720:	02401004 	movi	r9,64
  14c724:	48c7c83a 	sub	r3,r9,r3
  14c728:	28ca983a 	sll	r5,r5,r3
  14c72c:	2c20b03a 	or	r16,r5,r16
  14c730:	8020c03a 	cmpne	r16,r16,zero
  14c734:	8220b03a 	or	r16,r16,r8
  14c738:	000b883a 	mov	r5,zero
  14c73c:	003f2b06 	br	14c3ec <__adddf3+0x488>
  14c740:	0007883a 	mov	r3,zero
  14c744:	01402034 	movhi	r5,128
  14c748:	297fffc4 	addi	r5,r5,-1
  14c74c:	043ffe04 	movi	r16,-8
  14c750:	0441ffc4 	movi	r17,2047
  14c754:	003e8106 	br	14c15c <__adddf3+0x1f8>
  14c758:	2c20b03a 	or	r16,r5,r16
  14c75c:	8020c03a 	cmpne	r16,r16,zero
  14c760:	000b883a 	mov	r5,zero
  14c764:	003fa506 	br	14c5fc <__adddf3+0x698>
  14c768:	100b883a 	mov	r5,r2
  14c76c:	3021883a 	mov	r16,r6
  14c770:	0441ffc4 	movi	r17,2047
  14c774:	003e1a06 	br	14bfe0 <__adddf3+0x7c>
  14c778:	100b883a 	mov	r5,r2
  14c77c:	3021883a 	mov	r16,r6
  14c780:	003e1706 	br	14bfe0 <__adddf3+0x7c>
  14c784:	20c4b03a 	or	r2,r4,r3
  14c788:	103f6026 	beq	r2,zero,14c50c <__adddf3+0x5a8>
  14c78c:	200b883a 	mov	r5,r4
  14c790:	1821883a 	mov	r16,r3
  14c794:	003e1206 	br	14bfe0 <__adddf3+0x7c>
  14c798:	3a3ff804 	addi	r8,r7,-32
  14c79c:	02400804 	movi	r9,32
  14c7a0:	2a10d83a 	srl	r8,r5,r8
  14c7a4:	3a400c26 	beq	r7,r9,14c7d8 <__adddf3+0x874>
  14c7a8:	02401004 	movi	r9,64
  14c7ac:	49cfc83a 	sub	r7,r9,r7
  14c7b0:	29ca983a 	sll	r5,r5,r7
  14c7b4:	2c20b03a 	or	r16,r5,r16
  14c7b8:	8020c03a 	cmpne	r16,r16,zero
  14c7bc:	8220b03a 	or	r16,r16,r8
  14c7c0:	000b883a 	mov	r5,zero
  14c7c4:	003f8d06 	br	14c5fc <__adddf3+0x698>
  14c7c8:	000b883a 	mov	r5,zero
  14c7cc:	003fd706 	br	14c72c <__adddf3+0x7c8>
  14c7d0:	3021883a 	mov	r16,r6
  14c7d4:	003e0206 	br	14bfe0 <__adddf3+0x7c>
  14c7d8:	000b883a 	mov	r5,zero
  14c7dc:	003ff506 	br	14c7b4 <__adddf3+0x850>

0014c7e0 <__divdf3>:
  14c7e0:	defff204 	addi	sp,sp,-56
  14c7e4:	dcc00715 	stw	r19,28(sp)
  14c7e8:	2826d53a 	srli	r19,r5,20
  14c7ec:	dd400915 	stw	r21,36(sp)
  14c7f0:	282ad7fa 	srli	r21,r5,31
  14c7f4:	ddc00b15 	stw	r23,44(sp)
  14c7f8:	dd800a15 	stw	r22,40(sp)
  14c7fc:	dc800615 	stw	r18,24(sp)
  14c800:	dfc00d15 	stw	ra,52(sp)
  14c804:	04800434 	movhi	r18,16
  14c808:	94bfffc4 	addi	r18,r18,-1
  14c80c:	df000c15 	stw	fp,48(sp)
  14c810:	dd000815 	stw	r20,32(sp)
  14c814:	dc400515 	stw	r17,20(sp)
  14c818:	dc000415 	stw	r16,16(sp)
  14c81c:	9cc1ffcc 	andi	r19,r19,2047
  14c820:	202d883a 	mov	r22,r4
  14c824:	2ca4703a 	and	r18,r5,r18
  14c828:	adc03fcc 	andi	r23,r21,255
  14c82c:	98006a26 	beq	r19,zero,14c9d8 <__divdf3+0x1f8>
  14c830:	0081ffc4 	movi	r2,2047
  14c834:	2021883a 	mov	r16,r4
  14c838:	98803726 	beq	r19,r2,14c918 <__divdf3+0x138>
  14c83c:	90800434 	orhi	r2,r18,16
  14c840:	100490fa 	slli	r2,r2,3
  14c844:	2024d77a 	srli	r18,r4,29
  14c848:	202090fa 	slli	r16,r4,3
  14c84c:	9cff0044 	addi	r19,r19,-1023
  14c850:	14a4b03a 	or	r18,r2,r18
  14c854:	0029883a 	mov	r20,zero
  14c858:	0039883a 	mov	fp,zero
  14c85c:	3804d53a 	srli	r2,r7,20
  14c860:	382cd7fa 	srli	r22,r7,31
  14c864:	04400434 	movhi	r17,16
  14c868:	8c7fffc4 	addi	r17,r17,-1
  14c86c:	1081ffcc 	andi	r2,r2,2047
  14c870:	3011883a 	mov	r8,r6
  14c874:	3c62703a 	and	r17,r7,r17
  14c878:	b2403fcc 	andi	r9,r22,255
  14c87c:	10007326 	beq	r2,zero,14ca4c <__divdf3+0x26c>
  14c880:	0101ffc4 	movi	r4,2047
  14c884:	11006b26 	beq	r2,r4,14ca34 <__divdf3+0x254>
  14c888:	89000434 	orhi	r4,r17,16
  14c88c:	200890fa 	slli	r4,r4,3
  14c890:	3022d77a 	srli	r17,r6,29
  14c894:	301090fa 	slli	r8,r6,3
  14c898:	10bf0044 	addi	r2,r2,-1023
  14c89c:	2462b03a 	or	r17,r4,r17
  14c8a0:	000d883a 	mov	r6,zero
  14c8a4:	ad8af03a 	xor	r5,r21,r22
  14c8a8:	3508b03a 	or	r4,r6,r20
  14c8ac:	00c003c4 	movi	r3,15
  14c8b0:	280f883a 	mov	r7,r5
  14c8b4:	2d003fcc 	andi	r20,r5,255
  14c8b8:	19009236 	bltu	r3,r4,14cb04 <__divdf3+0x324>
  14c8bc:	2109883a 	add	r4,r4,r4
  14c8c0:	00c00574 	movhi	r3,21
  14c8c4:	18f23604 	addi	r3,r3,-14120
  14c8c8:	2109883a 	add	r4,r4,r4
  14c8cc:	20c9883a 	add	r4,r4,r3
  14c8d0:	20c00017 	ldw	r3,0(r4)
  14c8d4:	1800683a 	jmp	r3
  14c8d8:	0014cb04 	movi	zero,21292
  14c8dc:	0014c974 	movhi	zero,21285
  14c8e0:	0014caf4 	movhi	zero,21291
  14c8e4:	0014c944 	movi	zero,21285
  14c8e8:	0014caf4 	movhi	zero,21291
  14c8ec:	0014cadc 	xori	zero,zero,21291
  14c8f0:	0014caf4 	movhi	zero,21291
  14c8f4:	0014c944 	movi	zero,21285
  14c8f8:	0014c974 	movhi	zero,21285
  14c8fc:	0014c974 	movhi	zero,21285
  14c900:	0014cadc 	xori	zero,zero,21291
  14c904:	0014c944 	movi	zero,21285
  14c908:	0014c934 	movhi	zero,21284
  14c90c:	0014c934 	movhi	zero,21284
  14c910:	0014c934 	movhi	zero,21284
  14c914:	0014cdf0 	cmpltui	zero,zero,21303
  14c918:	9104b03a 	or	r2,r18,r4
  14c91c:	10006c1e 	bne	r2,zero,14cad0 <__divdf3+0x2f0>
  14c920:	05000204 	movi	r20,8
  14c924:	0025883a 	mov	r18,zero
  14c928:	0021883a 	mov	r16,zero
  14c92c:	07000084 	movi	fp,2
  14c930:	003fca06 	br	14c85c <__divdf3+0x7c>
  14c934:	9023883a 	mov	r17,r18
  14c938:	8011883a 	mov	r8,r16
  14c93c:	b813883a 	mov	r9,r23
  14c940:	e00d883a 	mov	r6,fp
  14c944:	00800084 	movi	r2,2
  14c948:	30800926 	beq	r6,r2,14c970 <__divdf3+0x190>
  14c94c:	008000c4 	movi	r2,3
  14c950:	3081d026 	beq	r6,r2,14d094 <__divdf3+0x8b4>
  14c954:	00800044 	movi	r2,1
  14c958:	3081881e 	bne	r6,r2,14cf7c <__divdf3+0x79c>
  14c95c:	480f883a 	mov	r7,r9
  14c960:	0005883a 	mov	r2,zero
  14c964:	0025883a 	mov	r18,zero
  14c968:	0021883a 	mov	r16,zero
  14c96c:	00000506 	br	14c984 <__divdf3+0x1a4>
  14c970:	4829883a 	mov	r20,r9
  14c974:	a1c0004c 	andi	r7,r20,1
  14c978:	0081ffc4 	movi	r2,2047
  14c97c:	0025883a 	mov	r18,zero
  14c980:	0021883a 	mov	r16,zero
  14c984:	1004953a 	slli	r2,r2,20
  14c988:	39c03fcc 	andi	r7,r7,255
  14c98c:	380e97fa 	slli	r7,r7,31
  14c990:	00c00434 	movhi	r3,16
  14c994:	18ffffc4 	addi	r3,r3,-1
  14c998:	90e4703a 	and	r18,r18,r3
  14c99c:	9086b03a 	or	r3,r18,r2
  14c9a0:	19c6b03a 	or	r3,r3,r7
  14c9a4:	8005883a 	mov	r2,r16
  14c9a8:	dfc00d17 	ldw	ra,52(sp)
  14c9ac:	df000c17 	ldw	fp,48(sp)
  14c9b0:	ddc00b17 	ldw	r23,44(sp)
  14c9b4:	dd800a17 	ldw	r22,40(sp)
  14c9b8:	dd400917 	ldw	r21,36(sp)
  14c9bc:	dd000817 	ldw	r20,32(sp)
  14c9c0:	dcc00717 	ldw	r19,28(sp)
  14c9c4:	dc800617 	ldw	r18,24(sp)
  14c9c8:	dc400517 	ldw	r17,20(sp)
  14c9cc:	dc000417 	ldw	r16,16(sp)
  14c9d0:	dec00e04 	addi	sp,sp,56
  14c9d4:	f800283a 	ret
  14c9d8:	9104b03a 	or	r2,r18,r4
  14c9dc:	10003726 	beq	r2,zero,14cabc <__divdf3+0x2dc>
  14c9e0:	90012626 	beq	r18,zero,14ce7c <__divdf3+0x69c>
  14c9e4:	9009883a 	mov	r4,r18
  14c9e8:	d9800215 	stw	r6,8(sp)
  14c9ec:	d9c00115 	stw	r7,4(sp)
  14c9f0:	01421980 	call	142198 <__clzsi2>
  14c9f4:	d9800217 	ldw	r6,8(sp)
  14c9f8:	d9c00117 	ldw	r7,4(sp)
  14c9fc:	00c009c4 	movi	r3,39
  14ca00:	18811a16 	blt	r3,r2,14ce6c <__divdf3+0x68c>
  14ca04:	01400a04 	movi	r5,40
  14ca08:	143ffe04 	addi	r16,r2,-8
  14ca0c:	288bc83a 	sub	r5,r5,r2
  14ca10:	9424983a 	sll	r18,r18,r16
  14ca14:	b14ad83a 	srl	r5,r22,r5
  14ca18:	b420983a 	sll	r16,r22,r16
  14ca1c:	2ca4b03a 	or	r18,r5,r18
  14ca20:	04ff0344 	movi	r19,-1011
  14ca24:	98a7c83a 	sub	r19,r19,r2
  14ca28:	0029883a 	mov	r20,zero
  14ca2c:	0039883a 	mov	fp,zero
  14ca30:	003f8a06 	br	14c85c <__divdf3+0x7c>
  14ca34:	8988b03a 	or	r4,r17,r6
  14ca38:	20001e1e 	bne	r4,zero,14cab4 <__divdf3+0x2d4>
  14ca3c:	0023883a 	mov	r17,zero
  14ca40:	0011883a 	mov	r8,zero
  14ca44:	01800084 	movi	r6,2
  14ca48:	003f9606 	br	14c8a4 <__divdf3+0xc4>
  14ca4c:	8988b03a 	or	r4,r17,r6
  14ca50:	20001426 	beq	r4,zero,14caa4 <__divdf3+0x2c4>
  14ca54:	8800fd26 	beq	r17,zero,14ce4c <__divdf3+0x66c>
  14ca58:	8809883a 	mov	r4,r17
  14ca5c:	d9800215 	stw	r6,8(sp)
  14ca60:	da400115 	stw	r9,4(sp)
  14ca64:	01421980 	call	142198 <__clzsi2>
  14ca68:	d9800217 	ldw	r6,8(sp)
  14ca6c:	da400117 	ldw	r9,4(sp)
  14ca70:	010009c4 	movi	r4,39
  14ca74:	2080f116 	blt	r4,r2,14ce3c <__divdf3+0x65c>
  14ca78:	01000a04 	movi	r4,40
  14ca7c:	123ffe04 	addi	r8,r2,-8
  14ca80:	2089c83a 	sub	r4,r4,r2
  14ca84:	8a22983a 	sll	r17,r17,r8
  14ca88:	3108d83a 	srl	r4,r6,r4
  14ca8c:	3210983a 	sll	r8,r6,r8
  14ca90:	2462b03a 	or	r17,r4,r17
  14ca94:	013f0344 	movi	r4,-1011
  14ca98:	2085c83a 	sub	r2,r4,r2
  14ca9c:	000d883a 	mov	r6,zero
  14caa0:	003f8006 	br	14c8a4 <__divdf3+0xc4>
  14caa4:	0023883a 	mov	r17,zero
  14caa8:	0011883a 	mov	r8,zero
  14caac:	01800044 	movi	r6,1
  14cab0:	003f7c06 	br	14c8a4 <__divdf3+0xc4>
  14cab4:	018000c4 	movi	r6,3
  14cab8:	003f7a06 	br	14c8a4 <__divdf3+0xc4>
  14cabc:	05000104 	movi	r20,4
  14cac0:	0025883a 	mov	r18,zero
  14cac4:	0021883a 	mov	r16,zero
  14cac8:	07000044 	movi	fp,1
  14cacc:	003f6306 	br	14c85c <__divdf3+0x7c>
  14cad0:	05000304 	movi	r20,12
  14cad4:	070000c4 	movi	fp,3
  14cad8:	003f6006 	br	14c85c <__divdf3+0x7c>
  14cadc:	000f883a 	mov	r7,zero
  14cae0:	04800434 	movhi	r18,16
  14cae4:	94bfffc4 	addi	r18,r18,-1
  14cae8:	043fffc4 	movi	r16,-1
  14caec:	0081ffc4 	movi	r2,2047
  14caf0:	003fa406 	br	14c984 <__divdf3+0x1a4>
  14caf4:	0005883a 	mov	r2,zero
  14caf8:	0025883a 	mov	r18,zero
  14cafc:	0021883a 	mov	r16,zero
  14cb00:	003fa006 	br	14c984 <__divdf3+0x1a4>
  14cb04:	9885c83a 	sub	r2,r19,r2
  14cb08:	d8800015 	stw	r2,0(sp)
  14cb0c:	8c80ef36 	bltu	r17,r18,14cecc <__divdf3+0x6ec>
  14cb10:	9440ed26 	beq	r18,r17,14cec8 <__divdf3+0x6e8>
  14cb14:	d8c00017 	ldw	r3,0(sp)
  14cb18:	002d883a 	mov	r22,zero
  14cb1c:	18ffffc4 	addi	r3,r3,-1
  14cb20:	d8c00015 	stw	r3,0(sp)
  14cb24:	9007883a 	mov	r3,r18
  14cb28:	4026d63a 	srli	r19,r8,24
  14cb2c:	8822923a 	slli	r17,r17,8
  14cb30:	1809883a 	mov	r4,r3
  14cb34:	402e923a 	slli	r23,r8,8
  14cb38:	9c66b03a 	or	r19,r19,r17
  14cb3c:	982ad43a 	srli	r21,r19,16
  14cb40:	d8c00315 	stw	r3,12(sp)
  14cb44:	9f3fffcc 	andi	fp,r19,65535
  14cb48:	a80b883a 	mov	r5,r21
  14cb4c:	014bf540 	call	14bf54 <__udivsi3>
  14cb50:	d8c00317 	ldw	r3,12(sp)
  14cb54:	a80b883a 	mov	r5,r21
  14cb58:	1025883a 	mov	r18,r2
  14cb5c:	1809883a 	mov	r4,r3
  14cb60:	014bf5c0 	call	14bf5c <__umodsi3>
  14cb64:	1004943a 	slli	r2,r2,16
  14cb68:	8006d43a 	srli	r3,r16,16
  14cb6c:	9709383a 	mul	r4,r18,fp
  14cb70:	10c6b03a 	or	r3,r2,r3
  14cb74:	1900062e 	bgeu	r3,r4,14cb90 <__divdf3+0x3b0>
  14cb78:	1cc7883a 	add	r3,r3,r19
  14cb7c:	90bfffc4 	addi	r2,r18,-1
  14cb80:	1cc0e436 	bltu	r3,r19,14cf14 <__divdf3+0x734>
  14cb84:	1900e32e 	bgeu	r3,r4,14cf14 <__divdf3+0x734>
  14cb88:	94bfff84 	addi	r18,r18,-2
  14cb8c:	1cc7883a 	add	r3,r3,r19
  14cb90:	1907c83a 	sub	r3,r3,r4
  14cb94:	1809883a 	mov	r4,r3
  14cb98:	a80b883a 	mov	r5,r21
  14cb9c:	d8c00315 	stw	r3,12(sp)
  14cba0:	014bf540 	call	14bf54 <__udivsi3>
  14cba4:	d8c00317 	ldw	r3,12(sp)
  14cba8:	a80b883a 	mov	r5,r21
  14cbac:	1023883a 	mov	r17,r2
  14cbb0:	1809883a 	mov	r4,r3
  14cbb4:	014bf5c0 	call	14bf5c <__umodsi3>
  14cbb8:	1004943a 	slli	r2,r2,16
  14cbbc:	8f0b383a 	mul	r5,r17,fp
  14cbc0:	843fffcc 	andi	r16,r16,65535
  14cbc4:	1420b03a 	or	r16,r2,r16
  14cbc8:	8140062e 	bgeu	r16,r5,14cbe4 <__divdf3+0x404>
  14cbcc:	84e1883a 	add	r16,r16,r19
  14cbd0:	88bfffc4 	addi	r2,r17,-1
  14cbd4:	84c0cd36 	bltu	r16,r19,14cf0c <__divdf3+0x72c>
  14cbd8:	8140cc2e 	bgeu	r16,r5,14cf0c <__divdf3+0x72c>
  14cbdc:	8c7fff84 	addi	r17,r17,-2
  14cbe0:	84e1883a 	add	r16,r16,r19
  14cbe4:	9004943a 	slli	r2,r18,16
  14cbe8:	b8ffffcc 	andi	r3,r23,65535
  14cbec:	b824d43a 	srli	r18,r23,16
  14cbf0:	88a2b03a 	or	r17,r17,r2
  14cbf4:	8808d43a 	srli	r4,r17,16
  14cbf8:	88bfffcc 	andi	r2,r17,65535
  14cbfc:	10cd383a 	mul	r6,r2,r3
  14cc00:	20cf383a 	mul	r7,r4,r3
  14cc04:	1485383a 	mul	r2,r2,r18
  14cc08:	3010d43a 	srli	r8,r6,16
  14cc0c:	814bc83a 	sub	r5,r16,r5
  14cc10:	3885883a 	add	r2,r7,r2
  14cc14:	1205883a 	add	r2,r2,r8
  14cc18:	2489383a 	mul	r4,r4,r18
  14cc1c:	11c0022e 	bgeu	r2,r7,14cc28 <__divdf3+0x448>
  14cc20:	01c00074 	movhi	r7,1
  14cc24:	21c9883a 	add	r4,r4,r7
  14cc28:	100ed43a 	srli	r7,r2,16
  14cc2c:	1020943a 	slli	r16,r2,16
  14cc30:	31bfffcc 	andi	r6,r6,65535
  14cc34:	21c9883a 	add	r4,r4,r7
  14cc38:	81a1883a 	add	r16,r16,r6
  14cc3c:	29009736 	bltu	r5,r4,14ce9c <__divdf3+0x6bc>
  14cc40:	29009526 	beq	r5,r4,14ce98 <__divdf3+0x6b8>
  14cc44:	2909c83a 	sub	r4,r5,r4
  14cc48:	b421c83a 	sub	r16,r22,r16
  14cc4c:	b42d803a 	cmpltu	r22,r22,r16
  14cc50:	25adc83a 	sub	r22,r4,r22
  14cc54:	b4c0c326 	beq	r22,r19,14cf64 <__divdf3+0x784>
  14cc58:	b009883a 	mov	r4,r22
  14cc5c:	a80b883a 	mov	r5,r21
  14cc60:	d8c00315 	stw	r3,12(sp)
  14cc64:	014bf540 	call	14bf54 <__udivsi3>
  14cc68:	b009883a 	mov	r4,r22
  14cc6c:	a80b883a 	mov	r5,r21
  14cc70:	d8800115 	stw	r2,4(sp)
  14cc74:	014bf5c0 	call	14bf5c <__umodsi3>
  14cc78:	da000117 	ldw	r8,4(sp)
  14cc7c:	1004943a 	slli	r2,r2,16
  14cc80:	800ad43a 	srli	r5,r16,16
  14cc84:	4709383a 	mul	r4,r8,fp
  14cc88:	d8c00317 	ldw	r3,12(sp)
  14cc8c:	114ab03a 	or	r5,r2,r5
  14cc90:	2900062e 	bgeu	r5,r4,14ccac <__divdf3+0x4cc>
  14cc94:	2ccb883a 	add	r5,r5,r19
  14cc98:	40bfffc4 	addi	r2,r8,-1
  14cc9c:	2cc0b536 	bltu	r5,r19,14cf74 <__divdf3+0x794>
  14cca0:	2900b42e 	bgeu	r5,r4,14cf74 <__divdf3+0x794>
  14cca4:	423fff84 	addi	r8,r8,-2
  14cca8:	2ccb883a 	add	r5,r5,r19
  14ccac:	290dc83a 	sub	r6,r5,r4
  14ccb0:	3009883a 	mov	r4,r6
  14ccb4:	a80b883a 	mov	r5,r21
  14ccb8:	d8c00315 	stw	r3,12(sp)
  14ccbc:	da000115 	stw	r8,4(sp)
  14ccc0:	d9800215 	stw	r6,8(sp)
  14ccc4:	014bf540 	call	14bf54 <__udivsi3>
  14ccc8:	d9800217 	ldw	r6,8(sp)
  14cccc:	a80b883a 	mov	r5,r21
  14ccd0:	102d883a 	mov	r22,r2
  14ccd4:	3009883a 	mov	r4,r6
  14ccd8:	014bf5c0 	call	14bf5c <__umodsi3>
  14ccdc:	1004943a 	slli	r2,r2,16
  14cce0:	b739383a 	mul	fp,r22,fp
  14cce4:	843fffcc 	andi	r16,r16,65535
  14cce8:	1408b03a 	or	r4,r2,r16
  14ccec:	d8c00317 	ldw	r3,12(sp)
  14ccf0:	da000117 	ldw	r8,4(sp)
  14ccf4:	2700062e 	bgeu	r4,fp,14cd10 <__divdf3+0x530>
  14ccf8:	24c9883a 	add	r4,r4,r19
  14ccfc:	b0bfffc4 	addi	r2,r22,-1
  14cd00:	24c09a36 	bltu	r4,r19,14cf6c <__divdf3+0x78c>
  14cd04:	2700992e 	bgeu	r4,fp,14cf6c <__divdf3+0x78c>
  14cd08:	b5bfff84 	addi	r22,r22,-2
  14cd0c:	24c9883a 	add	r4,r4,r19
  14cd10:	4010943a 	slli	r8,r8,16
  14cd14:	2739c83a 	sub	fp,r4,fp
  14cd18:	b210b03a 	or	r8,r22,r8
  14cd1c:	400ad43a 	srli	r5,r8,16
  14cd20:	40bfffcc 	andi	r2,r8,65535
  14cd24:	10c9383a 	mul	r4,r2,r3
  14cd28:	1485383a 	mul	r2,r2,r18
  14cd2c:	28c7383a 	mul	r3,r5,r3
  14cd30:	200cd43a 	srli	r6,r4,16
  14cd34:	2ca5383a 	mul	r18,r5,r18
  14cd38:	1885883a 	add	r2,r3,r2
  14cd3c:	1185883a 	add	r2,r2,r6
  14cd40:	10c0022e 	bgeu	r2,r3,14cd4c <__divdf3+0x56c>
  14cd44:	00c00074 	movhi	r3,1
  14cd48:	90e5883a 	add	r18,r18,r3
  14cd4c:	1006d43a 	srli	r3,r2,16
  14cd50:	1004943a 	slli	r2,r2,16
  14cd54:	213fffcc 	andi	r4,r4,65535
  14cd58:	90e5883a 	add	r18,r18,r3
  14cd5c:	1109883a 	add	r4,r2,r4
  14cd60:	e480602e 	bgeu	fp,r18,14cee4 <__divdf3+0x704>
  14cd64:	e4f9883a 	add	fp,fp,r19
  14cd68:	40bfffc4 	addi	r2,r8,-1
  14cd6c:	e4c06b2e 	bgeu	fp,r19,14cf1c <__divdf3+0x73c>
  14cd70:	1011883a 	mov	r8,r2
  14cd74:	e4805e26 	beq	fp,r18,14cef0 <__divdf3+0x710>
  14cd78:	42000054 	ori	r8,r8,1
  14cd7c:	d8c00017 	ldw	r3,0(sp)
  14cd80:	1880ffc4 	addi	r2,r3,1023
  14cd84:	00806d0e 	bge	zero,r2,14cf3c <__divdf3+0x75c>
  14cd88:	40c001cc 	andi	r3,r8,7
  14cd8c:	18000726 	beq	r3,zero,14cdac <__divdf3+0x5cc>
  14cd90:	410003cc 	andi	r4,r8,15
  14cd94:	00c00104 	movi	r3,4
  14cd98:	20c00426 	beq	r4,r3,14cdac <__divdf3+0x5cc>
  14cd9c:	40c7883a 	add	r3,r8,r3
  14cda0:	1a11803a 	cmpltu	r8,r3,r8
  14cda4:	8a23883a 	add	r17,r17,r8
  14cda8:	1811883a 	mov	r8,r3
  14cdac:	88c0402c 	andhi	r3,r17,256
  14cdb0:	18000526 	beq	r3,zero,14cdc8 <__divdf3+0x5e8>
  14cdb4:	d8c00017 	ldw	r3,0(sp)
  14cdb8:	00bfc034 	movhi	r2,65280
  14cdbc:	10bfffc4 	addi	r2,r2,-1
  14cdc0:	88a2703a 	and	r17,r17,r2
  14cdc4:	18810004 	addi	r2,r3,1024
  14cdc8:	00c1ff84 	movi	r3,2046
  14cdcc:	18bee916 	blt	r3,r2,14c974 <__divdf3+0x194>
  14cdd0:	8820977a 	slli	r16,r17,29
  14cdd4:	4010d0fa 	srli	r8,r8,3
  14cdd8:	8822927a 	slli	r17,r17,9
  14cddc:	1081ffcc 	andi	r2,r2,2047
  14cde0:	8220b03a 	or	r16,r16,r8
  14cde4:	8824d33a 	srli	r18,r17,12
  14cde8:	a1c0004c 	andi	r7,r20,1
  14cdec:	003ee506 	br	14c984 <__divdf3+0x1a4>
  14cdf0:	9080022c 	andhi	r2,r18,8
  14cdf4:	10000a26 	beq	r2,zero,14ce20 <__divdf3+0x640>
  14cdf8:	8880022c 	andhi	r2,r17,8
  14cdfc:	1000081e 	bne	r2,zero,14ce20 <__divdf3+0x640>
  14ce00:	00800434 	movhi	r2,16
  14ce04:	10bfffc4 	addi	r2,r2,-1
  14ce08:	8c800234 	orhi	r18,r17,8
  14ce0c:	90a4703a 	and	r18,r18,r2
  14ce10:	b00f883a 	mov	r7,r22
  14ce14:	4021883a 	mov	r16,r8
  14ce18:	0081ffc4 	movi	r2,2047
  14ce1c:	003ed906 	br	14c984 <__divdf3+0x1a4>
  14ce20:	00800434 	movhi	r2,16
  14ce24:	10bfffc4 	addi	r2,r2,-1
  14ce28:	94800234 	orhi	r18,r18,8
  14ce2c:	90a4703a 	and	r18,r18,r2
  14ce30:	a80f883a 	mov	r7,r21
  14ce34:	0081ffc4 	movi	r2,2047
  14ce38:	003ed206 	br	14c984 <__divdf3+0x1a4>
  14ce3c:	147ff604 	addi	r17,r2,-40
  14ce40:	3462983a 	sll	r17,r6,r17
  14ce44:	0011883a 	mov	r8,zero
  14ce48:	003f1206 	br	14ca94 <__divdf3+0x2b4>
  14ce4c:	3009883a 	mov	r4,r6
  14ce50:	d9800215 	stw	r6,8(sp)
  14ce54:	da400115 	stw	r9,4(sp)
  14ce58:	01421980 	call	142198 <__clzsi2>
  14ce5c:	10800804 	addi	r2,r2,32
  14ce60:	da400117 	ldw	r9,4(sp)
  14ce64:	d9800217 	ldw	r6,8(sp)
  14ce68:	003f0106 	br	14ca70 <__divdf3+0x290>
  14ce6c:	14bff604 	addi	r18,r2,-40
  14ce70:	b4a4983a 	sll	r18,r22,r18
  14ce74:	0021883a 	mov	r16,zero
  14ce78:	003ee906 	br	14ca20 <__divdf3+0x240>
  14ce7c:	d9800215 	stw	r6,8(sp)
  14ce80:	d9c00115 	stw	r7,4(sp)
  14ce84:	01421980 	call	142198 <__clzsi2>
  14ce88:	10800804 	addi	r2,r2,32
  14ce8c:	d9c00117 	ldw	r7,4(sp)
  14ce90:	d9800217 	ldw	r6,8(sp)
  14ce94:	003ed906 	br	14c9fc <__divdf3+0x21c>
  14ce98:	b400262e 	bgeu	r22,r16,14cf34 <__divdf3+0x754>
  14ce9c:	b5ed883a 	add	r22,r22,r23
  14cea0:	b5c5803a 	cmpltu	r2,r22,r23
  14cea4:	14c5883a 	add	r2,r2,r19
  14cea8:	114b883a 	add	r5,r2,r5
  14ceac:	88bfffc4 	addi	r2,r17,-1
  14ceb0:	9940112e 	bgeu	r19,r5,14cef8 <__divdf3+0x718>
  14ceb4:	29004e36 	bltu	r5,r4,14cff0 <__divdf3+0x810>
  14ceb8:	21401c26 	beq	r4,r5,14cf2c <__divdf3+0x74c>
  14cebc:	2909c83a 	sub	r4,r5,r4
  14cec0:	1023883a 	mov	r17,r2
  14cec4:	003f6006 	br	14cc48 <__divdf3+0x468>
  14cec8:	443f122e 	bgeu	r8,r16,14cb14 <__divdf3+0x334>
  14cecc:	8008d07a 	srli	r4,r16,1
  14ced0:	900497fa 	slli	r2,r18,31
  14ced4:	802c97fa 	slli	r22,r16,31
  14ced8:	9006d07a 	srli	r3,r18,1
  14cedc:	20a0b03a 	or	r16,r4,r2
  14cee0:	003f1106 	br	14cb28 <__divdf3+0x348>
  14cee4:	e4bfa41e 	bne	fp,r18,14cd78 <__divdf3+0x598>
  14cee8:	203f9e1e 	bne	r4,zero,14cd64 <__divdf3+0x584>
  14ceec:	002f883a 	mov	r23,zero
  14cef0:	b93fa11e 	bne	r23,r4,14cd78 <__divdf3+0x598>
  14cef4:	003fa106 	br	14cd7c <__divdf3+0x59c>
  14cef8:	2cfff01e 	bne	r5,r19,14cebc <__divdf3+0x6dc>
  14cefc:	b5ffed2e 	bgeu	r22,r23,14ceb4 <__divdf3+0x6d4>
  14cf00:	9909c83a 	sub	r4,r19,r4
  14cf04:	1023883a 	mov	r17,r2
  14cf08:	003f4f06 	br	14cc48 <__divdf3+0x468>
  14cf0c:	1023883a 	mov	r17,r2
  14cf10:	003f3406 	br	14cbe4 <__divdf3+0x404>
  14cf14:	1025883a 	mov	r18,r2
  14cf18:	003f1d06 	br	14cb90 <__divdf3+0x3b0>
  14cf1c:	e4803a36 	bltu	fp,r18,14d008 <__divdf3+0x828>
  14cf20:	97005626 	beq	r18,fp,14d07c <__divdf3+0x89c>
  14cf24:	1011883a 	mov	r8,r2
  14cf28:	003f9306 	br	14cd78 <__divdf3+0x598>
  14cf2c:	b4003036 	bltu	r22,r16,14cff0 <__divdf3+0x810>
  14cf30:	1023883a 	mov	r17,r2
  14cf34:	0009883a 	mov	r4,zero
  14cf38:	003f4306 	br	14cc48 <__divdf3+0x468>
  14cf3c:	d8c00017 	ldw	r3,0(sp)
  14cf40:	00bf0084 	movi	r2,-1022
  14cf44:	10c5c83a 	sub	r2,r2,r3
  14cf48:	00c00e04 	movi	r3,56
  14cf4c:	18800d0e 	bge	r3,r2,14cf84 <__divdf3+0x7a4>
  14cf50:	a1c0004c 	andi	r7,r20,1
  14cf54:	0005883a 	mov	r2,zero
  14cf58:	0025883a 	mov	r18,zero
  14cf5c:	0021883a 	mov	r16,zero
  14cf60:	003e8806 	br	14c984 <__divdf3+0x1a4>
  14cf64:	023fffc4 	movi	r8,-1
  14cf68:	003f8406 	br	14cd7c <__divdf3+0x59c>
  14cf6c:	102d883a 	mov	r22,r2
  14cf70:	003f6706 	br	14cd10 <__divdf3+0x530>
  14cf74:	1011883a 	mov	r8,r2
  14cf78:	003f4c06 	br	14ccac <__divdf3+0x4cc>
  14cf7c:	4829883a 	mov	r20,r9
  14cf80:	003f7e06 	br	14cd7c <__divdf3+0x59c>
  14cf84:	00c007c4 	movi	r3,31
  14cf88:	18802616 	blt	r3,r2,14d024 <__divdf3+0x844>
  14cf8c:	d9000017 	ldw	r4,0(sp)
  14cf90:	408ad83a 	srl	r5,r8,r2
  14cf94:	8884d83a 	srl	r2,r17,r2
  14cf98:	20c10784 	addi	r3,r4,1054
  14cf9c:	88c8983a 	sll	r4,r17,r3
  14cfa0:	40c6983a 	sll	r3,r8,r3
  14cfa4:	2908b03a 	or	r4,r5,r4
  14cfa8:	1806c03a 	cmpne	r3,r3,zero
  14cfac:	20c6b03a 	or	r3,r4,r3
  14cfb0:	190001cc 	andi	r4,r3,7
  14cfb4:	20000726 	beq	r4,zero,14cfd4 <__divdf3+0x7f4>
  14cfb8:	194003cc 	andi	r5,r3,15
  14cfbc:	01000104 	movi	r4,4
  14cfc0:	29000426 	beq	r5,r4,14cfd4 <__divdf3+0x7f4>
  14cfc4:	1909883a 	add	r4,r3,r4
  14cfc8:	20c7803a 	cmpltu	r3,r4,r3
  14cfcc:	10c5883a 	add	r2,r2,r3
  14cfd0:	2007883a 	mov	r3,r4
  14cfd4:	1100202c 	andhi	r4,r2,128
  14cfd8:	20002026 	beq	r4,zero,14d05c <__divdf3+0x87c>
  14cfdc:	a1c0004c 	andi	r7,r20,1
  14cfe0:	00800044 	movi	r2,1
  14cfe4:	0025883a 	mov	r18,zero
  14cfe8:	0021883a 	mov	r16,zero
  14cfec:	003e6506 	br	14c984 <__divdf3+0x1a4>
  14cff0:	b5ed883a 	add	r22,r22,r23
  14cff4:	b5c5803a 	cmpltu	r2,r22,r23
  14cff8:	14c5883a 	add	r2,r2,r19
  14cffc:	114b883a 	add	r5,r2,r5
  14d000:	8c7fff84 	addi	r17,r17,-2
  14d004:	003f0f06 	br	14cc44 <__divdf3+0x464>
  14d008:	bdc7883a 	add	r3,r23,r23
  14d00c:	1def803a 	cmpltu	r23,r3,r23
  14d010:	bce7883a 	add	r19,r23,r19
  14d014:	40bfff84 	addi	r2,r8,-2
  14d018:	e4f9883a 	add	fp,fp,r19
  14d01c:	182f883a 	mov	r23,r3
  14d020:	003f5306 	br	14cd70 <__divdf3+0x590>
  14d024:	d9000017 	ldw	r4,0(sp)
  14d028:	00fef884 	movi	r3,-1054
  14d02c:	1907c83a 	sub	r3,r3,r4
  14d030:	01000804 	movi	r4,32
  14d034:	88c6d83a 	srl	r3,r17,r3
  14d038:	11001426 	beq	r2,r4,14d08c <__divdf3+0x8ac>
  14d03c:	d9000017 	ldw	r4,0(sp)
  14d040:	20810f84 	addi	r2,r4,1086
  14d044:	8884983a 	sll	r2,r17,r2
  14d048:	1204b03a 	or	r2,r2,r8
  14d04c:	1004c03a 	cmpne	r2,r2,zero
  14d050:	10c6b03a 	or	r3,r2,r3
  14d054:	0005883a 	mov	r2,zero
  14d058:	003fd506 	br	14cfb0 <__divdf3+0x7d0>
  14d05c:	1020977a 	slli	r16,r2,29
  14d060:	1806d0fa 	srli	r3,r3,3
  14d064:	1004927a 	slli	r2,r2,9
  14d068:	a1c0004c 	andi	r7,r20,1
  14d06c:	80e0b03a 	or	r16,r16,r3
  14d070:	1024d33a 	srli	r18,r2,12
  14d074:	0005883a 	mov	r2,zero
  14d078:	003e4206 	br	14c984 <__divdf3+0x1a4>
  14d07c:	b93fe236 	bltu	r23,r4,14d008 <__divdf3+0x828>
  14d080:	1011883a 	mov	r8,r2
  14d084:	b93f3c1e 	bne	r23,r4,14cd78 <__divdf3+0x598>
  14d088:	003f3c06 	br	14cd7c <__divdf3+0x59c>
  14d08c:	0005883a 	mov	r2,zero
  14d090:	003fed06 	br	14d048 <__divdf3+0x868>
  14d094:	00800434 	movhi	r2,16
  14d098:	10bfffc4 	addi	r2,r2,-1
  14d09c:	8c800234 	orhi	r18,r17,8
  14d0a0:	90a4703a 	and	r18,r18,r2
  14d0a4:	480f883a 	mov	r7,r9
  14d0a8:	4021883a 	mov	r16,r8
  14d0ac:	0081ffc4 	movi	r2,2047
  14d0b0:	003e3406 	br	14c984 <__divdf3+0x1a4>

0014d0b4 <__eqdf2>:
  14d0b4:	2806d53a 	srli	r3,r5,20
  14d0b8:	3810d53a 	srli	r8,r7,20
  14d0bc:	00800434 	movhi	r2,16
  14d0c0:	10bfffc4 	addi	r2,r2,-1
  14d0c4:	18c1ffcc 	andi	r3,r3,2047
  14d0c8:	0241ffc4 	movi	r9,2047
  14d0cc:	2894703a 	and	r10,r5,r2
  14d0d0:	4201ffcc 	andi	r8,r8,2047
  14d0d4:	3884703a 	and	r2,r7,r2
  14d0d8:	280ad7fa 	srli	r5,r5,31
  14d0dc:	380ed7fa 	srli	r7,r7,31
  14d0e0:	1a400f26 	beq	r3,r9,14d120 <__eqdf2+0x6c>
  14d0e4:	0241ffc4 	movi	r9,2047
  14d0e8:	42400326 	beq	r8,r9,14d0f8 <__eqdf2+0x44>
  14d0ec:	1a000526 	beq	r3,r8,14d104 <__eqdf2+0x50>
  14d0f0:	00800044 	movi	r2,1
  14d0f4:	f800283a 	ret
  14d0f8:	1192b03a 	or	r9,r2,r6
  14d0fc:	483ffc1e 	bne	r9,zero,14d0f0 <__eqdf2+0x3c>
  14d100:	1a3ffb1e 	bne	r3,r8,14d0f0 <__eqdf2+0x3c>
  14d104:	50bffa1e 	bne	r10,r2,14d0f0 <__eqdf2+0x3c>
  14d108:	21bff91e 	bne	r4,r6,14d0f0 <__eqdf2+0x3c>
  14d10c:	29c00826 	beq	r5,r7,14d130 <__eqdf2+0x7c>
  14d110:	183ff71e 	bne	r3,zero,14d0f0 <__eqdf2+0x3c>
  14d114:	5104b03a 	or	r2,r10,r4
  14d118:	1004c03a 	cmpne	r2,r2,zero
  14d11c:	f800283a 	ret
  14d120:	5112b03a 	or	r9,r10,r4
  14d124:	483fef26 	beq	r9,zero,14d0e4 <__eqdf2+0x30>
  14d128:	00800044 	movi	r2,1
  14d12c:	f800283a 	ret
  14d130:	0005883a 	mov	r2,zero
  14d134:	f800283a 	ret

0014d138 <__gedf2>:
  14d138:	2804d53a 	srli	r2,r5,20
  14d13c:	3810d53a 	srli	r8,r7,20
  14d140:	00c00434 	movhi	r3,16
  14d144:	18ffffc4 	addi	r3,r3,-1
  14d148:	1081ffcc 	andi	r2,r2,2047
  14d14c:	0241ffc4 	movi	r9,2047
  14d150:	28d4703a 	and	r10,r5,r3
  14d154:	4201ffcc 	andi	r8,r8,2047
  14d158:	38c6703a 	and	r3,r7,r3
  14d15c:	280ad7fa 	srli	r5,r5,31
  14d160:	380ed7fa 	srli	r7,r7,31
  14d164:	12401b26 	beq	r2,r9,14d1d4 <__gedf2+0x9c>
  14d168:	0241ffc4 	movi	r9,2047
  14d16c:	42400926 	beq	r8,r9,14d194 <__gedf2+0x5c>
  14d170:	10000c1e 	bne	r2,zero,14d1a4 <__gedf2+0x6c>
  14d174:	5112b03a 	or	r9,r10,r4
  14d178:	4813003a 	cmpeq	r9,r9,zero
  14d17c:	4817883a 	mov	r11,r9
  14d180:	40000a26 	beq	r8,zero,14d1ac <__gedf2+0x74>
  14d184:	48001626 	beq	r9,zero,14d1e0 <__gedf2+0xa8>
  14d188:	38000d1e 	bne	r7,zero,14d1c0 <__gedf2+0x88>
  14d18c:	00bfffc4 	movi	r2,-1
  14d190:	f800283a 	ret
  14d194:	1992b03a 	or	r9,r3,r6
  14d198:	483ff526 	beq	r9,zero,14d170 <__gedf2+0x38>
  14d19c:	00bfff84 	movi	r2,-2
  14d1a0:	f800283a 	ret
  14d1a4:	40000e1e 	bne	r8,zero,14d1e0 <__gedf2+0xa8>
  14d1a8:	0017883a 	mov	r11,zero
  14d1ac:	1992b03a 	or	r9,r3,r6
  14d1b0:	4813003a 	cmpeq	r9,r9,zero
  14d1b4:	5800041e 	bne	r11,zero,14d1c8 <__gedf2+0x90>
  14d1b8:	48000926 	beq	r9,zero,14d1e0 <__gedf2+0xa8>
  14d1bc:	283ff31e 	bne	r5,zero,14d18c <__gedf2+0x54>
  14d1c0:	00800044 	movi	r2,1
  14d1c4:	f800283a 	ret
  14d1c8:	483fef26 	beq	r9,zero,14d188 <__gedf2+0x50>
  14d1cc:	0005883a 	mov	r2,zero
  14d1d0:	f800283a 	ret
  14d1d4:	5112b03a 	or	r9,r10,r4
  14d1d8:	483fe326 	beq	r9,zero,14d168 <__gedf2+0x30>
  14d1dc:	003fef06 	br	14d19c <__gedf2+0x64>
  14d1e0:	29fff61e 	bne	r5,r7,14d1bc <__gedf2+0x84>
  14d1e4:	40bff516 	blt	r8,r2,14d1bc <__gedf2+0x84>
  14d1e8:	12000316 	blt	r2,r8,14d1f8 <__gedf2+0xc0>
  14d1ec:	1abff336 	bltu	r3,r10,14d1bc <__gedf2+0x84>
  14d1f0:	50c00326 	beq	r10,r3,14d200 <__gedf2+0xc8>
  14d1f4:	50fff52e 	bgeu	r10,r3,14d1cc <__gedf2+0x94>
  14d1f8:	283fe426 	beq	r5,zero,14d18c <__gedf2+0x54>
  14d1fc:	003ff006 	br	14d1c0 <__gedf2+0x88>
  14d200:	313fee36 	bltu	r6,r4,14d1bc <__gedf2+0x84>
  14d204:	21bff12e 	bgeu	r4,r6,14d1cc <__gedf2+0x94>
  14d208:	283fe026 	beq	r5,zero,14d18c <__gedf2+0x54>
  14d20c:	003fec06 	br	14d1c0 <__gedf2+0x88>

0014d210 <__ledf2>:
  14d210:	2806d53a 	srli	r3,r5,20
  14d214:	3810d53a 	srli	r8,r7,20
  14d218:	00800434 	movhi	r2,16
  14d21c:	10bfffc4 	addi	r2,r2,-1
  14d220:	18c1ffcc 	andi	r3,r3,2047
  14d224:	0241ffc4 	movi	r9,2047
  14d228:	2894703a 	and	r10,r5,r2
  14d22c:	4201ffcc 	andi	r8,r8,2047
  14d230:	3884703a 	and	r2,r7,r2
  14d234:	280ad7fa 	srli	r5,r5,31
  14d238:	380ed7fa 	srli	r7,r7,31
  14d23c:	1a402026 	beq	r3,r9,14d2c0 <__ledf2+0xb0>
  14d240:	0241ffc4 	movi	r9,2047
  14d244:	42401726 	beq	r8,r9,14d2a4 <__ledf2+0x94>
  14d248:	18000b26 	beq	r3,zero,14d278 <__ledf2+0x68>
  14d24c:	29403fcc 	andi	r5,r5,255
  14d250:	39c03fcc 	andi	r7,r7,255
  14d254:	40000f1e 	bne	r8,zero,14d294 <__ledf2+0x84>
  14d258:	0017883a 	mov	r11,zero
  14d25c:	1192b03a 	or	r9,r2,r6
  14d260:	4813003a 	cmpeq	r9,r9,zero
  14d264:	58001326 	beq	r11,zero,14d2b4 <__ledf2+0xa4>
  14d268:	48001e1e 	bne	r9,zero,14d2e4 <__ledf2+0xd4>
  14d26c:	38000b1e 	bne	r7,zero,14d29c <__ledf2+0x8c>
  14d270:	00bfffc4 	movi	r2,-1
  14d274:	f800283a 	ret
  14d278:	5112b03a 	or	r9,r10,r4
  14d27c:	4813003a 	cmpeq	r9,r9,zero
  14d280:	4817883a 	mov	r11,r9
  14d284:	29403fcc 	andi	r5,r5,255
  14d288:	39c03fcc 	andi	r7,r7,255
  14d28c:	403ff326 	beq	r8,zero,14d25c <__ledf2+0x4c>
  14d290:	483ff61e 	bne	r9,zero,14d26c <__ledf2+0x5c>
  14d294:	29c00e26 	beq	r5,r7,14d2d0 <__ledf2+0xc0>
  14d298:	283ff51e 	bne	r5,zero,14d270 <__ledf2+0x60>
  14d29c:	00800044 	movi	r2,1
  14d2a0:	f800283a 	ret
  14d2a4:	1192b03a 	or	r9,r2,r6
  14d2a8:	483fe726 	beq	r9,zero,14d248 <__ledf2+0x38>
  14d2ac:	00800084 	movi	r2,2
  14d2b0:	f800283a 	ret
  14d2b4:	483ff726 	beq	r9,zero,14d294 <__ledf2+0x84>
  14d2b8:	283ff826 	beq	r5,zero,14d29c <__ledf2+0x8c>
  14d2bc:	003fec06 	br	14d270 <__ledf2+0x60>
  14d2c0:	5112b03a 	or	r9,r10,r4
  14d2c4:	483fde26 	beq	r9,zero,14d240 <__ledf2+0x30>
  14d2c8:	00800084 	movi	r2,2
  14d2cc:	f800283a 	ret
  14d2d0:	40fff116 	blt	r8,r3,14d298 <__ledf2+0x88>
  14d2d4:	1a000716 	blt	r3,r8,14d2f4 <__ledf2+0xe4>
  14d2d8:	12bfef36 	bltu	r2,r10,14d298 <__ledf2+0x88>
  14d2dc:	50800326 	beq	r10,r2,14d2ec <__ledf2+0xdc>
  14d2e0:	50800436 	bltu	r10,r2,14d2f4 <__ledf2+0xe4>
  14d2e4:	0005883a 	mov	r2,zero
  14d2e8:	f800283a 	ret
  14d2ec:	313fea36 	bltu	r6,r4,14d298 <__ledf2+0x88>
  14d2f0:	21bffc2e 	bgeu	r4,r6,14d2e4 <__ledf2+0xd4>
  14d2f4:	283fde26 	beq	r5,zero,14d270 <__ledf2+0x60>
  14d2f8:	003fe806 	br	14d29c <__ledf2+0x8c>

0014d2fc <__muldf3>:
  14d2fc:	defff204 	addi	sp,sp,-56
  14d300:	dd000815 	stw	r20,32(sp)
  14d304:	2828d53a 	srli	r20,r5,20
  14d308:	dc800615 	stw	r18,24(sp)
  14d30c:	2824d7fa 	srli	r18,r5,31
  14d310:	ddc00b15 	stw	r23,44(sp)
  14d314:	dd400915 	stw	r21,36(sp)
  14d318:	dcc00715 	stw	r19,28(sp)
  14d31c:	dc400515 	stw	r17,20(sp)
  14d320:	dfc00d15 	stw	ra,52(sp)
  14d324:	04400434 	movhi	r17,16
  14d328:	8c7fffc4 	addi	r17,r17,-1
  14d32c:	df000c15 	stw	fp,48(sp)
  14d330:	dd800a15 	stw	r22,40(sp)
  14d334:	dc000415 	stw	r16,16(sp)
  14d338:	a501ffcc 	andi	r20,r20,2047
  14d33c:	2027883a 	mov	r19,r4
  14d340:	2c62703a 	and	r17,r5,r17
  14d344:	902f883a 	mov	r23,r18
  14d348:	95403fcc 	andi	r21,r18,255
  14d34c:	a0005d26 	beq	r20,zero,14d4c4 <__muldf3+0x1c8>
  14d350:	0081ffc4 	movi	r2,2047
  14d354:	2021883a 	mov	r16,r4
  14d358:	a0803326 	beq	r20,r2,14d428 <__muldf3+0x12c>
  14d35c:	88800434 	orhi	r2,r17,16
  14d360:	100490fa 	slli	r2,r2,3
  14d364:	2022d77a 	srli	r17,r4,29
  14d368:	202090fa 	slli	r16,r4,3
  14d36c:	a53f0044 	addi	r20,r20,-1023
  14d370:	1462b03a 	or	r17,r2,r17
  14d374:	0015883a 	mov	r10,zero
  14d378:	0039883a 	mov	fp,zero
  14d37c:	3804d53a 	srli	r2,r7,20
  14d380:	382cd7fa 	srli	r22,r7,31
  14d384:	04c00434 	movhi	r19,16
  14d388:	9cffffc4 	addi	r19,r19,-1
  14d38c:	1081ffcc 	andi	r2,r2,2047
  14d390:	300b883a 	mov	r5,r6
  14d394:	3ce6703a 	and	r19,r7,r19
  14d398:	b2403fcc 	andi	r9,r22,255
  14d39c:	10006626 	beq	r2,zero,14d538 <__muldf3+0x23c>
  14d3a0:	00c1ffc4 	movi	r3,2047
  14d3a4:	10c05e26 	beq	r2,r3,14d520 <__muldf3+0x224>
  14d3a8:	98c00434 	orhi	r3,r19,16
  14d3ac:	180690fa 	slli	r3,r3,3
  14d3b0:	3026d77a 	srli	r19,r6,29
  14d3b4:	300a90fa 	slli	r5,r6,3
  14d3b8:	10bf0044 	addi	r2,r2,-1023
  14d3bc:	1ce6b03a 	or	r19,r3,r19
  14d3c0:	0007883a 	mov	r3,zero
  14d3c4:	1a88b03a 	or	r4,r3,r10
  14d3c8:	2109883a 	add	r4,r4,r4
  14d3cc:	2109883a 	add	r4,r4,r4
  14d3d0:	01800574 	movhi	r6,21
  14d3d4:	31b4fa04 	addi	r6,r6,-11288
  14d3d8:	2189883a 	add	r4,r4,r6
  14d3dc:	21000017 	ldw	r4,0(r4)
  14d3e0:	95a4f03a 	xor	r18,r18,r22
  14d3e4:	2000683a 	jmp	r4
  14d3e8:	0014d620 	cmpeqi	zero,zero,21336
  14d3ec:	0014d610 	cmplti	zero,zero,21336
  14d3f0:	0014d610 	cmplti	zero,zero,21336
  14d3f4:	0014d5fc 	xorhi	zero,zero,21335
  14d3f8:	0014d448 	cmpgei	zero,zero,21329
  14d3fc:	0014d448 	cmpgei	zero,zero,21329
  14d400:	0014d5e4 	muli	zero,zero,21335
  14d404:	0014d5fc 	xorhi	zero,zero,21335
  14d408:	0014d448 	cmpgei	zero,zero,21329
  14d40c:	0014d5e4 	muli	zero,zero,21335
  14d410:	0014d448 	cmpgei	zero,zero,21329
  14d414:	0014d5fc 	xorhi	zero,zero,21335
  14d418:	0014d444 	movi	zero,21329
  14d41c:	0014d444 	movi	zero,21329
  14d420:	0014d444 	movi	zero,21329
  14d424:	0014d840 	call	14d84 <__alt_mem_onchip_memory2-0x12b27c>
  14d428:	8904b03a 	or	r2,r17,r4
  14d42c:	10006a1e 	bne	r2,zero,14d5d8 <__muldf3+0x2dc>
  14d430:	02800204 	movi	r10,8
  14d434:	0023883a 	mov	r17,zero
  14d438:	0021883a 	mov	r16,zero
  14d43c:	07000084 	movi	fp,2
  14d440:	003fce06 	br	14d37c <__muldf3+0x80>
  14d444:	a825883a 	mov	r18,r21
  14d448:	00800084 	movi	r2,2
  14d44c:	e0805226 	beq	fp,r2,14d598 <__muldf3+0x29c>
  14d450:	008000c4 	movi	r2,3
  14d454:	e0815d26 	beq	fp,r2,14d9cc <__muldf3+0x6d0>
  14d458:	00800044 	movi	r2,1
  14d45c:	e080db1e 	bne	fp,r2,14d7cc <__muldf3+0x4d0>
  14d460:	902f883a 	mov	r23,r18
  14d464:	0005883a 	mov	r2,zero
  14d468:	0023883a 	mov	r17,zero
  14d46c:	0021883a 	mov	r16,zero
  14d470:	1004953a 	slli	r2,r2,20
  14d474:	bdc03fcc 	andi	r23,r23,255
  14d478:	b82e97fa 	slli	r23,r23,31
  14d47c:	00c00434 	movhi	r3,16
  14d480:	18ffffc4 	addi	r3,r3,-1
  14d484:	88e2703a 	and	r17,r17,r3
  14d488:	8886b03a 	or	r3,r17,r2
  14d48c:	1dc6b03a 	or	r3,r3,r23
  14d490:	8005883a 	mov	r2,r16
  14d494:	dfc00d17 	ldw	ra,52(sp)
  14d498:	df000c17 	ldw	fp,48(sp)
  14d49c:	ddc00b17 	ldw	r23,44(sp)
  14d4a0:	dd800a17 	ldw	r22,40(sp)
  14d4a4:	dd400917 	ldw	r21,36(sp)
  14d4a8:	dd000817 	ldw	r20,32(sp)
  14d4ac:	dcc00717 	ldw	r19,28(sp)
  14d4b0:	dc800617 	ldw	r18,24(sp)
  14d4b4:	dc400517 	ldw	r17,20(sp)
  14d4b8:	dc000417 	ldw	r16,16(sp)
  14d4bc:	dec00e04 	addi	sp,sp,56
  14d4c0:	f800283a 	ret
  14d4c4:	8904b03a 	or	r2,r17,r4
  14d4c8:	10003e26 	beq	r2,zero,14d5c4 <__muldf3+0x2c8>
  14d4cc:	8800f226 	beq	r17,zero,14d898 <__muldf3+0x59c>
  14d4d0:	8809883a 	mov	r4,r17
  14d4d4:	d9800315 	stw	r6,12(sp)
  14d4d8:	d9c00115 	stw	r7,4(sp)
  14d4dc:	01421980 	call	142198 <__clzsi2>
  14d4e0:	d9800317 	ldw	r6,12(sp)
  14d4e4:	d9c00117 	ldw	r7,4(sp)
  14d4e8:	00c009c4 	movi	r3,39
  14d4ec:	1880e616 	blt	r3,r2,14d888 <__muldf3+0x58c>
  14d4f0:	00c00a04 	movi	r3,40
  14d4f4:	143ffe04 	addi	r16,r2,-8
  14d4f8:	1887c83a 	sub	r3,r3,r2
  14d4fc:	8c22983a 	sll	r17,r17,r16
  14d500:	98c6d83a 	srl	r3,r19,r3
  14d504:	9c20983a 	sll	r16,r19,r16
  14d508:	1c62b03a 	or	r17,r3,r17
  14d50c:	053f0344 	movi	r20,-1011
  14d510:	a0a9c83a 	sub	r20,r20,r2
  14d514:	0015883a 	mov	r10,zero
  14d518:	0039883a 	mov	fp,zero
  14d51c:	003f9706 	br	14d37c <__muldf3+0x80>
  14d520:	9986b03a 	or	r3,r19,r6
  14d524:	1800251e 	bne	r3,zero,14d5bc <__muldf3+0x2c0>
  14d528:	0027883a 	mov	r19,zero
  14d52c:	000b883a 	mov	r5,zero
  14d530:	00c00084 	movi	r3,2
  14d534:	003fa306 	br	14d3c4 <__muldf3+0xc8>
  14d538:	9986b03a 	or	r3,r19,r6
  14d53c:	18001b26 	beq	r3,zero,14d5ac <__muldf3+0x2b0>
  14d540:	9800e026 	beq	r19,zero,14d8c4 <__muldf3+0x5c8>
  14d544:	9809883a 	mov	r4,r19
  14d548:	d9800315 	stw	r6,12(sp)
  14d54c:	da400115 	stw	r9,4(sp)
  14d550:	da800215 	stw	r10,8(sp)
  14d554:	01421980 	call	142198 <__clzsi2>
  14d558:	d9800317 	ldw	r6,12(sp)
  14d55c:	da400117 	ldw	r9,4(sp)
  14d560:	da800217 	ldw	r10,8(sp)
  14d564:	00c009c4 	movi	r3,39
  14d568:	1880d216 	blt	r3,r2,14d8b4 <__muldf3+0x5b8>
  14d56c:	01c00a04 	movi	r7,40
  14d570:	117ffe04 	addi	r5,r2,-8
  14d574:	388fc83a 	sub	r7,r7,r2
  14d578:	9966983a 	sll	r19,r19,r5
  14d57c:	31ced83a 	srl	r7,r6,r7
  14d580:	314a983a 	sll	r5,r6,r5
  14d584:	3ce6b03a 	or	r19,r7,r19
  14d588:	00ff0344 	movi	r3,-1011
  14d58c:	1885c83a 	sub	r2,r3,r2
  14d590:	0007883a 	mov	r3,zero
  14d594:	003f8b06 	br	14d3c4 <__muldf3+0xc8>
  14d598:	902f883a 	mov	r23,r18
  14d59c:	0081ffc4 	movi	r2,2047
  14d5a0:	0023883a 	mov	r17,zero
  14d5a4:	0021883a 	mov	r16,zero
  14d5a8:	003fb106 	br	14d470 <__muldf3+0x174>
  14d5ac:	0027883a 	mov	r19,zero
  14d5b0:	000b883a 	mov	r5,zero
  14d5b4:	00c00044 	movi	r3,1
  14d5b8:	003f8206 	br	14d3c4 <__muldf3+0xc8>
  14d5bc:	00c000c4 	movi	r3,3
  14d5c0:	003f8006 	br	14d3c4 <__muldf3+0xc8>
  14d5c4:	02800104 	movi	r10,4
  14d5c8:	0023883a 	mov	r17,zero
  14d5cc:	0021883a 	mov	r16,zero
  14d5d0:	07000044 	movi	fp,1
  14d5d4:	003f6906 	br	14d37c <__muldf3+0x80>
  14d5d8:	02800304 	movi	r10,12
  14d5dc:	070000c4 	movi	fp,3
  14d5e0:	003f6606 	br	14d37c <__muldf3+0x80>
  14d5e4:	002f883a 	mov	r23,zero
  14d5e8:	04400434 	movhi	r17,16
  14d5ec:	8c7fffc4 	addi	r17,r17,-1
  14d5f0:	043fffc4 	movi	r16,-1
  14d5f4:	0081ffc4 	movi	r2,2047
  14d5f8:	003f9d06 	br	14d470 <__muldf3+0x174>
  14d5fc:	9823883a 	mov	r17,r19
  14d600:	2821883a 	mov	r16,r5
  14d604:	4825883a 	mov	r18,r9
  14d608:	1839883a 	mov	fp,r3
  14d60c:	003f8e06 	br	14d448 <__muldf3+0x14c>
  14d610:	9823883a 	mov	r17,r19
  14d614:	2821883a 	mov	r16,r5
  14d618:	1839883a 	mov	fp,r3
  14d61c:	003f8a06 	br	14d448 <__muldf3+0x14c>
  14d620:	800cd43a 	srli	r6,r16,16
  14d624:	2808d43a 	srli	r4,r5,16
  14d628:	843fffcc 	andi	r16,r16,65535
  14d62c:	297fffcc 	andi	r5,r5,65535
  14d630:	2c15383a 	mul	r10,r5,r16
  14d634:	2411383a 	mul	r8,r4,r16
  14d638:	2987383a 	mul	r3,r5,r6
  14d63c:	500ed43a 	srli	r7,r10,16
  14d640:	a085883a 	add	r2,r20,r2
  14d644:	d8800015 	stw	r2,0(sp)
  14d648:	1a05883a 	add	r2,r3,r8
  14d64c:	11c5883a 	add	r2,r2,r7
  14d650:	2197383a 	mul	r11,r4,r6
  14d654:	10c0022e 	bgeu	r2,r3,14d660 <__muldf3+0x364>
  14d658:	00c00074 	movhi	r3,1
  14d65c:	58d7883a 	add	r11,r11,r3
  14d660:	9806d43a 	srli	r3,r19,16
  14d664:	9cffffcc 	andi	r19,r19,65535
  14d668:	9c13383a 	mul	r9,r19,r16
  14d66c:	9991383a 	mul	r8,r19,r6
  14d670:	1c21383a 	mul	r16,r3,r16
  14d674:	481ad43a 	srli	r13,r9,16
  14d678:	1018943a 	slli	r12,r2,16
  14d67c:	440f883a 	add	r7,r8,r16
  14d680:	52bfffcc 	andi	r10,r10,65535
  14d684:	3b4f883a 	add	r7,r7,r13
  14d688:	1020d43a 	srli	r16,r2,16
  14d68c:	6299883a 	add	r12,r12,r10
  14d690:	198d383a 	mul	r6,r3,r6
  14d694:	3a00022e 	bgeu	r7,r8,14d6a0 <__muldf3+0x3a4>
  14d698:	00800074 	movhi	r2,1
  14d69c:	308d883a 	add	r6,r6,r2
  14d6a0:	8804d43a 	srli	r2,r17,16
  14d6a4:	8c7fffcc 	andi	r17,r17,65535
  14d6a8:	2c55383a 	mul	r10,r5,r17
  14d6ac:	2451383a 	mul	r8,r4,r17
  14d6b0:	288b383a 	mul	r5,r5,r2
  14d6b4:	501cd43a 	srli	r14,r10,16
  14d6b8:	381ad43a 	srli	r13,r7,16
  14d6bc:	380e943a 	slli	r7,r7,16
  14d6c0:	2a11883a 	add	r8,r5,r8
  14d6c4:	4a7fffcc 	andi	r9,r9,65535
  14d6c8:	4391883a 	add	r8,r8,r14
  14d6cc:	334d883a 	add	r6,r6,r13
  14d6d0:	3a4f883a 	add	r7,r7,r9
  14d6d4:	2089383a 	mul	r4,r4,r2
  14d6d8:	4140022e 	bgeu	r8,r5,14d6e4 <__muldf3+0x3e8>
  14d6dc:	01400074 	movhi	r5,1
  14d6e0:	2149883a 	add	r4,r4,r5
  14d6e4:	9c53383a 	mul	r9,r19,r17
  14d6e8:	1c63383a 	mul	r17,r3,r17
  14d6ec:	98a7383a 	mul	r19,r19,r2
  14d6f0:	481cd43a 	srli	r14,r9,16
  14d6f4:	401ad43a 	srli	r13,r8,16
  14d6f8:	4010943a 	slli	r8,r8,16
  14d6fc:	9c4b883a 	add	r5,r19,r17
  14d700:	52bfffcc 	andi	r10,r10,65535
  14d704:	2b8b883a 	add	r5,r5,r14
  14d708:	2349883a 	add	r4,r4,r13
  14d70c:	4291883a 	add	r8,r8,r10
  14d710:	1887383a 	mul	r3,r3,r2
  14d714:	2cc0022e 	bgeu	r5,r19,14d720 <__muldf3+0x424>
  14d718:	00800074 	movhi	r2,1
  14d71c:	1887883a 	add	r3,r3,r2
  14d720:	2814943a 	slli	r10,r5,16
  14d724:	3c21883a 	add	r16,r7,r16
  14d728:	4a7fffcc 	andi	r9,r9,65535
  14d72c:	82e1883a 	add	r16,r16,r11
  14d730:	5255883a 	add	r10,r10,r9
  14d734:	81cf803a 	cmpltu	r7,r16,r7
  14d738:	5195883a 	add	r10,r10,r6
  14d73c:	8221883a 	add	r16,r16,r8
  14d740:	51d7883a 	add	r11,r10,r7
  14d744:	8211803a 	cmpltu	r8,r16,r8
  14d748:	2804d43a 	srli	r2,r5,16
  14d74c:	22d3883a 	add	r9,r4,r11
  14d750:	4a0b883a 	add	r5,r9,r8
  14d754:	518d803a 	cmpltu	r6,r10,r6
  14d758:	59e3803a 	cmpltu	r17,r11,r7
  14d75c:	89a2b03a 	or	r17,r17,r6
  14d760:	2a11803a 	cmpltu	r8,r5,r8
  14d764:	4909803a 	cmpltu	r4,r9,r4
  14d768:	88a3883a 	add	r17,r17,r2
  14d76c:	4108b03a 	or	r4,r8,r4
  14d770:	8923883a 	add	r17,r17,r4
  14d774:	800c927a 	slli	r6,r16,9
  14d778:	88c7883a 	add	r3,r17,r3
  14d77c:	2808d5fa 	srli	r4,r5,23
  14d780:	1822927a 	slli	r17,r3,9
  14d784:	8020d5fa 	srli	r16,r16,23
  14d788:	3318b03a 	or	r12,r6,r12
  14d78c:	280a927a 	slli	r5,r5,9
  14d790:	8922b03a 	or	r17,r17,r4
  14d794:	6018c03a 	cmpne	r12,r12,zero
  14d798:	6420b03a 	or	r16,r12,r16
  14d79c:	8880402c 	andhi	r2,r17,256
  14d7a0:	8160b03a 	or	r16,r16,r5
  14d7a4:	10000926 	beq	r2,zero,14d7cc <__muldf3+0x4d0>
  14d7a8:	8006d07a 	srli	r3,r16,1
  14d7ac:	8400004c 	andi	r16,r16,1
  14d7b0:	880497fa 	slli	r2,r17,31
  14d7b4:	80e0b03a 	or	r16,r16,r3
  14d7b8:	d8c00017 	ldw	r3,0(sp)
  14d7bc:	8822d07a 	srli	r17,r17,1
  14d7c0:	80a0b03a 	or	r16,r16,r2
  14d7c4:	18c00044 	addi	r3,r3,1
  14d7c8:	d8c00015 	stw	r3,0(sp)
  14d7cc:	d8c00017 	ldw	r3,0(sp)
  14d7d0:	1880ffc4 	addi	r2,r3,1023
  14d7d4:	0080450e 	bge	zero,r2,14d8ec <__muldf3+0x5f0>
  14d7d8:	80c001cc 	andi	r3,r16,7
  14d7dc:	18000726 	beq	r3,zero,14d7fc <__muldf3+0x500>
  14d7e0:	810003cc 	andi	r4,r16,15
  14d7e4:	00c00104 	movi	r3,4
  14d7e8:	20c00426 	beq	r4,r3,14d7fc <__muldf3+0x500>
  14d7ec:	80c7883a 	add	r3,r16,r3
  14d7f0:	1c21803a 	cmpltu	r16,r3,r16
  14d7f4:	8c23883a 	add	r17,r17,r16
  14d7f8:	1821883a 	mov	r16,r3
  14d7fc:	88c0402c 	andhi	r3,r17,256
  14d800:	18000526 	beq	r3,zero,14d818 <__muldf3+0x51c>
  14d804:	d8c00017 	ldw	r3,0(sp)
  14d808:	00bfc034 	movhi	r2,65280
  14d80c:	10bfffc4 	addi	r2,r2,-1
  14d810:	88a2703a 	and	r17,r17,r2
  14d814:	18810004 	addi	r2,r3,1024
  14d818:	00c1ff84 	movi	r3,2046
  14d81c:	18bf5e16 	blt	r3,r2,14d598 <__muldf3+0x29c>
  14d820:	8806977a 	slli	r3,r17,29
  14d824:	8020d0fa 	srli	r16,r16,3
  14d828:	8822927a 	slli	r17,r17,9
  14d82c:	1081ffcc 	andi	r2,r2,2047
  14d830:	1c20b03a 	or	r16,r3,r16
  14d834:	8822d33a 	srli	r17,r17,12
  14d838:	902f883a 	mov	r23,r18
  14d83c:	003f0c06 	br	14d470 <__muldf3+0x174>
  14d840:	8880022c 	andhi	r2,r17,8
  14d844:	10000a26 	beq	r2,zero,14d870 <__muldf3+0x574>
  14d848:	9880022c 	andhi	r2,r19,8
  14d84c:	1000081e 	bne	r2,zero,14d870 <__muldf3+0x574>
  14d850:	00800434 	movhi	r2,16
  14d854:	10bfffc4 	addi	r2,r2,-1
  14d858:	9c400234 	orhi	r17,r19,8
  14d85c:	88a2703a 	and	r17,r17,r2
  14d860:	b02f883a 	mov	r23,r22
  14d864:	2821883a 	mov	r16,r5
  14d868:	0081ffc4 	movi	r2,2047
  14d86c:	003f0006 	br	14d470 <__muldf3+0x174>
  14d870:	00800434 	movhi	r2,16
  14d874:	10bfffc4 	addi	r2,r2,-1
  14d878:	8c400234 	orhi	r17,r17,8
  14d87c:	88a2703a 	and	r17,r17,r2
  14d880:	0081ffc4 	movi	r2,2047
  14d884:	003efa06 	br	14d470 <__muldf3+0x174>
  14d888:	147ff604 	addi	r17,r2,-40
  14d88c:	9c62983a 	sll	r17,r19,r17
  14d890:	0021883a 	mov	r16,zero
  14d894:	003f1d06 	br	14d50c <__muldf3+0x210>
  14d898:	d9800315 	stw	r6,12(sp)
  14d89c:	d9c00115 	stw	r7,4(sp)
  14d8a0:	01421980 	call	142198 <__clzsi2>
  14d8a4:	10800804 	addi	r2,r2,32
  14d8a8:	d9c00117 	ldw	r7,4(sp)
  14d8ac:	d9800317 	ldw	r6,12(sp)
  14d8b0:	003f0d06 	br	14d4e8 <__muldf3+0x1ec>
  14d8b4:	14fff604 	addi	r19,r2,-40
  14d8b8:	34e6983a 	sll	r19,r6,r19
  14d8bc:	000b883a 	mov	r5,zero
  14d8c0:	003f3106 	br	14d588 <__muldf3+0x28c>
  14d8c4:	3009883a 	mov	r4,r6
  14d8c8:	d9800315 	stw	r6,12(sp)
  14d8cc:	da400115 	stw	r9,4(sp)
  14d8d0:	da800215 	stw	r10,8(sp)
  14d8d4:	01421980 	call	142198 <__clzsi2>
  14d8d8:	10800804 	addi	r2,r2,32
  14d8dc:	da800217 	ldw	r10,8(sp)
  14d8e0:	da400117 	ldw	r9,4(sp)
  14d8e4:	d9800317 	ldw	r6,12(sp)
  14d8e8:	003f1e06 	br	14d564 <__muldf3+0x268>
  14d8ec:	d8c00017 	ldw	r3,0(sp)
  14d8f0:	00bf0084 	movi	r2,-1022
  14d8f4:	10c5c83a 	sub	r2,r2,r3
  14d8f8:	00c00e04 	movi	r3,56
  14d8fc:	18bed816 	blt	r3,r2,14d460 <__muldf3+0x164>
  14d900:	00c007c4 	movi	r3,31
  14d904:	18801916 	blt	r3,r2,14d96c <__muldf3+0x670>
  14d908:	d8c00017 	ldw	r3,0(sp)
  14d90c:	808ad83a 	srl	r5,r16,r2
  14d910:	8884d83a 	srl	r2,r17,r2
  14d914:	1d410784 	addi	r21,r3,1054
  14d918:	8d48983a 	sll	r4,r17,r21
  14d91c:	8546983a 	sll	r3,r16,r21
  14d920:	2908b03a 	or	r4,r5,r4
  14d924:	1806c03a 	cmpne	r3,r3,zero
  14d928:	20c6b03a 	or	r3,r4,r3
  14d92c:	190001cc 	andi	r4,r3,7
  14d930:	20000726 	beq	r4,zero,14d950 <__muldf3+0x654>
  14d934:	194003cc 	andi	r5,r3,15
  14d938:	01000104 	movi	r4,4
  14d93c:	29000426 	beq	r5,r4,14d950 <__muldf3+0x654>
  14d940:	1909883a 	add	r4,r3,r4
  14d944:	20c7803a 	cmpltu	r3,r4,r3
  14d948:	10c5883a 	add	r2,r2,r3
  14d94c:	2007883a 	mov	r3,r4
  14d950:	1100202c 	andhi	r4,r2,128
  14d954:	20001326 	beq	r4,zero,14d9a4 <__muldf3+0x6a8>
  14d958:	902f883a 	mov	r23,r18
  14d95c:	00800044 	movi	r2,1
  14d960:	0023883a 	mov	r17,zero
  14d964:	0021883a 	mov	r16,zero
  14d968:	003ec106 	br	14d470 <__muldf3+0x174>
  14d96c:	d9000017 	ldw	r4,0(sp)
  14d970:	00fef884 	movi	r3,-1054
  14d974:	1907c83a 	sub	r3,r3,r4
  14d978:	01000804 	movi	r4,32
  14d97c:	88c6d83a 	srl	r3,r17,r3
  14d980:	11001026 	beq	r2,r4,14d9c4 <__muldf3+0x6c8>
  14d984:	d9000017 	ldw	r4,0(sp)
  14d988:	20810f84 	addi	r2,r4,1086
  14d98c:	8884983a 	sll	r2,r17,r2
  14d990:	1404b03a 	or	r2,r2,r16
  14d994:	1004c03a 	cmpne	r2,r2,zero
  14d998:	10c6b03a 	or	r3,r2,r3
  14d99c:	0005883a 	mov	r2,zero
  14d9a0:	003fe206 	br	14d92c <__muldf3+0x630>
  14d9a4:	1020977a 	slli	r16,r2,29
  14d9a8:	1806d0fa 	srli	r3,r3,3
  14d9ac:	1004927a 	slli	r2,r2,9
  14d9b0:	902f883a 	mov	r23,r18
  14d9b4:	80e0b03a 	or	r16,r16,r3
  14d9b8:	1022d33a 	srli	r17,r2,12
  14d9bc:	0005883a 	mov	r2,zero
  14d9c0:	003eab06 	br	14d470 <__muldf3+0x174>
  14d9c4:	0005883a 	mov	r2,zero
  14d9c8:	003ff106 	br	14d990 <__muldf3+0x694>
  14d9cc:	00800434 	movhi	r2,16
  14d9d0:	10bfffc4 	addi	r2,r2,-1
  14d9d4:	8c400234 	orhi	r17,r17,8
  14d9d8:	88a2703a 	and	r17,r17,r2
  14d9dc:	902f883a 	mov	r23,r18
  14d9e0:	0081ffc4 	movi	r2,2047
  14d9e4:	003ea206 	br	14d470 <__muldf3+0x174>

0014d9e8 <__subdf3>:
  14d9e8:	02000434 	movhi	r8,16
  14d9ec:	423fffc4 	addi	r8,r8,-1
  14d9f0:	defffb04 	addi	sp,sp,-20
  14d9f4:	2a06703a 	and	r3,r5,r8
  14d9f8:	3a10703a 	and	r8,r7,r8
  14d9fc:	3804d53a 	srli	r2,r7,20
  14da00:	dc800215 	stw	r18,8(sp)
  14da04:	dc400115 	stw	r17,4(sp)
  14da08:	2824d7fa 	srli	r18,r5,31
  14da0c:	2822d53a 	srli	r17,r5,20
  14da10:	401090fa 	slli	r8,r8,3
  14da14:	180a90fa 	slli	r5,r3,3
  14da18:	3006d77a 	srli	r3,r6,29
  14da1c:	2014d77a 	srli	r10,r4,29
  14da20:	dc000015 	stw	r16,0(sp)
  14da24:	40d0b03a 	or	r8,r8,r3
  14da28:	dfc00415 	stw	ra,16(sp)
  14da2c:	dcc00315 	stw	r19,12(sp)
  14da30:	1081ffcc 	andi	r2,r2,2047
  14da34:	00c1ffc4 	movi	r3,2047
  14da38:	9013883a 	mov	r9,r18
  14da3c:	8c41ffcc 	andi	r17,r17,2047
  14da40:	94803fcc 	andi	r18,r18,255
  14da44:	2a8ab03a 	or	r5,r5,r10
  14da48:	202090fa 	slli	r16,r4,3
  14da4c:	380ed7fa 	srli	r7,r7,31
  14da50:	300c90fa 	slli	r6,r6,3
  14da54:	10c02e26 	beq	r2,r3,14db10 <__subdf3+0x128>
  14da58:	39c0005c 	xori	r7,r7,1
  14da5c:	8887c83a 	sub	r3,r17,r2
  14da60:	91c03026 	beq	r18,r7,14db24 <__subdf3+0x13c>
  14da64:	00c0a40e 	bge	zero,r3,14dcf8 <__subdf3+0x310>
  14da68:	10004c1e 	bne	r2,zero,14db9c <__subdf3+0x1b4>
  14da6c:	4184b03a 	or	r2,r8,r6
  14da70:	10008f1e 	bne	r2,zero,14dcb0 <__subdf3+0x2c8>
  14da74:	808001cc 	andi	r2,r16,7
  14da78:	10007d26 	beq	r2,zero,14dc70 <__subdf3+0x288>
  14da7c:	80c003cc 	andi	r3,r16,15
  14da80:	00800104 	movi	r2,4
  14da84:	18807a26 	beq	r3,r2,14dc70 <__subdf3+0x288>
  14da88:	80c00104 	addi	r3,r16,4
  14da8c:	1c21803a 	cmpltu	r16,r3,r16
  14da90:	2c0b883a 	add	r5,r5,r16
  14da94:	2880202c 	andhi	r2,r5,128
  14da98:	9240004c 	andi	r9,r18,1
  14da9c:	1821883a 	mov	r16,r3
  14daa0:	10007626 	beq	r2,zero,14dc7c <__subdf3+0x294>
  14daa4:	8c400044 	addi	r17,r17,1
  14daa8:	0081ffc4 	movi	r2,2047
  14daac:	8880b226 	beq	r17,r2,14dd78 <__subdf3+0x390>
  14dab0:	00bfe034 	movhi	r2,65408
  14dab4:	10bfffc4 	addi	r2,r2,-1
  14dab8:	288a703a 	and	r5,r5,r2
  14dabc:	2804977a 	slli	r2,r5,29
  14dac0:	280a927a 	slli	r5,r5,9
  14dac4:	8020d0fa 	srli	r16,r16,3
  14dac8:	280ad33a 	srli	r5,r5,12
  14dacc:	1404b03a 	or	r2,r2,r16
  14dad0:	8c41ffcc 	andi	r17,r17,2047
  14dad4:	8822953a 	slli	r17,r17,20
  14dad8:	4a403fcc 	andi	r9,r9,255
  14dadc:	481297fa 	slli	r9,r9,31
  14dae0:	00c00434 	movhi	r3,16
  14dae4:	18ffffc4 	addi	r3,r3,-1
  14dae8:	28c6703a 	and	r3,r5,r3
  14daec:	1c46b03a 	or	r3,r3,r17
  14daf0:	1a46b03a 	or	r3,r3,r9
  14daf4:	dfc00417 	ldw	ra,16(sp)
  14daf8:	dcc00317 	ldw	r19,12(sp)
  14dafc:	dc800217 	ldw	r18,8(sp)
  14db00:	dc400117 	ldw	r17,4(sp)
  14db04:	dc000017 	ldw	r16,0(sp)
  14db08:	dec00504 	addi	sp,sp,20
  14db0c:	f800283a 	ret
  14db10:	4186b03a 	or	r3,r8,r6
  14db14:	183fd026 	beq	r3,zero,14da58 <__subdf3+0x70>
  14db18:	39c03fcc 	andi	r7,r7,255
  14db1c:	8887c83a 	sub	r3,r17,r2
  14db20:	91ffd01e 	bne	r18,r7,14da64 <__subdf3+0x7c>
  14db24:	00c09b0e 	bge	zero,r3,14dd94 <__subdf3+0x3ac>
  14db28:	10006926 	beq	r2,zero,14dcd0 <__subdf3+0x2e8>
  14db2c:	0081ffc4 	movi	r2,2047
  14db30:	88bfd026 	beq	r17,r2,14da74 <__subdf3+0x8c>
  14db34:	42002034 	orhi	r8,r8,128
  14db38:	00800e04 	movi	r2,56
  14db3c:	10c0e20e 	bge	r2,r3,14dec8 <__subdf3+0x4e0>
  14db40:	418cb03a 	or	r6,r8,r6
  14db44:	300cc03a 	cmpne	r6,r6,zero
  14db48:	0007883a 	mov	r3,zero
  14db4c:	340d883a 	add	r6,r6,r16
  14db50:	3421803a 	cmpltu	r16,r6,r16
  14db54:	194b883a 	add	r5,r3,r5
  14db58:	2c0b883a 	add	r5,r5,r16
  14db5c:	3021883a 	mov	r16,r6
  14db60:	2880202c 	andhi	r2,r5,128
  14db64:	103fc326 	beq	r2,zero,14da74 <__subdf3+0x8c>
  14db68:	8c400044 	addi	r17,r17,1
  14db6c:	0081ffc4 	movi	r2,2047
  14db70:	88811026 	beq	r17,r2,14dfb4 <__subdf3+0x5cc>
  14db74:	00bfe034 	movhi	r2,65408
  14db78:	10bfffc4 	addi	r2,r2,-1
  14db7c:	288a703a 	and	r5,r5,r2
  14db80:	8006d07a 	srli	r3,r16,1
  14db84:	280497fa 	slli	r2,r5,31
  14db88:	8400004c 	andi	r16,r16,1
  14db8c:	80e0b03a 	or	r16,r16,r3
  14db90:	80a0b03a 	or	r16,r16,r2
  14db94:	280ad07a 	srli	r5,r5,1
  14db98:	003fb606 	br	14da74 <__subdf3+0x8c>
  14db9c:	0081ffc4 	movi	r2,2047
  14dba0:	88bfb426 	beq	r17,r2,14da74 <__subdf3+0x8c>
  14dba4:	42002034 	orhi	r8,r8,128
  14dba8:	00800e04 	movi	r2,56
  14dbac:	10c07516 	blt	r2,r3,14dd84 <__subdf3+0x39c>
  14dbb0:	008007c4 	movi	r2,31
  14dbb4:	10c09816 	blt	r2,r3,14de18 <__subdf3+0x430>
  14dbb8:	00800804 	movi	r2,32
  14dbbc:	10c5c83a 	sub	r2,r2,r3
  14dbc0:	30c8d83a 	srl	r4,r6,r3
  14dbc4:	408e983a 	sll	r7,r8,r2
  14dbc8:	3084983a 	sll	r2,r6,r2
  14dbcc:	40c6d83a 	srl	r3,r8,r3
  14dbd0:	3908b03a 	or	r4,r7,r4
  14dbd4:	1004c03a 	cmpne	r2,r2,zero
  14dbd8:	208cb03a 	or	r6,r4,r2
  14dbdc:	818dc83a 	sub	r6,r16,r6
  14dbe0:	81a1803a 	cmpltu	r16,r16,r6
  14dbe4:	28cbc83a 	sub	r5,r5,r3
  14dbe8:	2c0bc83a 	sub	r5,r5,r16
  14dbec:	3021883a 	mov	r16,r6
  14dbf0:	2880202c 	andhi	r2,r5,128
  14dbf4:	103f9f26 	beq	r2,zero,14da74 <__subdf3+0x8c>
  14dbf8:	04c02034 	movhi	r19,128
  14dbfc:	9cffffc4 	addi	r19,r19,-1
  14dc00:	2ce6703a 	and	r19,r5,r19
  14dc04:	98004d26 	beq	r19,zero,14dd3c <__subdf3+0x354>
  14dc08:	9809883a 	mov	r4,r19
  14dc0c:	01421980 	call	142198 <__clzsi2>
  14dc10:	10fffe04 	addi	r3,r2,-8
  14dc14:	010007c4 	movi	r4,31
  14dc18:	20c04e16 	blt	r4,r3,14dd54 <__subdf3+0x36c>
  14dc1c:	01000a04 	movi	r4,40
  14dc20:	2085c83a 	sub	r2,r4,r2
  14dc24:	8084d83a 	srl	r2,r16,r2
  14dc28:	98e6983a 	sll	r19,r19,r3
  14dc2c:	80e0983a 	sll	r16,r16,r3
  14dc30:	14c4b03a 	or	r2,r2,r19
  14dc34:	1c404b16 	blt	r3,r17,14dd64 <__subdf3+0x37c>
  14dc38:	1c63c83a 	sub	r17,r3,r17
  14dc3c:	89400044 	addi	r5,r17,1
  14dc40:	00c007c4 	movi	r3,31
  14dc44:	19406716 	blt	r3,r5,14dde4 <__subdf3+0x3fc>
  14dc48:	1c47c83a 	sub	r3,r3,r17
  14dc4c:	8148d83a 	srl	r4,r16,r5
  14dc50:	80e0983a 	sll	r16,r16,r3
  14dc54:	10c6983a 	sll	r3,r2,r3
  14dc58:	114ad83a 	srl	r5,r2,r5
  14dc5c:	8004c03a 	cmpne	r2,r16,zero
  14dc60:	20e0b03a 	or	r16,r4,r3
  14dc64:	80a0b03a 	or	r16,r16,r2
  14dc68:	0023883a 	mov	r17,zero
  14dc6c:	003f8106 	br	14da74 <__subdf3+0x8c>
  14dc70:	2880202c 	andhi	r2,r5,128
  14dc74:	9240004c 	andi	r9,r18,1
  14dc78:	103f8a1e 	bne	r2,zero,14daa4 <__subdf3+0xbc>
  14dc7c:	2804977a 	slli	r2,r5,29
  14dc80:	8020d0fa 	srli	r16,r16,3
  14dc84:	00c1ffc4 	movi	r3,2047
  14dc88:	280ad0fa 	srli	r5,r5,3
  14dc8c:	1404b03a 	or	r2,r2,r16
  14dc90:	88c0031e 	bne	r17,r3,14dca0 <__subdf3+0x2b8>
  14dc94:	1146b03a 	or	r3,r2,r5
  14dc98:	18003726 	beq	r3,zero,14dd78 <__subdf3+0x390>
  14dc9c:	29400234 	orhi	r5,r5,8
  14dca0:	00c00434 	movhi	r3,16
  14dca4:	18ffffc4 	addi	r3,r3,-1
  14dca8:	28ca703a 	and	r5,r5,r3
  14dcac:	003f8806 	br	14dad0 <__subdf3+0xe8>
  14dcb0:	18ffffc4 	addi	r3,r3,-1
  14dcb4:	1800481e 	bne	r3,zero,14ddd8 <__subdf3+0x3f0>
  14dcb8:	818dc83a 	sub	r6,r16,r6
  14dcbc:	81a1803a 	cmpltu	r16,r16,r6
  14dcc0:	2a0bc83a 	sub	r5,r5,r8
  14dcc4:	2c0bc83a 	sub	r5,r5,r16
  14dcc8:	3021883a 	mov	r16,r6
  14dccc:	003fc806 	br	14dbf0 <__subdf3+0x208>
  14dcd0:	4184b03a 	or	r2,r8,r6
  14dcd4:	103f6726 	beq	r2,zero,14da74 <__subdf3+0x8c>
  14dcd8:	18ffffc4 	addi	r3,r3,-1
  14dcdc:	1800931e 	bne	r3,zero,14df2c <__subdf3+0x544>
  14dce0:	340d883a 	add	r6,r6,r16
  14dce4:	3421803a 	cmpltu	r16,r6,r16
  14dce8:	414b883a 	add	r5,r8,r5
  14dcec:	2c0b883a 	add	r5,r5,r16
  14dcf0:	3021883a 	mov	r16,r6
  14dcf4:	003f9a06 	br	14db60 <__subdf3+0x178>
  14dcf8:	1800531e 	bne	r3,zero,14de48 <__subdf3+0x460>
  14dcfc:	88800044 	addi	r2,r17,1
  14dd00:	1081ffcc 	andi	r2,r2,2047
  14dd04:	00c00044 	movi	r3,1
  14dd08:	1880a00e 	bge	r3,r2,14df8c <__subdf3+0x5a4>
  14dd0c:	8185c83a 	sub	r2,r16,r6
  14dd10:	8087803a 	cmpltu	r3,r16,r2
  14dd14:	2a27c83a 	sub	r19,r5,r8
  14dd18:	98e7c83a 	sub	r19,r19,r3
  14dd1c:	98c0202c 	andhi	r3,r19,128
  14dd20:	18006226 	beq	r3,zero,14deac <__subdf3+0x4c4>
  14dd24:	3421c83a 	sub	r16,r6,r16
  14dd28:	414bc83a 	sub	r5,r8,r5
  14dd2c:	340d803a 	cmpltu	r6,r6,r16
  14dd30:	29a7c83a 	sub	r19,r5,r6
  14dd34:	3825883a 	mov	r18,r7
  14dd38:	983fb31e 	bne	r19,zero,14dc08 <__subdf3+0x220>
  14dd3c:	8009883a 	mov	r4,r16
  14dd40:	01421980 	call	142198 <__clzsi2>
  14dd44:	10800804 	addi	r2,r2,32
  14dd48:	10fffe04 	addi	r3,r2,-8
  14dd4c:	010007c4 	movi	r4,31
  14dd50:	20ffb20e 	bge	r4,r3,14dc1c <__subdf3+0x234>
  14dd54:	10bff604 	addi	r2,r2,-40
  14dd58:	8084983a 	sll	r2,r16,r2
  14dd5c:	0021883a 	mov	r16,zero
  14dd60:	1c7fb50e 	bge	r3,r17,14dc38 <__subdf3+0x250>
  14dd64:	017fe034 	movhi	r5,65408
  14dd68:	297fffc4 	addi	r5,r5,-1
  14dd6c:	88e3c83a 	sub	r17,r17,r3
  14dd70:	114a703a 	and	r5,r2,r5
  14dd74:	003f3f06 	br	14da74 <__subdf3+0x8c>
  14dd78:	000b883a 	mov	r5,zero
  14dd7c:	0005883a 	mov	r2,zero
  14dd80:	003f5306 	br	14dad0 <__subdf3+0xe8>
  14dd84:	418cb03a 	or	r6,r8,r6
  14dd88:	300cc03a 	cmpne	r6,r6,zero
  14dd8c:	0007883a 	mov	r3,zero
  14dd90:	003f9206 	br	14dbdc <__subdf3+0x1f4>
  14dd94:	1800961e 	bne	r3,zero,14dff0 <__subdf3+0x608>
  14dd98:	88800044 	addi	r2,r17,1
  14dd9c:	1101ffcc 	andi	r4,r2,2047
  14dda0:	00c00044 	movi	r3,1
  14dda4:	1900680e 	bge	r3,r4,14df48 <__subdf3+0x560>
  14dda8:	00c1ffc4 	movi	r3,2047
  14ddac:	10c0b626 	beq	r2,r3,14e088 <__subdf3+0x6a0>
  14ddb0:	340d883a 	add	r6,r6,r16
  14ddb4:	3421803a 	cmpltu	r16,r6,r16
  14ddb8:	414b883a 	add	r5,r8,r5
  14ddbc:	2c0b883a 	add	r5,r5,r16
  14ddc0:	282097fa 	slli	r16,r5,31
  14ddc4:	300cd07a 	srli	r6,r6,1
  14ddc8:	280ad07a 	srli	r5,r5,1
  14ddcc:	1023883a 	mov	r17,r2
  14ddd0:	81a0b03a 	or	r16,r16,r6
  14ddd4:	003f2706 	br	14da74 <__subdf3+0x8c>
  14ddd8:	0081ffc4 	movi	r2,2047
  14dddc:	88bf721e 	bne	r17,r2,14dba8 <__subdf3+0x1c0>
  14dde0:	003f2406 	br	14da74 <__subdf3+0x8c>
  14dde4:	893ff844 	addi	r4,r17,-31
  14dde8:	00c00804 	movi	r3,32
  14ddec:	1108d83a 	srl	r4,r2,r4
  14ddf0:	28c05126 	beq	r5,r3,14df38 <__subdf3+0x550>
  14ddf4:	00c00fc4 	movi	r3,63
  14ddf8:	1c63c83a 	sub	r17,r3,r17
  14ddfc:	1444983a 	sll	r2,r2,r17
  14de00:	1420b03a 	or	r16,r2,r16
  14de04:	8020c03a 	cmpne	r16,r16,zero
  14de08:	8120b03a 	or	r16,r16,r4
  14de0c:	000b883a 	mov	r5,zero
  14de10:	0023883a 	mov	r17,zero
  14de14:	003f1706 	br	14da74 <__subdf3+0x8c>
  14de18:	18bff804 	addi	r2,r3,-32
  14de1c:	01000804 	movi	r4,32
  14de20:	4084d83a 	srl	r2,r8,r2
  14de24:	19004626 	beq	r3,r4,14df40 <__subdf3+0x558>
  14de28:	01001004 	movi	r4,64
  14de2c:	20c7c83a 	sub	r3,r4,r3
  14de30:	40d0983a 	sll	r8,r8,r3
  14de34:	418cb03a 	or	r6,r8,r6
  14de38:	300cc03a 	cmpne	r6,r6,zero
  14de3c:	308cb03a 	or	r6,r6,r2
  14de40:	0007883a 	mov	r3,zero
  14de44:	003f6506 	br	14dbdc <__subdf3+0x1f4>
  14de48:	88002b26 	beq	r17,zero,14def8 <__subdf3+0x510>
  14de4c:	0101ffc4 	movi	r4,2047
  14de50:	11002f26 	beq	r2,r4,14df10 <__subdf3+0x528>
  14de54:	00c7c83a 	sub	r3,zero,r3
  14de58:	29402034 	orhi	r5,r5,128
  14de5c:	01000e04 	movi	r4,56
  14de60:	20c08516 	blt	r4,r3,14e078 <__subdf3+0x690>
  14de64:	010007c4 	movi	r4,31
  14de68:	20c0cd16 	blt	r4,r3,14e1a0 <__subdf3+0x7b8>
  14de6c:	01000804 	movi	r4,32
  14de70:	20c9c83a 	sub	r4,r4,r3
  14de74:	2914983a 	sll	r10,r5,r4
  14de78:	80d2d83a 	srl	r9,r16,r3
  14de7c:	8108983a 	sll	r4,r16,r4
  14de80:	28cad83a 	srl	r5,r5,r3
  14de84:	5252b03a 	or	r9,r10,r9
  14de88:	2006c03a 	cmpne	r3,r4,zero
  14de8c:	48e0b03a 	or	r16,r9,r3
  14de90:	3421c83a 	sub	r16,r6,r16
  14de94:	414bc83a 	sub	r5,r8,r5
  14de98:	340d803a 	cmpltu	r6,r6,r16
  14de9c:	298bc83a 	sub	r5,r5,r6
  14dea0:	1023883a 	mov	r17,r2
  14dea4:	3825883a 	mov	r18,r7
  14dea8:	003f5106 	br	14dbf0 <__subdf3+0x208>
  14deac:	9886b03a 	or	r3,r19,r2
  14deb0:	18001c1e 	bne	r3,zero,14df24 <__subdf3+0x53c>
  14deb4:	0013883a 	mov	r9,zero
  14deb8:	000b883a 	mov	r5,zero
  14debc:	0021883a 	mov	r16,zero
  14dec0:	0023883a 	mov	r17,zero
  14dec4:	003f6d06 	br	14dc7c <__subdf3+0x294>
  14dec8:	008007c4 	movi	r2,31
  14decc:	10c03c16 	blt	r2,r3,14dfc0 <__subdf3+0x5d8>
  14ded0:	00800804 	movi	r2,32
  14ded4:	10c5c83a 	sub	r2,r2,r3
  14ded8:	30c8d83a 	srl	r4,r6,r3
  14dedc:	408e983a 	sll	r7,r8,r2
  14dee0:	3084983a 	sll	r2,r6,r2
  14dee4:	40c6d83a 	srl	r3,r8,r3
  14dee8:	3908b03a 	or	r4,r7,r4
  14deec:	1004c03a 	cmpne	r2,r2,zero
  14def0:	208cb03a 	or	r6,r4,r2
  14def4:	003f1506 	br	14db4c <__subdf3+0x164>
  14def8:	2c08b03a 	or	r4,r5,r16
  14defc:	20000426 	beq	r4,zero,14df10 <__subdf3+0x528>
  14df00:	00c6303a 	nor	r3,zero,r3
  14df04:	183fe226 	beq	r3,zero,14de90 <__subdf3+0x4a8>
  14df08:	0101ffc4 	movi	r4,2047
  14df0c:	113fd31e 	bne	r2,r4,14de5c <__subdf3+0x474>
  14df10:	400b883a 	mov	r5,r8
  14df14:	3021883a 	mov	r16,r6
  14df18:	1023883a 	mov	r17,r2
  14df1c:	3825883a 	mov	r18,r7
  14df20:	003ed406 	br	14da74 <__subdf3+0x8c>
  14df24:	1021883a 	mov	r16,r2
  14df28:	003f3606 	br	14dc04 <__subdf3+0x21c>
  14df2c:	0081ffc4 	movi	r2,2047
  14df30:	88bf011e 	bne	r17,r2,14db38 <__subdf3+0x150>
  14df34:	003ecf06 	br	14da74 <__subdf3+0x8c>
  14df38:	0005883a 	mov	r2,zero
  14df3c:	003fb006 	br	14de00 <__subdf3+0x418>
  14df40:	0011883a 	mov	r8,zero
  14df44:	003fbb06 	br	14de34 <__subdf3+0x44c>
  14df48:	2c04b03a 	or	r2,r5,r16
  14df4c:	88007f1e 	bne	r17,zero,14e14c <__subdf3+0x764>
  14df50:	1000a926 	beq	r2,zero,14e1f8 <__subdf3+0x810>
  14df54:	4184b03a 	or	r2,r8,r6
  14df58:	103ec626 	beq	r2,zero,14da74 <__subdf3+0x8c>
  14df5c:	340d883a 	add	r6,r6,r16
  14df60:	414b883a 	add	r5,r8,r5
  14df64:	3421803a 	cmpltu	r16,r6,r16
  14df68:	2c0b883a 	add	r5,r5,r16
  14df6c:	2880202c 	andhi	r2,r5,128
  14df70:	1000bb26 	beq	r2,zero,14e260 <__subdf3+0x878>
  14df74:	00bfe034 	movhi	r2,65408
  14df78:	10bfffc4 	addi	r2,r2,-1
  14df7c:	288a703a 	and	r5,r5,r2
  14df80:	3021883a 	mov	r16,r6
  14df84:	1823883a 	mov	r17,r3
  14df88:	003eba06 	br	14da74 <__subdf3+0x8c>
  14df8c:	2c04b03a 	or	r2,r5,r16
  14df90:	8800311e 	bne	r17,zero,14e058 <__subdf3+0x670>
  14df94:	1000451e 	bne	r2,zero,14e0ac <__subdf3+0x6c4>
  14df98:	4184b03a 	or	r2,r8,r6
  14df9c:	10000426 	beq	r2,zero,14dfb0 <__subdf3+0x5c8>
  14dfa0:	400b883a 	mov	r5,r8
  14dfa4:	3021883a 	mov	r16,r6
  14dfa8:	3825883a 	mov	r18,r7
  14dfac:	003eb106 	br	14da74 <__subdf3+0x8c>
  14dfb0:	0013883a 	mov	r9,zero
  14dfb4:	000b883a 	mov	r5,zero
  14dfb8:	0021883a 	mov	r16,zero
  14dfbc:	003f2f06 	br	14dc7c <__subdf3+0x294>
  14dfc0:	18bff804 	addi	r2,r3,-32
  14dfc4:	01000804 	movi	r4,32
  14dfc8:	4084d83a 	srl	r2,r8,r2
  14dfcc:	19007226 	beq	r3,r4,14e198 <__subdf3+0x7b0>
  14dfd0:	01001004 	movi	r4,64
  14dfd4:	20c7c83a 	sub	r3,r4,r3
  14dfd8:	40d0983a 	sll	r8,r8,r3
  14dfdc:	418cb03a 	or	r6,r8,r6
  14dfe0:	300cc03a 	cmpne	r6,r6,zero
  14dfe4:	308cb03a 	or	r6,r6,r2
  14dfe8:	0007883a 	mov	r3,zero
  14dfec:	003ed706 	br	14db4c <__subdf3+0x164>
  14dff0:	8800291e 	bne	r17,zero,14e098 <__subdf3+0x6b0>
  14dff4:	2c08b03a 	or	r4,r5,r16
  14dff8:	20005026 	beq	r4,zero,14e13c <__subdf3+0x754>
  14dffc:	00c6303a 	nor	r3,zero,r3
  14e000:	18000f26 	beq	r3,zero,14e040 <__subdf3+0x658>
  14e004:	0101ffc4 	movi	r4,2047
  14e008:	11004c26 	beq	r2,r4,14e13c <__subdf3+0x754>
  14e00c:	01000e04 	movi	r4,56
  14e010:	20c07516 	blt	r4,r3,14e1e8 <__subdf3+0x800>
  14e014:	010007c4 	movi	r4,31
  14e018:	20c08316 	blt	r4,r3,14e228 <__subdf3+0x840>
  14e01c:	01000804 	movi	r4,32
  14e020:	20c9c83a 	sub	r4,r4,r3
  14e024:	2914983a 	sll	r10,r5,r4
  14e028:	80ced83a 	srl	r7,r16,r3
  14e02c:	8108983a 	sll	r4,r16,r4
  14e030:	28cad83a 	srl	r5,r5,r3
  14e034:	51ceb03a 	or	r7,r10,r7
  14e038:	2006c03a 	cmpne	r3,r4,zero
  14e03c:	38e0b03a 	or	r16,r7,r3
  14e040:	81a1883a 	add	r16,r16,r6
  14e044:	2a0b883a 	add	r5,r5,r8
  14e048:	818d803a 	cmpltu	r6,r16,r6
  14e04c:	298b883a 	add	r5,r5,r6
  14e050:	1023883a 	mov	r17,r2
  14e054:	003ec206 	br	14db60 <__subdf3+0x178>
  14e058:	1000221e 	bne	r2,zero,14e0e4 <__subdf3+0x6fc>
  14e05c:	4184b03a 	or	r2,r8,r6
  14e060:	10005b26 	beq	r2,zero,14e1d0 <__subdf3+0x7e8>
  14e064:	400b883a 	mov	r5,r8
  14e068:	3021883a 	mov	r16,r6
  14e06c:	3825883a 	mov	r18,r7
  14e070:	0441ffc4 	movi	r17,2047
  14e074:	003e7f06 	br	14da74 <__subdf3+0x8c>
  14e078:	2c20b03a 	or	r16,r5,r16
  14e07c:	8020c03a 	cmpne	r16,r16,zero
  14e080:	000b883a 	mov	r5,zero
  14e084:	003f8206 	br	14de90 <__subdf3+0x4a8>
  14e088:	1023883a 	mov	r17,r2
  14e08c:	000b883a 	mov	r5,zero
  14e090:	0021883a 	mov	r16,zero
  14e094:	003ef906 	br	14dc7c <__subdf3+0x294>
  14e098:	0101ffc4 	movi	r4,2047
  14e09c:	11002726 	beq	r2,r4,14e13c <__subdf3+0x754>
  14e0a0:	00c7c83a 	sub	r3,zero,r3
  14e0a4:	29402034 	orhi	r5,r5,128
  14e0a8:	003fd806 	br	14e00c <__subdf3+0x624>
  14e0ac:	4184b03a 	or	r2,r8,r6
  14e0b0:	103e7026 	beq	r2,zero,14da74 <__subdf3+0x8c>
  14e0b4:	8185c83a 	sub	r2,r16,r6
  14e0b8:	8089803a 	cmpltu	r4,r16,r2
  14e0bc:	2a07c83a 	sub	r3,r5,r8
  14e0c0:	1907c83a 	sub	r3,r3,r4
  14e0c4:	1900202c 	andhi	r4,r3,128
  14e0c8:	20005226 	beq	r4,zero,14e214 <__subdf3+0x82c>
  14e0cc:	3421c83a 	sub	r16,r6,r16
  14e0d0:	414bc83a 	sub	r5,r8,r5
  14e0d4:	340d803a 	cmpltu	r6,r6,r16
  14e0d8:	298bc83a 	sub	r5,r5,r6
  14e0dc:	3825883a 	mov	r18,r7
  14e0e0:	003e6406 	br	14da74 <__subdf3+0x8c>
  14e0e4:	4184b03a 	or	r2,r8,r6
  14e0e8:	10002926 	beq	r2,zero,14e190 <__subdf3+0x7a8>
  14e0ec:	2804d0fa 	srli	r2,r5,3
  14e0f0:	8020d0fa 	srli	r16,r16,3
  14e0f4:	280a977a 	slli	r5,r5,29
  14e0f8:	10c0022c 	andhi	r3,r2,8
  14e0fc:	2c20b03a 	or	r16,r5,r16
  14e100:	18000826 	beq	r3,zero,14e124 <__subdf3+0x73c>
  14e104:	4006d0fa 	srli	r3,r8,3
  14e108:	1900022c 	andhi	r4,r3,8
  14e10c:	2000051e 	bne	r4,zero,14e124 <__subdf3+0x73c>
  14e110:	300cd0fa 	srli	r6,r6,3
  14e114:	4010977a 	slli	r8,r8,29
  14e118:	1805883a 	mov	r2,r3
  14e11c:	3825883a 	mov	r18,r7
  14e120:	41a0b03a 	or	r16,r8,r6
  14e124:	800ad77a 	srli	r5,r16,29
  14e128:	100490fa 	slli	r2,r2,3
  14e12c:	802090fa 	slli	r16,r16,3
  14e130:	0441ffc4 	movi	r17,2047
  14e134:	288ab03a 	or	r5,r5,r2
  14e138:	003e4e06 	br	14da74 <__subdf3+0x8c>
  14e13c:	400b883a 	mov	r5,r8
  14e140:	3021883a 	mov	r16,r6
  14e144:	1023883a 	mov	r17,r2
  14e148:	003e4a06 	br	14da74 <__subdf3+0x8c>
  14e14c:	10002d26 	beq	r2,zero,14e204 <__subdf3+0x81c>
  14e150:	4184b03a 	or	r2,r8,r6
  14e154:	10000e26 	beq	r2,zero,14e190 <__subdf3+0x7a8>
  14e158:	2804d0fa 	srli	r2,r5,3
  14e15c:	8020d0fa 	srli	r16,r16,3
  14e160:	280a977a 	slli	r5,r5,29
  14e164:	10c0022c 	andhi	r3,r2,8
  14e168:	2c20b03a 	or	r16,r5,r16
  14e16c:	183fed26 	beq	r3,zero,14e124 <__subdf3+0x73c>
  14e170:	4006d0fa 	srli	r3,r8,3
  14e174:	1900022c 	andhi	r4,r3,8
  14e178:	203fea1e 	bne	r4,zero,14e124 <__subdf3+0x73c>
  14e17c:	300cd0fa 	srli	r6,r6,3
  14e180:	4010977a 	slli	r8,r8,29
  14e184:	1805883a 	mov	r2,r3
  14e188:	41a0b03a 	or	r16,r8,r6
  14e18c:	003fe506 	br	14e124 <__subdf3+0x73c>
  14e190:	0441ffc4 	movi	r17,2047
  14e194:	003e3706 	br	14da74 <__subdf3+0x8c>
  14e198:	0011883a 	mov	r8,zero
  14e19c:	003f8f06 	br	14dfdc <__subdf3+0x5f4>
  14e1a0:	193ff804 	addi	r4,r3,-32
  14e1a4:	02400804 	movi	r9,32
  14e1a8:	2908d83a 	srl	r4,r5,r4
  14e1ac:	1a402a26 	beq	r3,r9,14e258 <__subdf3+0x870>
  14e1b0:	02401004 	movi	r9,64
  14e1b4:	48c7c83a 	sub	r3,r9,r3
  14e1b8:	28ca983a 	sll	r5,r5,r3
  14e1bc:	2c20b03a 	or	r16,r5,r16
  14e1c0:	8020c03a 	cmpne	r16,r16,zero
  14e1c4:	8120b03a 	or	r16,r16,r4
  14e1c8:	000b883a 	mov	r5,zero
  14e1cc:	003f3006 	br	14de90 <__subdf3+0x4a8>
  14e1d0:	0013883a 	mov	r9,zero
  14e1d4:	01402034 	movhi	r5,128
  14e1d8:	297fffc4 	addi	r5,r5,-1
  14e1dc:	043ffe04 	movi	r16,-8
  14e1e0:	0441ffc4 	movi	r17,2047
  14e1e4:	003ea506 	br	14dc7c <__subdf3+0x294>
  14e1e8:	2c20b03a 	or	r16,r5,r16
  14e1ec:	8020c03a 	cmpne	r16,r16,zero
  14e1f0:	000b883a 	mov	r5,zero
  14e1f4:	003f9206 	br	14e040 <__subdf3+0x658>
  14e1f8:	400b883a 	mov	r5,r8
  14e1fc:	3021883a 	mov	r16,r6
  14e200:	003e1c06 	br	14da74 <__subdf3+0x8c>
  14e204:	400b883a 	mov	r5,r8
  14e208:	3021883a 	mov	r16,r6
  14e20c:	0441ffc4 	movi	r17,2047
  14e210:	003e1806 	br	14da74 <__subdf3+0x8c>
  14e214:	1888b03a 	or	r4,r3,r2
  14e218:	203f6526 	beq	r4,zero,14dfb0 <__subdf3+0x5c8>
  14e21c:	180b883a 	mov	r5,r3
  14e220:	1021883a 	mov	r16,r2
  14e224:	003e1306 	br	14da74 <__subdf3+0x8c>
  14e228:	193ff804 	addi	r4,r3,-32
  14e22c:	01c00804 	movi	r7,32
  14e230:	2908d83a 	srl	r4,r5,r4
  14e234:	19c00c26 	beq	r3,r7,14e268 <__subdf3+0x880>
  14e238:	01c01004 	movi	r7,64
  14e23c:	38c7c83a 	sub	r3,r7,r3
  14e240:	28ca983a 	sll	r5,r5,r3
  14e244:	2c20b03a 	or	r16,r5,r16
  14e248:	8020c03a 	cmpne	r16,r16,zero
  14e24c:	8120b03a 	or	r16,r16,r4
  14e250:	000b883a 	mov	r5,zero
  14e254:	003f7a06 	br	14e040 <__subdf3+0x658>
  14e258:	000b883a 	mov	r5,zero
  14e25c:	003fd706 	br	14e1bc <__subdf3+0x7d4>
  14e260:	3021883a 	mov	r16,r6
  14e264:	003e0306 	br	14da74 <__subdf3+0x8c>
  14e268:	000b883a 	mov	r5,zero
  14e26c:	003ff506 	br	14e244 <__subdf3+0x85c>

0014e270 <__fixdfsi>:
  14e270:	2806d53a 	srli	r3,r5,20
  14e274:	00800434 	movhi	r2,16
  14e278:	10bfffc4 	addi	r2,r2,-1
  14e27c:	0180ff84 	movi	r6,1022
  14e280:	18c1ffcc 	andi	r3,r3,2047
  14e284:	2884703a 	and	r2,r5,r2
  14e288:	280ad7fa 	srli	r5,r5,31
  14e28c:	30c0120e 	bge	r6,r3,14e2d8 <__fixdfsi+0x68>
  14e290:	01810744 	movi	r6,1053
  14e294:	30c00c16 	blt	r6,r3,14e2c8 <__fixdfsi+0x58>
  14e298:	01810cc4 	movi	r6,1075
  14e29c:	30cdc83a 	sub	r6,r6,r3
  14e2a0:	01c007c4 	movi	r7,31
  14e2a4:	10800434 	orhi	r2,r2,16
  14e2a8:	39800d16 	blt	r7,r6,14e2e0 <__fixdfsi+0x70>
  14e2ac:	18fefb44 	addi	r3,r3,-1043
  14e2b0:	2188d83a 	srl	r4,r4,r6
  14e2b4:	10c4983a 	sll	r2,r2,r3
  14e2b8:	2084b03a 	or	r2,r4,r2
  14e2bc:	28000726 	beq	r5,zero,14e2dc <__fixdfsi+0x6c>
  14e2c0:	0085c83a 	sub	r2,zero,r2
  14e2c4:	f800283a 	ret
  14e2c8:	00a00034 	movhi	r2,32768
  14e2cc:	10bfffc4 	addi	r2,r2,-1
  14e2d0:	2885883a 	add	r2,r5,r2
  14e2d4:	f800283a 	ret
  14e2d8:	0005883a 	mov	r2,zero
  14e2dc:	f800283a 	ret
  14e2e0:	010104c4 	movi	r4,1043
  14e2e4:	20c7c83a 	sub	r3,r4,r3
  14e2e8:	10c4d83a 	srl	r2,r2,r3
  14e2ec:	003ff306 	br	14e2bc <__fixdfsi+0x4c>

0014e2f0 <__floatsidf>:
  14e2f0:	defffd04 	addi	sp,sp,-12
  14e2f4:	dc000015 	stw	r16,0(sp)
  14e2f8:	dfc00215 	stw	ra,8(sp)
  14e2fc:	dc400115 	stw	r17,4(sp)
  14e300:	2021883a 	mov	r16,r4
  14e304:	20002926 	beq	r4,zero,14e3ac <__floatsidf+0xbc>
  14e308:	2022d7fa 	srli	r17,r4,31
  14e30c:	88000126 	beq	r17,zero,14e314 <__floatsidf+0x24>
  14e310:	0121c83a 	sub	r16,zero,r4
  14e314:	8009883a 	mov	r4,r16
  14e318:	01421980 	call	142198 <__clzsi2>
  14e31c:	01810784 	movi	r6,1054
  14e320:	00c00284 	movi	r3,10
  14e324:	308dc83a 	sub	r6,r6,r2
  14e328:	1880150e 	bge	r3,r2,14e380 <__floatsidf+0x90>
  14e32c:	113ffd44 	addi	r4,r2,-11
  14e330:	8108983a 	sll	r4,r16,r4
  14e334:	00800434 	movhi	r2,16
  14e338:	10bfffc4 	addi	r2,r2,-1
  14e33c:	3181ffcc 	andi	r6,r6,2047
  14e340:	2088703a 	and	r4,r4,r2
  14e344:	880b883a 	mov	r5,r17
  14e348:	0005883a 	mov	r2,zero
  14e34c:	300c953a 	slli	r6,r6,20
  14e350:	29403fcc 	andi	r5,r5,255
  14e354:	280a97fa 	slli	r5,r5,31
  14e358:	00c00434 	movhi	r3,16
  14e35c:	18ffffc4 	addi	r3,r3,-1
  14e360:	20c8703a 	and	r4,r4,r3
  14e364:	2186b03a 	or	r3,r4,r6
  14e368:	1946b03a 	or	r3,r3,r5
  14e36c:	dfc00217 	ldw	ra,8(sp)
  14e370:	dc400117 	ldw	r17,4(sp)
  14e374:	dc000017 	ldw	r16,0(sp)
  14e378:	dec00304 	addi	sp,sp,12
  14e37c:	f800283a 	ret
  14e380:	010002c4 	movi	r4,11
  14e384:	2089c83a 	sub	r4,r4,r2
  14e388:	8108d83a 	srl	r4,r16,r4
  14e38c:	10800544 	addi	r2,r2,21
  14e390:	00c00434 	movhi	r3,16
  14e394:	18ffffc4 	addi	r3,r3,-1
  14e398:	8084983a 	sll	r2,r16,r2
  14e39c:	20c8703a 	and	r4,r4,r3
  14e3a0:	3181ffcc 	andi	r6,r6,2047
  14e3a4:	880b883a 	mov	r5,r17
  14e3a8:	003fe806 	br	14e34c <__floatsidf+0x5c>
  14e3ac:	000b883a 	mov	r5,zero
  14e3b0:	000d883a 	mov	r6,zero
  14e3b4:	0009883a 	mov	r4,zero
  14e3b8:	0005883a 	mov	r2,zero
  14e3bc:	003fe306 	br	14e34c <__floatsidf+0x5c>

0014e3c0 <__floatunsidf>:
  14e3c0:	defffe04 	addi	sp,sp,-8
  14e3c4:	dc000015 	stw	r16,0(sp)
  14e3c8:	dfc00115 	stw	ra,4(sp)
  14e3cc:	2021883a 	mov	r16,r4
  14e3d0:	20001f26 	beq	r4,zero,14e450 <__floatunsidf+0x90>
  14e3d4:	01421980 	call	142198 <__clzsi2>
  14e3d8:	01010784 	movi	r4,1054
  14e3dc:	00c00284 	movi	r3,10
  14e3e0:	2089c83a 	sub	r4,r4,r2
  14e3e4:	1880100e 	bge	r3,r2,14e428 <__floatunsidf+0x68>
  14e3e8:	117ffd44 	addi	r5,r2,-11
  14e3ec:	814a983a 	sll	r5,r16,r5
  14e3f0:	00800434 	movhi	r2,16
  14e3f4:	10bfffc4 	addi	r2,r2,-1
  14e3f8:	2101ffcc 	andi	r4,r4,2047
  14e3fc:	288a703a 	and	r5,r5,r2
  14e400:	0005883a 	mov	r2,zero
  14e404:	2008953a 	slli	r4,r4,20
  14e408:	00c00434 	movhi	r3,16
  14e40c:	18ffffc4 	addi	r3,r3,-1
  14e410:	28c6703a 	and	r3,r5,r3
  14e414:	1906b03a 	or	r3,r3,r4
  14e418:	dfc00117 	ldw	ra,4(sp)
  14e41c:	dc000017 	ldw	r16,0(sp)
  14e420:	dec00204 	addi	sp,sp,8
  14e424:	f800283a 	ret
  14e428:	014002c4 	movi	r5,11
  14e42c:	288bc83a 	sub	r5,r5,r2
  14e430:	814ad83a 	srl	r5,r16,r5
  14e434:	10800544 	addi	r2,r2,21
  14e438:	00c00434 	movhi	r3,16
  14e43c:	18ffffc4 	addi	r3,r3,-1
  14e440:	8084983a 	sll	r2,r16,r2
  14e444:	28ca703a 	and	r5,r5,r3
  14e448:	2101ffcc 	andi	r4,r4,2047
  14e44c:	003fed06 	br	14e404 <__floatunsidf+0x44>
  14e450:	0009883a 	mov	r4,zero
  14e454:	000b883a 	mov	r5,zero
  14e458:	0005883a 	mov	r2,zero
  14e45c:	003fe906 	br	14e404 <__floatunsidf+0x44>

0014e460 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14e460:	defffe04 	addi	sp,sp,-8
  14e464:	dfc00115 	stw	ra,4(sp)
  14e468:	df000015 	stw	fp,0(sp)
  14e46c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14e470:	00800574 	movhi	r2,21
  14e474:	108bb504 	addi	r2,r2,11988
  14e478:	10800017 	ldw	r2,0(r2)
  14e47c:	10000526 	beq	r2,zero,14e494 <alt_get_errno+0x34>
  14e480:	00800574 	movhi	r2,21
  14e484:	108bb504 	addi	r2,r2,11988
  14e488:	10800017 	ldw	r2,0(r2)
  14e48c:	103ee83a 	callr	r2
  14e490:	00000206 	br	14e49c <alt_get_errno+0x3c>
  14e494:	00800574 	movhi	r2,21
  14e498:	108bc004 	addi	r2,r2,12032
}
  14e49c:	e037883a 	mov	sp,fp
  14e4a0:	dfc00117 	ldw	ra,4(sp)
  14e4a4:	df000017 	ldw	fp,0(sp)
  14e4a8:	dec00204 	addi	sp,sp,8
  14e4ac:	f800283a 	ret

0014e4b0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  14e4b0:	defffb04 	addi	sp,sp,-20
  14e4b4:	dfc00415 	stw	ra,16(sp)
  14e4b8:	df000315 	stw	fp,12(sp)
  14e4bc:	df000304 	addi	fp,sp,12
  14e4c0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  14e4c4:	e0bfff17 	ldw	r2,-4(fp)
  14e4c8:	10000616 	blt	r2,zero,14e4e4 <close+0x34>
  14e4cc:	e0bfff17 	ldw	r2,-4(fp)
  14e4d0:	10c00324 	muli	r3,r2,12
  14e4d4:	00800574 	movhi	r2,21
  14e4d8:	10873204 	addi	r2,r2,7368
  14e4dc:	1885883a 	add	r2,r3,r2
  14e4e0:	00000106 	br	14e4e8 <close+0x38>
  14e4e4:	0005883a 	mov	r2,zero
  14e4e8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  14e4ec:	e0bffd17 	ldw	r2,-12(fp)
  14e4f0:	10001826 	beq	r2,zero,14e554 <close+0xa4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  14e4f4:	e0bffd17 	ldw	r2,-12(fp)
  14e4f8:	10800017 	ldw	r2,0(r2)
  14e4fc:	10800417 	ldw	r2,16(r2)
  14e500:	10000626 	beq	r2,zero,14e51c <close+0x6c>
  14e504:	e0bffd17 	ldw	r2,-12(fp)
  14e508:	10800017 	ldw	r2,0(r2)
  14e50c:	10800417 	ldw	r2,16(r2)
  14e510:	e13ffd17 	ldw	r4,-12(fp)
  14e514:	103ee83a 	callr	r2
  14e518:	00000106 	br	14e520 <close+0x70>
  14e51c:	0005883a 	mov	r2,zero
  14e520:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  14e524:	e13fff17 	ldw	r4,-4(fp)
  14e528:	014eaa80 	call	14eaa8 <alt_release_fd>
    if (rval < 0)
  14e52c:	e0bffe17 	ldw	r2,-8(fp)
  14e530:	1000060e 	bge	r2,zero,14e54c <close+0x9c>
    {
      ALT_ERRNO = -rval;
  14e534:	014e4600 	call	14e460 <alt_get_errno>
  14e538:	e0fffe17 	ldw	r3,-8(fp)
  14e53c:	00c7c83a 	sub	r3,zero,r3
  14e540:	10c00015 	stw	r3,0(r2)
      return -1;
  14e544:	00bfffc4 	movi	r2,-1
  14e548:	00000606 	br	14e564 <close+0xb4>
    }
    return 0;
  14e54c:	0005883a 	mov	r2,zero
  14e550:	00000406 	br	14e564 <close+0xb4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  14e554:	014e4600 	call	14e460 <alt_get_errno>
  14e558:	00c01444 	movi	r3,81
  14e55c:	10c00015 	stw	r3,0(r2)
    return -1;
  14e560:	00bfffc4 	movi	r2,-1
  }
}
  14e564:	e037883a 	mov	sp,fp
  14e568:	dfc00117 	ldw	ra,4(sp)
  14e56c:	df000017 	ldw	fp,0(sp)
  14e570:	dec00204 	addi	sp,sp,8
  14e574:	f800283a 	ret

0014e578 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  14e578:	defffc04 	addi	sp,sp,-16
  14e57c:	df000315 	stw	fp,12(sp)
  14e580:	df000304 	addi	fp,sp,12
  14e584:	e13ffd15 	stw	r4,-12(fp)
  14e588:	e17ffe15 	stw	r5,-8(fp)
  14e58c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  14e590:	e0bfff17 	ldw	r2,-4(fp)
}
  14e594:	e037883a 	mov	sp,fp
  14e598:	df000017 	ldw	fp,0(sp)
  14e59c:	dec00104 	addi	sp,sp,4
  14e5a0:	f800283a 	ret

0014e5a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14e5a4:	defffe04 	addi	sp,sp,-8
  14e5a8:	dfc00115 	stw	ra,4(sp)
  14e5ac:	df000015 	stw	fp,0(sp)
  14e5b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14e5b4:	00800574 	movhi	r2,21
  14e5b8:	108bb504 	addi	r2,r2,11988
  14e5bc:	10800017 	ldw	r2,0(r2)
  14e5c0:	10000526 	beq	r2,zero,14e5d8 <alt_get_errno+0x34>
  14e5c4:	00800574 	movhi	r2,21
  14e5c8:	108bb504 	addi	r2,r2,11988
  14e5cc:	10800017 	ldw	r2,0(r2)
  14e5d0:	103ee83a 	callr	r2
  14e5d4:	00000206 	br	14e5e0 <alt_get_errno+0x3c>
  14e5d8:	00800574 	movhi	r2,21
  14e5dc:	108bc004 	addi	r2,r2,12032
}
  14e5e0:	e037883a 	mov	sp,fp
  14e5e4:	dfc00117 	ldw	ra,4(sp)
  14e5e8:	df000017 	ldw	fp,0(sp)
  14e5ec:	dec00204 	addi	sp,sp,8
  14e5f0:	f800283a 	ret

0014e5f4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  14e5f4:	defffb04 	addi	sp,sp,-20
  14e5f8:	dfc00415 	stw	ra,16(sp)
  14e5fc:	df000315 	stw	fp,12(sp)
  14e600:	df000304 	addi	fp,sp,12
  14e604:	e13ffe15 	stw	r4,-8(fp)
  14e608:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  14e60c:	e0bffe17 	ldw	r2,-8(fp)
  14e610:	10000616 	blt	r2,zero,14e62c <fstat+0x38>
  14e614:	e0bffe17 	ldw	r2,-8(fp)
  14e618:	10c00324 	muli	r3,r2,12
  14e61c:	00800574 	movhi	r2,21
  14e620:	10873204 	addi	r2,r2,7368
  14e624:	1885883a 	add	r2,r3,r2
  14e628:	00000106 	br	14e630 <fstat+0x3c>
  14e62c:	0005883a 	mov	r2,zero
  14e630:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  14e634:	e0bffd17 	ldw	r2,-12(fp)
  14e638:	10001026 	beq	r2,zero,14e67c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  14e63c:	e0bffd17 	ldw	r2,-12(fp)
  14e640:	10800017 	ldw	r2,0(r2)
  14e644:	10800817 	ldw	r2,32(r2)
  14e648:	10000726 	beq	r2,zero,14e668 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  14e64c:	e0bffd17 	ldw	r2,-12(fp)
  14e650:	10800017 	ldw	r2,0(r2)
  14e654:	10800817 	ldw	r2,32(r2)
  14e658:	e13ffd17 	ldw	r4,-12(fp)
  14e65c:	e17fff17 	ldw	r5,-4(fp)
  14e660:	103ee83a 	callr	r2
  14e664:	00000906 	br	14e68c <fstat+0x98>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  14e668:	e0bfff17 	ldw	r2,-4(fp)
  14e66c:	00c80004 	movi	r3,8192
  14e670:	10c00115 	stw	r3,4(r2)
      return 0;
  14e674:	0005883a 	mov	r2,zero
  14e678:	00000406 	br	14e68c <fstat+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  14e67c:	014e5a40 	call	14e5a4 <alt_get_errno>
  14e680:	00c01444 	movi	r3,81
  14e684:	10c00015 	stw	r3,0(r2)
    return -1;
  14e688:	00bfffc4 	movi	r2,-1
  }
}
  14e68c:	e037883a 	mov	sp,fp
  14e690:	dfc00117 	ldw	ra,4(sp)
  14e694:	df000017 	ldw	fp,0(sp)
  14e698:	dec00204 	addi	sp,sp,8
  14e69c:	f800283a 	ret

0014e6a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14e6a0:	defffe04 	addi	sp,sp,-8
  14e6a4:	dfc00115 	stw	ra,4(sp)
  14e6a8:	df000015 	stw	fp,0(sp)
  14e6ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14e6b0:	00800574 	movhi	r2,21
  14e6b4:	108bb504 	addi	r2,r2,11988
  14e6b8:	10800017 	ldw	r2,0(r2)
  14e6bc:	10000526 	beq	r2,zero,14e6d4 <alt_get_errno+0x34>
  14e6c0:	00800574 	movhi	r2,21
  14e6c4:	108bb504 	addi	r2,r2,11988
  14e6c8:	10800017 	ldw	r2,0(r2)
  14e6cc:	103ee83a 	callr	r2
  14e6d0:	00000206 	br	14e6dc <alt_get_errno+0x3c>
  14e6d4:	00800574 	movhi	r2,21
  14e6d8:	108bc004 	addi	r2,r2,12032
}
  14e6dc:	e037883a 	mov	sp,fp
  14e6e0:	dfc00117 	ldw	ra,4(sp)
  14e6e4:	df000017 	ldw	fp,0(sp)
  14e6e8:	dec00204 	addi	sp,sp,8
  14e6ec:	f800283a 	ret

0014e6f0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  14e6f0:	deffed04 	addi	sp,sp,-76
  14e6f4:	dfc01215 	stw	ra,72(sp)
  14e6f8:	df001115 	stw	fp,68(sp)
  14e6fc:	df001104 	addi	fp,sp,68
  14e700:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  14e704:	e0bfff17 	ldw	r2,-4(fp)
  14e708:	10000616 	blt	r2,zero,14e724 <isatty+0x34>
  14e70c:	e0bfff17 	ldw	r2,-4(fp)
  14e710:	10c00324 	muli	r3,r2,12
  14e714:	00800574 	movhi	r2,21
  14e718:	10873204 	addi	r2,r2,7368
  14e71c:	1885883a 	add	r2,r3,r2
  14e720:	00000106 	br	14e728 <isatty+0x38>
  14e724:	0005883a 	mov	r2,zero
  14e728:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  14e72c:	e0bfef17 	ldw	r2,-68(fp)
  14e730:	10000e26 	beq	r2,zero,14e76c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  14e734:	e0bfef17 	ldw	r2,-68(fp)
  14e738:	10800017 	ldw	r2,0(r2)
  14e73c:	10800817 	ldw	r2,32(r2)
  14e740:	1000021e 	bne	r2,zero,14e74c <isatty+0x5c>
    {
      return 1;
  14e744:	00800044 	movi	r2,1
  14e748:	00000c06 	br	14e77c <isatty+0x8c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  14e74c:	e0bff004 	addi	r2,fp,-64
  14e750:	e13fff17 	ldw	r4,-4(fp)
  14e754:	100b883a 	mov	r5,r2
  14e758:	014e5f40 	call	14e5f4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  14e75c:	e0bff117 	ldw	r2,-60(fp)
  14e760:	10880020 	cmpeqi	r2,r2,8192
  14e764:	10803fcc 	andi	r2,r2,255
  14e768:	00000406 	br	14e77c <isatty+0x8c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  14e76c:	014e6a00 	call	14e6a0 <alt_get_errno>
  14e770:	00c01444 	movi	r3,81
  14e774:	10c00015 	stw	r3,0(r2)
    return 0;
  14e778:	0005883a 	mov	r2,zero
  }
}
  14e77c:	e037883a 	mov	sp,fp
  14e780:	dfc00117 	ldw	ra,4(sp)
  14e784:	df000017 	ldw	fp,0(sp)
  14e788:	dec00204 	addi	sp,sp,8
  14e78c:	f800283a 	ret

0014e790 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14e790:	defffe04 	addi	sp,sp,-8
  14e794:	dfc00115 	stw	ra,4(sp)
  14e798:	df000015 	stw	fp,0(sp)
  14e79c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14e7a0:	00800574 	movhi	r2,21
  14e7a4:	108bb504 	addi	r2,r2,11988
  14e7a8:	10800017 	ldw	r2,0(r2)
  14e7ac:	10000526 	beq	r2,zero,14e7c4 <alt_get_errno+0x34>
  14e7b0:	00800574 	movhi	r2,21
  14e7b4:	108bb504 	addi	r2,r2,11988
  14e7b8:	10800017 	ldw	r2,0(r2)
  14e7bc:	103ee83a 	callr	r2
  14e7c0:	00000206 	br	14e7cc <alt_get_errno+0x3c>
  14e7c4:	00800574 	movhi	r2,21
  14e7c8:	108bc004 	addi	r2,r2,12032
}
  14e7cc:	e037883a 	mov	sp,fp
  14e7d0:	dfc00117 	ldw	ra,4(sp)
  14e7d4:	df000017 	ldw	fp,0(sp)
  14e7d8:	dec00204 	addi	sp,sp,8
  14e7dc:	f800283a 	ret

0014e7e0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  14e7e0:	defff904 	addi	sp,sp,-28
  14e7e4:	dfc00615 	stw	ra,24(sp)
  14e7e8:	df000515 	stw	fp,20(sp)
  14e7ec:	df000504 	addi	fp,sp,20
  14e7f0:	e13ffd15 	stw	r4,-12(fp)
  14e7f4:	e17ffe15 	stw	r5,-8(fp)
  14e7f8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  14e7fc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  14e800:	e0bffd17 	ldw	r2,-12(fp)
  14e804:	10000616 	blt	r2,zero,14e820 <lseek+0x40>
  14e808:	e0bffd17 	ldw	r2,-12(fp)
  14e80c:	10c00324 	muli	r3,r2,12
  14e810:	00800574 	movhi	r2,21
  14e814:	10873204 	addi	r2,r2,7368
  14e818:	1885883a 	add	r2,r3,r2
  14e81c:	00000106 	br	14e824 <lseek+0x44>
  14e820:	0005883a 	mov	r2,zero
  14e824:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  14e828:	e0bffc17 	ldw	r2,-16(fp)
  14e82c:	10001026 	beq	r2,zero,14e870 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  14e830:	e0bffc17 	ldw	r2,-16(fp)
  14e834:	10800017 	ldw	r2,0(r2)
  14e838:	10800717 	ldw	r2,28(r2)
  14e83c:	10000926 	beq	r2,zero,14e864 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  14e840:	e0bffc17 	ldw	r2,-16(fp)
  14e844:	10800017 	ldw	r2,0(r2)
  14e848:	10800717 	ldw	r2,28(r2)
  14e84c:	e13ffc17 	ldw	r4,-16(fp)
  14e850:	e17ffe17 	ldw	r5,-8(fp)
  14e854:	e1bfff17 	ldw	r6,-4(fp)
  14e858:	103ee83a 	callr	r2
  14e85c:	e0bffb15 	stw	r2,-20(fp)
  14e860:	00000506 	br	14e878 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  14e864:	00bfde84 	movi	r2,-134
  14e868:	e0bffb15 	stw	r2,-20(fp)
  14e86c:	00000206 	br	14e878 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  14e870:	00bfebc4 	movi	r2,-81
  14e874:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  14e878:	e0bffb17 	ldw	r2,-20(fp)
  14e87c:	1000060e 	bge	r2,zero,14e898 <lseek+0xb8>
  {
    ALT_ERRNO = -rc;
  14e880:	014e7900 	call	14e790 <alt_get_errno>
  14e884:	e0fffb17 	ldw	r3,-20(fp)
  14e888:	00c7c83a 	sub	r3,zero,r3
  14e88c:	10c00015 	stw	r3,0(r2)
    rc = -1;
  14e890:	00bfffc4 	movi	r2,-1
  14e894:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  14e898:	e0bffb17 	ldw	r2,-20(fp)
}
  14e89c:	e037883a 	mov	sp,fp
  14e8a0:	dfc00117 	ldw	ra,4(sp)
  14e8a4:	df000017 	ldw	fp,0(sp)
  14e8a8:	dec00204 	addi	sp,sp,8
  14e8ac:	f800283a 	ret

0014e8b0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  14e8b0:	defffd04 	addi	sp,sp,-12
  14e8b4:	dfc00215 	stw	ra,8(sp)
  14e8b8:	df000115 	stw	fp,4(sp)
  14e8bc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  14e8c0:	0009883a 	mov	r4,zero
  14e8c4:	014ed2c0 	call	14ed2c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  14e8c8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  14e8cc:	014ed600 	call	14ed60 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  14e8d0:	01000574 	movhi	r4,21
  14e8d4:	2104b704 	addi	r4,r4,4828
  14e8d8:	01400574 	movhi	r5,21
  14e8dc:	2944b704 	addi	r5,r5,4828
  14e8e0:	01800574 	movhi	r6,21
  14e8e4:	3184b704 	addi	r6,r6,4828
  14e8e8:	01502140 	call	150214 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  14e8ec:	014fdd40 	call	14fdd4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  14e8f0:	01000574 	movhi	r4,21
  14e8f4:	213f8c04 	addi	r4,r4,-464
  14e8f8:	0150a900 	call	150a90 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  14e8fc:	d1201717 	ldw	r4,-32676(gp)
  14e900:	d0e01817 	ldw	r3,-32672(gp)
  14e904:	d0a01917 	ldw	r2,-32668(gp)
  14e908:	180b883a 	mov	r5,r3
  14e90c:	100d883a 	mov	r6,r2
  14e910:	0140c580 	call	140c58 <main>
  14e914:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  14e918:	01000044 	movi	r4,1
  14e91c:	014e4b00 	call	14e4b0 <close>
  exit (result);
  14e920:	e13fff17 	ldw	r4,-4(fp)
  14e924:	0150aa40 	call	150aa4 <exit>

0014e928 <__malloc_lock>:
  14e928:	defffe04 	addi	sp,sp,-8
  14e92c:	df000115 	stw	fp,4(sp)
  14e930:	df000104 	addi	fp,sp,4
  14e934:	e13fff15 	stw	r4,-4(fp)
  14e938:	e037883a 	mov	sp,fp
  14e93c:	df000017 	ldw	fp,0(sp)
  14e940:	dec00104 	addi	sp,sp,4
  14e944:	f800283a 	ret

0014e948 <__malloc_unlock>:
  14e948:	defffe04 	addi	sp,sp,-8
  14e94c:	df000115 	stw	fp,4(sp)
  14e950:	df000104 	addi	fp,sp,4
  14e954:	e13fff15 	stw	r4,-4(fp)
  14e958:	e037883a 	mov	sp,fp
  14e95c:	df000017 	ldw	fp,0(sp)
  14e960:	dec00104 	addi	sp,sp,4
  14e964:	f800283a 	ret

0014e968 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14e968:	defffe04 	addi	sp,sp,-8
  14e96c:	dfc00115 	stw	ra,4(sp)
  14e970:	df000015 	stw	fp,0(sp)
  14e974:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14e978:	00800574 	movhi	r2,21
  14e97c:	108bb504 	addi	r2,r2,11988
  14e980:	10800017 	ldw	r2,0(r2)
  14e984:	10000526 	beq	r2,zero,14e99c <alt_get_errno+0x34>
  14e988:	00800574 	movhi	r2,21
  14e98c:	108bb504 	addi	r2,r2,11988
  14e990:	10800017 	ldw	r2,0(r2)
  14e994:	103ee83a 	callr	r2
  14e998:	00000206 	br	14e9a4 <alt_get_errno+0x3c>
  14e99c:	00800574 	movhi	r2,21
  14e9a0:	108bc004 	addi	r2,r2,12032
}
  14e9a4:	e037883a 	mov	sp,fp
  14e9a8:	dfc00117 	ldw	ra,4(sp)
  14e9ac:	df000017 	ldw	fp,0(sp)
  14e9b0:	dec00204 	addi	sp,sp,8
  14e9b4:	f800283a 	ret

0014e9b8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  14e9b8:	defff904 	addi	sp,sp,-28
  14e9bc:	dfc00615 	stw	ra,24(sp)
  14e9c0:	df000515 	stw	fp,20(sp)
  14e9c4:	df000504 	addi	fp,sp,20
  14e9c8:	e13ffd15 	stw	r4,-12(fp)
  14e9cc:	e17ffe15 	stw	r5,-8(fp)
  14e9d0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  14e9d4:	e0bffd17 	ldw	r2,-12(fp)
  14e9d8:	10000616 	blt	r2,zero,14e9f4 <read+0x3c>
  14e9dc:	e0bffd17 	ldw	r2,-12(fp)
  14e9e0:	10c00324 	muli	r3,r2,12
  14e9e4:	00800574 	movhi	r2,21
  14e9e8:	10873204 	addi	r2,r2,7368
  14e9ec:	1885883a 	add	r2,r3,r2
  14e9f0:	00000106 	br	14e9f8 <read+0x40>
  14e9f4:	0005883a 	mov	r2,zero
  14e9f8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  14e9fc:	e0bffb17 	ldw	r2,-20(fp)
  14ea00:	10002026 	beq	r2,zero,14ea84 <read+0xcc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  14ea04:	e0bffb17 	ldw	r2,-20(fp)
  14ea08:	10800217 	ldw	r2,8(r2)
  14ea0c:	108000cc 	andi	r2,r2,3
  14ea10:	10800060 	cmpeqi	r2,r2,1
  14ea14:	1000171e 	bne	r2,zero,14ea74 <read+0xbc>
        (fd->dev->read))
  14ea18:	e0bffb17 	ldw	r2,-20(fp)
  14ea1c:	10800017 	ldw	r2,0(r2)
  14ea20:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  14ea24:	10001326 	beq	r2,zero,14ea74 <read+0xbc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  14ea28:	e0bffb17 	ldw	r2,-20(fp)
  14ea2c:	10800017 	ldw	r2,0(r2)
  14ea30:	10800517 	ldw	r2,20(r2)
  14ea34:	e0ffff17 	ldw	r3,-4(fp)
  14ea38:	e13ffb17 	ldw	r4,-20(fp)
  14ea3c:	e17ffe17 	ldw	r5,-8(fp)
  14ea40:	180d883a 	mov	r6,r3
  14ea44:	103ee83a 	callr	r2
  14ea48:	e0bffc15 	stw	r2,-16(fp)
  14ea4c:	e0bffc17 	ldw	r2,-16(fp)
  14ea50:	1000060e 	bge	r2,zero,14ea6c <read+0xb4>
        {
          ALT_ERRNO = -rval;
  14ea54:	014e9680 	call	14e968 <alt_get_errno>
  14ea58:	e0fffc17 	ldw	r3,-16(fp)
  14ea5c:	00c7c83a 	sub	r3,zero,r3
  14ea60:	10c00015 	stw	r3,0(r2)
          return -1;
  14ea64:	00bfffc4 	movi	r2,-1
  14ea68:	00000a06 	br	14ea94 <read+0xdc>
        }
        return rval;
  14ea6c:	e0bffc17 	ldw	r2,-16(fp)
  14ea70:	00000806 	br	14ea94 <read+0xdc>
      }
      else
      {
        ALT_ERRNO = EACCES;
  14ea74:	014e9680 	call	14e968 <alt_get_errno>
  14ea78:	00c00344 	movi	r3,13
  14ea7c:	10c00015 	stw	r3,0(r2)
  14ea80:	00000306 	br	14ea90 <read+0xd8>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  14ea84:	014e9680 	call	14e968 <alt_get_errno>
  14ea88:	00c01444 	movi	r3,81
  14ea8c:	10c00015 	stw	r3,0(r2)
  }
  return -1;
  14ea90:	00bfffc4 	movi	r2,-1
}
  14ea94:	e037883a 	mov	sp,fp
  14ea98:	dfc00117 	ldw	ra,4(sp)
  14ea9c:	df000017 	ldw	fp,0(sp)
  14eaa0:	dec00204 	addi	sp,sp,8
  14eaa4:	f800283a 	ret

0014eaa8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  14eaa8:	defffe04 	addi	sp,sp,-8
  14eaac:	df000115 	stw	fp,4(sp)
  14eab0:	df000104 	addi	fp,sp,4
  14eab4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  14eab8:	e0bfff17 	ldw	r2,-4(fp)
  14eabc:	108000d0 	cmplti	r2,r2,3
  14eac0:	10000d1e 	bne	r2,zero,14eaf8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  14eac4:	00c00574 	movhi	r3,21
  14eac8:	18c73204 	addi	r3,r3,7368
  14eacc:	e0bfff17 	ldw	r2,-4(fp)
  14ead0:	10800324 	muli	r2,r2,12
  14ead4:	1885883a 	add	r2,r3,r2
  14ead8:	10800204 	addi	r2,r2,8
  14eadc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  14eae0:	00c00574 	movhi	r3,21
  14eae4:	18c73204 	addi	r3,r3,7368
  14eae8:	e0bfff17 	ldw	r2,-4(fp)
  14eaec:	10800324 	muli	r2,r2,12
  14eaf0:	1885883a 	add	r2,r3,r2
  14eaf4:	10000015 	stw	zero,0(r2)
  }
}
  14eaf8:	e037883a 	mov	sp,fp
  14eafc:	df000017 	ldw	fp,0(sp)
  14eb00:	dec00104 	addi	sp,sp,4
  14eb04:	f800283a 	ret

0014eb08 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  14eb08:	defff904 	addi	sp,sp,-28
  14eb0c:	df000615 	stw	fp,24(sp)
  14eb10:	df000604 	addi	fp,sp,24
  14eb14:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14eb18:	0005303a 	rdctl	r2,status
  14eb1c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14eb20:	e0fffc17 	ldw	r3,-16(fp)
  14eb24:	00bfff84 	movi	r2,-2
  14eb28:	1884703a 	and	r2,r3,r2
  14eb2c:	1001703a 	wrctl	status,r2
  
  return context;
  14eb30:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  14eb34:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  14eb38:	d0a00c17 	ldw	r2,-32720(gp)
  14eb3c:	10c000c4 	addi	r3,r2,3
  14eb40:	00bfff04 	movi	r2,-4
  14eb44:	1884703a 	and	r2,r3,r2
  14eb48:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  14eb4c:	d0e00c17 	ldw	r3,-32720(gp)
  14eb50:	e0bfff17 	ldw	r2,-4(fp)
  14eb54:	1885883a 	add	r2,r3,r2
  14eb58:	00c00634 	movhi	r3,24
  14eb5c:	18c00004 	addi	r3,r3,0
  14eb60:	1880062e 	bgeu	r3,r2,14eb7c <sbrk+0x74>
  14eb64:	e0bffa17 	ldw	r2,-24(fp)
  14eb68:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14eb6c:	e0bffd17 	ldw	r2,-12(fp)
  14eb70:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  14eb74:	00bfffc4 	movi	r2,-1
  14eb78:	00000b06 	br	14eba8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  14eb7c:	d0a00c17 	ldw	r2,-32720(gp)
  14eb80:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
  14eb84:	d0e00c17 	ldw	r3,-32720(gp)
  14eb88:	e0bfff17 	ldw	r2,-4(fp)
  14eb8c:	1885883a 	add	r2,r3,r2
  14eb90:	d0a00c15 	stw	r2,-32720(gp)
  14eb94:	e0bffa17 	ldw	r2,-24(fp)
  14eb98:	e0bffe15 	stw	r2,-8(fp)
  14eb9c:	e0bffe17 	ldw	r2,-8(fp)
  14eba0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  14eba4:	e0bffb17 	ldw	r2,-20(fp)
} 
  14eba8:	e037883a 	mov	sp,fp
  14ebac:	df000017 	ldw	fp,0(sp)
  14ebb0:	dec00104 	addi	sp,sp,4
  14ebb4:	f800283a 	ret

0014ebb8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  14ebb8:	defffe04 	addi	sp,sp,-8
  14ebbc:	dfc00115 	stw	ra,4(sp)
  14ebc0:	df000015 	stw	fp,0(sp)
  14ebc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  14ebc8:	00800574 	movhi	r2,21
  14ebcc:	108bb504 	addi	r2,r2,11988
  14ebd0:	10800017 	ldw	r2,0(r2)
  14ebd4:	10000526 	beq	r2,zero,14ebec <alt_get_errno+0x34>
  14ebd8:	00800574 	movhi	r2,21
  14ebdc:	108bb504 	addi	r2,r2,11988
  14ebe0:	10800017 	ldw	r2,0(r2)
  14ebe4:	103ee83a 	callr	r2
  14ebe8:	00000206 	br	14ebf4 <alt_get_errno+0x3c>
  14ebec:	00800574 	movhi	r2,21
  14ebf0:	108bc004 	addi	r2,r2,12032
}
  14ebf4:	e037883a 	mov	sp,fp
  14ebf8:	dfc00117 	ldw	ra,4(sp)
  14ebfc:	df000017 	ldw	fp,0(sp)
  14ec00:	dec00204 	addi	sp,sp,8
  14ec04:	f800283a 	ret

0014ec08 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  14ec08:	defff904 	addi	sp,sp,-28
  14ec0c:	dfc00615 	stw	ra,24(sp)
  14ec10:	df000515 	stw	fp,20(sp)
  14ec14:	df000504 	addi	fp,sp,20
  14ec18:	e13ffd15 	stw	r4,-12(fp)
  14ec1c:	e17ffe15 	stw	r5,-8(fp)
  14ec20:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  14ec24:	e0bffd17 	ldw	r2,-12(fp)
  14ec28:	10000616 	blt	r2,zero,14ec44 <write+0x3c>
  14ec2c:	e0bffd17 	ldw	r2,-12(fp)
  14ec30:	10c00324 	muli	r3,r2,12
  14ec34:	00800574 	movhi	r2,21
  14ec38:	10873204 	addi	r2,r2,7368
  14ec3c:	1885883a 	add	r2,r3,r2
  14ec40:	00000106 	br	14ec48 <write+0x40>
  14ec44:	0005883a 	mov	r2,zero
  14ec48:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  14ec4c:	e0bffb17 	ldw	r2,-20(fp)
  14ec50:	10001f26 	beq	r2,zero,14ecd0 <write+0xc8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  14ec54:	e0bffb17 	ldw	r2,-20(fp)
  14ec58:	10800217 	ldw	r2,8(r2)
  14ec5c:	108000cc 	andi	r2,r2,3
  14ec60:	10001726 	beq	r2,zero,14ecc0 <write+0xb8>
  14ec64:	e0bffb17 	ldw	r2,-20(fp)
  14ec68:	10800017 	ldw	r2,0(r2)
  14ec6c:	10800617 	ldw	r2,24(r2)
  14ec70:	10001326 	beq	r2,zero,14ecc0 <write+0xb8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  14ec74:	e0bffb17 	ldw	r2,-20(fp)
  14ec78:	10800017 	ldw	r2,0(r2)
  14ec7c:	10800617 	ldw	r2,24(r2)
  14ec80:	e0ffff17 	ldw	r3,-4(fp)
  14ec84:	e13ffb17 	ldw	r4,-20(fp)
  14ec88:	e17ffe17 	ldw	r5,-8(fp)
  14ec8c:	180d883a 	mov	r6,r3
  14ec90:	103ee83a 	callr	r2
  14ec94:	e0bffc15 	stw	r2,-16(fp)
  14ec98:	e0bffc17 	ldw	r2,-16(fp)
  14ec9c:	1000060e 	bge	r2,zero,14ecb8 <write+0xb0>
      {
        ALT_ERRNO = -rval;
  14eca0:	014ebb80 	call	14ebb8 <alt_get_errno>
  14eca4:	e0fffc17 	ldw	r3,-16(fp)
  14eca8:	00c7c83a 	sub	r3,zero,r3
  14ecac:	10c00015 	stw	r3,0(r2)
        return -1;
  14ecb0:	00bfffc4 	movi	r2,-1
  14ecb4:	00000a06 	br	14ece0 <write+0xd8>
      }
      return rval;
  14ecb8:	e0bffc17 	ldw	r2,-16(fp)
  14ecbc:	00000806 	br	14ece0 <write+0xd8>
    }
    else
    {
      ALT_ERRNO = EACCES;
  14ecc0:	014ebb80 	call	14ebb8 <alt_get_errno>
  14ecc4:	00c00344 	movi	r3,13
  14ecc8:	10c00015 	stw	r3,0(r2)
  14eccc:	00000306 	br	14ecdc <write+0xd4>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  14ecd0:	014ebb80 	call	14ebb8 <alt_get_errno>
  14ecd4:	00c01444 	movi	r3,81
  14ecd8:	10c00015 	stw	r3,0(r2)
  }
  return -1;
  14ecdc:	00bfffc4 	movi	r2,-1
}
  14ece0:	e037883a 	mov	sp,fp
  14ece4:	dfc00117 	ldw	ra,4(sp)
  14ece8:	df000017 	ldw	fp,0(sp)
  14ecec:	dec00204 	addi	sp,sp,8
  14ecf0:	f800283a 	ret

0014ecf4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  14ecf4:	defffd04 	addi	sp,sp,-12
  14ecf8:	dfc00215 	stw	ra,8(sp)
  14ecfc:	df000115 	stw	fp,4(sp)
  14ed00:	df000104 	addi	fp,sp,4
  14ed04:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  14ed08:	e13fff17 	ldw	r4,-4(fp)
  14ed0c:	01400574 	movhi	r5,21
  14ed10:	294bb204 	addi	r5,r5,11976
  14ed14:	014fd340 	call	14fd34 <alt_dev_llist_insert>
}
  14ed18:	e037883a 	mov	sp,fp
  14ed1c:	dfc00117 	ldw	ra,4(sp)
  14ed20:	df000017 	ldw	fp,0(sp)
  14ed24:	dec00204 	addi	sp,sp,8
  14ed28:	f800283a 	ret

0014ed2c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  14ed2c:	defffd04 	addi	sp,sp,-12
  14ed30:	dfc00215 	stw	ra,8(sp)
  14ed34:	df000115 	stw	fp,4(sp)
  14ed38:	df000104 	addi	fp,sp,4
  14ed3c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
  14ed40:	01506980 	call	150698 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  14ed44:	00800044 	movi	r2,1
  14ed48:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  14ed4c:	e037883a 	mov	sp,fp
  14ed50:	dfc00117 	ldw	ra,4(sp)
  14ed54:	df000017 	ldw	fp,0(sp)
  14ed58:	dec00204 	addi	sp,sp,8
  14ed5c:	f800283a 	ret

0014ed60 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  14ed60:	defffe04 	addi	sp,sp,-8
  14ed64:	dfc00115 	stw	ra,4(sp)
  14ed68:	df000015 	stw	fp,0(sp)
  14ed6c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
  14ed70:	01000634 	movhi	r4,24
  14ed74:	21042004 	addi	r4,r4,4224
  14ed78:	000b883a 	mov	r5,zero
  14ed7c:	01800044 	movi	r6,1
  14ed80:	01c0fa04 	movi	r7,1000
  14ed84:	014f8a00 	call	14f8a0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMESTAMP, timestamp);
  14ed88:	00800574 	movhi	r2,21
  14ed8c:	108bc404 	addi	r2,r2,12048
  14ed90:	00c00634 	movhi	r3,24
  14ed94:	18c42804 	addi	r3,r3,4256
  14ed98:	10c00015 	stw	r3,0(r2)
  14ed9c:	00800574 	movhi	r2,21
  14eda0:	108bc504 	addi	r2,r2,12052
  14eda4:	00c05f74 	movhi	r3,381
  14eda8:	18de1004 	addi	r3,r3,30784
  14edac:	10c00015 	stw	r3,0(r2)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  14edb0:	01000574 	movhi	r4,21
  14edb4:	21079c04 	addi	r4,r4,7792
  14edb8:	000b883a 	mov	r5,zero
  14edbc:	01800084 	movi	r6,2
  14edc0:	014ef580 	call	14ef58 <altera_avalon_jtag_uart_init>
  14edc4:	01000574 	movhi	r4,21
  14edc8:	21079204 	addi	r4,r4,7752
  14edcc:	014ecf40 	call	14ecf4 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER, performance_counter);
  14edd0:	00c00044 	movi	r3,1
  14edd4:	00800634 	movhi	r2,24
  14edd8:	10840004 	addi	r2,r2,4096
  14eddc:	10c00035 	stwio	r3,0(r2)
}
  14ede0:	e037883a 	mov	sp,fp
  14ede4:	dfc00117 	ldw	ra,4(sp)
  14ede8:	df000017 	ldw	fp,0(sp)
  14edec:	dec00204 	addi	sp,sp,8
  14edf0:	f800283a 	ret

0014edf4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  14edf4:	defffa04 	addi	sp,sp,-24
  14edf8:	dfc00515 	stw	ra,20(sp)
  14edfc:	df000415 	stw	fp,16(sp)
  14ee00:	df000404 	addi	fp,sp,16
  14ee04:	e13ffd15 	stw	r4,-12(fp)
  14ee08:	e17ffe15 	stw	r5,-8(fp)
  14ee0c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  14ee10:	e0bffd17 	ldw	r2,-12(fp)
  14ee14:	10800017 	ldw	r2,0(r2)
  14ee18:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  14ee1c:	e0bffc17 	ldw	r2,-16(fp)
  14ee20:	10c00a04 	addi	r3,r2,40
  14ee24:	e0bffd17 	ldw	r2,-12(fp)
  14ee28:	10800217 	ldw	r2,8(r2)
  14ee2c:	1809883a 	mov	r4,r3
  14ee30:	e17ffe17 	ldw	r5,-8(fp)
  14ee34:	e1bfff17 	ldw	r6,-4(fp)
  14ee38:	100f883a 	mov	r7,r2
  14ee3c:	014f40c0 	call	14f40c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  14ee40:	e037883a 	mov	sp,fp
  14ee44:	dfc00117 	ldw	ra,4(sp)
  14ee48:	df000017 	ldw	fp,0(sp)
  14ee4c:	dec00204 	addi	sp,sp,8
  14ee50:	f800283a 	ret

0014ee54 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  14ee54:	defffa04 	addi	sp,sp,-24
  14ee58:	dfc00515 	stw	ra,20(sp)
  14ee5c:	df000415 	stw	fp,16(sp)
  14ee60:	df000404 	addi	fp,sp,16
  14ee64:	e13ffd15 	stw	r4,-12(fp)
  14ee68:	e17ffe15 	stw	r5,-8(fp)
  14ee6c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  14ee70:	e0bffd17 	ldw	r2,-12(fp)
  14ee74:	10800017 	ldw	r2,0(r2)
  14ee78:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  14ee7c:	e0bffc17 	ldw	r2,-16(fp)
  14ee80:	10c00a04 	addi	r3,r2,40
  14ee84:	e0bffd17 	ldw	r2,-12(fp)
  14ee88:	10800217 	ldw	r2,8(r2)
  14ee8c:	1809883a 	mov	r4,r3
  14ee90:	e17ffe17 	ldw	r5,-8(fp)
  14ee94:	e1bfff17 	ldw	r6,-4(fp)
  14ee98:	100f883a 	mov	r7,r2
  14ee9c:	014f6140 	call	14f614 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  14eea0:	e037883a 	mov	sp,fp
  14eea4:	dfc00117 	ldw	ra,4(sp)
  14eea8:	df000017 	ldw	fp,0(sp)
  14eeac:	dec00204 	addi	sp,sp,8
  14eeb0:	f800283a 	ret

0014eeb4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  14eeb4:	defffc04 	addi	sp,sp,-16
  14eeb8:	dfc00315 	stw	ra,12(sp)
  14eebc:	df000215 	stw	fp,8(sp)
  14eec0:	df000204 	addi	fp,sp,8
  14eec4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  14eec8:	e0bfff17 	ldw	r2,-4(fp)
  14eecc:	10800017 	ldw	r2,0(r2)
  14eed0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  14eed4:	e0bffe17 	ldw	r2,-8(fp)
  14eed8:	10c00a04 	addi	r3,r2,40
  14eedc:	e0bfff17 	ldw	r2,-4(fp)
  14eee0:	10800217 	ldw	r2,8(r2)
  14eee4:	1809883a 	mov	r4,r3
  14eee8:	100b883a 	mov	r5,r2
  14eeec:	014f2b80 	call	14f2b8 <altera_avalon_jtag_uart_close>
}
  14eef0:	e037883a 	mov	sp,fp
  14eef4:	dfc00117 	ldw	ra,4(sp)
  14eef8:	df000017 	ldw	fp,0(sp)
  14eefc:	dec00204 	addi	sp,sp,8
  14ef00:	f800283a 	ret

0014ef04 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  14ef04:	defffa04 	addi	sp,sp,-24
  14ef08:	dfc00515 	stw	ra,20(sp)
  14ef0c:	df000415 	stw	fp,16(sp)
  14ef10:	df000404 	addi	fp,sp,16
  14ef14:	e13ffd15 	stw	r4,-12(fp)
  14ef18:	e17ffe15 	stw	r5,-8(fp)
  14ef1c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  14ef20:	e0bffd17 	ldw	r2,-12(fp)
  14ef24:	10800017 	ldw	r2,0(r2)
  14ef28:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  14ef2c:	e0bffc17 	ldw	r2,-16(fp)
  14ef30:	10800a04 	addi	r2,r2,40
  14ef34:	1009883a 	mov	r4,r2
  14ef38:	e17ffe17 	ldw	r5,-8(fp)
  14ef3c:	e1bfff17 	ldw	r6,-4(fp)
  14ef40:	014f3200 	call	14f320 <altera_avalon_jtag_uart_ioctl>
}
  14ef44:	e037883a 	mov	sp,fp
  14ef48:	dfc00117 	ldw	ra,4(sp)
  14ef4c:	df000017 	ldw	fp,0(sp)
  14ef50:	dec00204 	addi	sp,sp,8
  14ef54:	f800283a 	ret

0014ef58 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  14ef58:	defffa04 	addi	sp,sp,-24
  14ef5c:	dfc00515 	stw	ra,20(sp)
  14ef60:	df000415 	stw	fp,16(sp)
  14ef64:	df000404 	addi	fp,sp,16
  14ef68:	e13ffd15 	stw	r4,-12(fp)
  14ef6c:	e17ffe15 	stw	r5,-8(fp)
  14ef70:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  14ef74:	e0bffd17 	ldw	r2,-12(fp)
  14ef78:	00c00044 	movi	r3,1
  14ef7c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  14ef80:	e0bffd17 	ldw	r2,-12(fp)
  14ef84:	10800017 	ldw	r2,0(r2)
  14ef88:	10800104 	addi	r2,r2,4
  14ef8c:	e0fffd17 	ldw	r3,-12(fp)
  14ef90:	18c00817 	ldw	r3,32(r3)
  14ef94:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  14ef98:	e0fffe17 	ldw	r3,-8(fp)
  14ef9c:	e0bfff17 	ldw	r2,-4(fp)
  14efa0:	d8000015 	stw	zero,0(sp)
  14efa4:	1809883a 	mov	r4,r3
  14efa8:	100b883a 	mov	r5,r2
  14efac:	01800574 	movhi	r6,21
  14efb0:	31bc0604 	addi	r6,r6,-4072
  14efb4:	e1fffd17 	ldw	r7,-12(fp)
  14efb8:	014fe8c0 	call	14fe8c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  14efbc:	e0bffd17 	ldw	r2,-12(fp)
  14efc0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  14efc4:	e0bffd17 	ldw	r2,-12(fp)
  14efc8:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  14efcc:	00800574 	movhi	r2,21
  14efd0:	108bc704 	addi	r2,r2,12060
  14efd4:	10800017 	ldw	r2,0(r2)
  14efd8:	1809883a 	mov	r4,r3
  14efdc:	100b883a 	mov	r5,r2
  14efe0:	01800574 	movhi	r6,21
  14efe4:	31bc8504 	addi	r6,r6,-3564
  14efe8:	e1fffd17 	ldw	r7,-12(fp)
  14efec:	014fba40 	call	14fba4 <alt_alarm_start>
  14eff0:	1000040e 	bge	r2,zero,14f004 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  14eff4:	e0bffd17 	ldw	r2,-12(fp)
  14eff8:	00e00034 	movhi	r3,32768
  14effc:	18ffffc4 	addi	r3,r3,-1
  14f000:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  14f004:	e037883a 	mov	sp,fp
  14f008:	dfc00117 	ldw	ra,4(sp)
  14f00c:	df000017 	ldw	fp,0(sp)
  14f010:	dec00204 	addi	sp,sp,8
  14f014:	f800283a 	ret

0014f018 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  14f018:	defff804 	addi	sp,sp,-32
  14f01c:	df000715 	stw	fp,28(sp)
  14f020:	df000704 	addi	fp,sp,28
  14f024:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  14f028:	e0bfff17 	ldw	r2,-4(fp)
  14f02c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  14f030:	e0bffb17 	ldw	r2,-20(fp)
  14f034:	10800017 	ldw	r2,0(r2)
  14f038:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  14f03c:	e0bffc17 	ldw	r2,-16(fp)
  14f040:	10800104 	addi	r2,r2,4
  14f044:	10800037 	ldwio	r2,0(r2)
  14f048:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  14f04c:	e0bffd17 	ldw	r2,-12(fp)
  14f050:	1080c00c 	andi	r2,r2,768
  14f054:	1000011e 	bne	r2,zero,14f05c <altera_avalon_jtag_uart_irq+0x44>
      break;
  14f058:	00006a06 	br	14f204 <altera_avalon_jtag_uart_irq+0x1ec>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  14f05c:	e0bffd17 	ldw	r2,-12(fp)
  14f060:	1080400c 	andi	r2,r2,256
  14f064:	10003226 	beq	r2,zero,14f130 <altera_avalon_jtag_uart_irq+0x118>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  14f068:	00800074 	movhi	r2,1
  14f06c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  14f070:	e0bffb17 	ldw	r2,-20(fp)
  14f074:	10800a17 	ldw	r2,40(r2)
  14f078:	10800044 	addi	r2,r2,1
  14f07c:	1081ffcc 	andi	r2,r2,2047
  14f080:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  14f084:	e0bffb17 	ldw	r2,-20(fp)
  14f088:	10c00b17 	ldw	r3,44(r2)
  14f08c:	e0bffe17 	ldw	r2,-8(fp)
  14f090:	1880011e 	bne	r3,r2,14f098 <altera_avalon_jtag_uart_irq+0x80>
          break;
  14f094:	00001506 	br	14f0ec <altera_avalon_jtag_uart_irq+0xd4>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  14f098:	e0bffc17 	ldw	r2,-16(fp)
  14f09c:	10800037 	ldwio	r2,0(r2)
  14f0a0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  14f0a4:	e0bff917 	ldw	r2,-28(fp)
  14f0a8:	10a0000c 	andi	r2,r2,32768
  14f0ac:	1000011e 	bne	r2,zero,14f0b4 <altera_avalon_jtag_uart_irq+0x9c>
          break;
  14f0b0:	00000e06 	br	14f0ec <altera_avalon_jtag_uart_irq+0xd4>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  14f0b4:	e0bffb17 	ldw	r2,-20(fp)
  14f0b8:	10800a17 	ldw	r2,40(r2)
  14f0bc:	e0fff917 	ldw	r3,-28(fp)
  14f0c0:	e13ffb17 	ldw	r4,-20(fp)
  14f0c4:	2085883a 	add	r2,r4,r2
  14f0c8:	10800e04 	addi	r2,r2,56
  14f0cc:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  14f0d0:	e0bffb17 	ldw	r2,-20(fp)
  14f0d4:	10800a17 	ldw	r2,40(r2)
  14f0d8:	10800044 	addi	r2,r2,1
  14f0dc:	10c1ffcc 	andi	r3,r2,2047
  14f0e0:	e0bffb17 	ldw	r2,-20(fp)
  14f0e4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  14f0e8:	003fe106 	br	14f070 <altera_avalon_jtag_uart_irq+0x58>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  14f0ec:	e0bff917 	ldw	r2,-28(fp)
  14f0f0:	10bfffec 	andhi	r2,r2,65535
  14f0f4:	10000e26 	beq	r2,zero,14f130 <altera_avalon_jtag_uart_irq+0x118>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  14f0f8:	e0bffb17 	ldw	r2,-20(fp)
  14f0fc:	10c00817 	ldw	r3,32(r2)
  14f100:	00bfff84 	movi	r2,-2
  14f104:	1886703a 	and	r3,r3,r2
  14f108:	e0bffb17 	ldw	r2,-20(fp)
  14f10c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  14f110:	e0bffc17 	ldw	r2,-16(fp)
  14f114:	10800104 	addi	r2,r2,4
  14f118:	e0fffb17 	ldw	r3,-20(fp)
  14f11c:	18c00817 	ldw	r3,32(r3)
  14f120:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  14f124:	e0bffc17 	ldw	r2,-16(fp)
  14f128:	10800104 	addi	r2,r2,4
  14f12c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  14f130:	e0bffd17 	ldw	r2,-12(fp)
  14f134:	1080800c 	andi	r2,r2,512
  14f138:	10003126 	beq	r2,zero,14f200 <altera_avalon_jtag_uart_irq+0x1e8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  14f13c:	e0bffd17 	ldw	r2,-12(fp)
  14f140:	1004d43a 	srli	r2,r2,16
  14f144:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  14f148:	00001406 	br	14f19c <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  14f14c:	e0bffc17 	ldw	r2,-16(fp)
  14f150:	e0fffb17 	ldw	r3,-20(fp)
  14f154:	18c00d17 	ldw	r3,52(r3)
  14f158:	e13ffb17 	ldw	r4,-20(fp)
  14f15c:	20c7883a 	add	r3,r4,r3
  14f160:	18c20e04 	addi	r3,r3,2104
  14f164:	18c00003 	ldbu	r3,0(r3)
  14f168:	18c03fcc 	andi	r3,r3,255
  14f16c:	18c0201c 	xori	r3,r3,128
  14f170:	18ffe004 	addi	r3,r3,-128
  14f174:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  14f178:	e0bffb17 	ldw	r2,-20(fp)
  14f17c:	10800d17 	ldw	r2,52(r2)
  14f180:	10800044 	addi	r2,r2,1
  14f184:	10c1ffcc 	andi	r3,r2,2047
  14f188:	e0bffb17 	ldw	r2,-20(fp)
  14f18c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  14f190:	e0bffa17 	ldw	r2,-24(fp)
  14f194:	10bfffc4 	addi	r2,r2,-1
  14f198:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  14f19c:	e0bffa17 	ldw	r2,-24(fp)
  14f1a0:	10000526 	beq	r2,zero,14f1b8 <altera_avalon_jtag_uart_irq+0x1a0>
  14f1a4:	e0bffb17 	ldw	r2,-20(fp)
  14f1a8:	10c00d17 	ldw	r3,52(r2)
  14f1ac:	e0bffb17 	ldw	r2,-20(fp)
  14f1b0:	10800c17 	ldw	r2,48(r2)
  14f1b4:	18bfe51e 	bne	r3,r2,14f14c <altera_avalon_jtag_uart_irq+0x134>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  14f1b8:	e0bffa17 	ldw	r2,-24(fp)
  14f1bc:	10001026 	beq	r2,zero,14f200 <altera_avalon_jtag_uart_irq+0x1e8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  14f1c0:	e0bffb17 	ldw	r2,-20(fp)
  14f1c4:	10c00817 	ldw	r3,32(r2)
  14f1c8:	00bfff44 	movi	r2,-3
  14f1cc:	1886703a 	and	r3,r3,r2
  14f1d0:	e0bffb17 	ldw	r2,-20(fp)
  14f1d4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  14f1d8:	e0bffb17 	ldw	r2,-20(fp)
  14f1dc:	10800017 	ldw	r2,0(r2)
  14f1e0:	10800104 	addi	r2,r2,4
  14f1e4:	e0fffb17 	ldw	r3,-20(fp)
  14f1e8:	18c00817 	ldw	r3,32(r3)
  14f1ec:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  14f1f0:	e0bffc17 	ldw	r2,-16(fp)
  14f1f4:	10800104 	addi	r2,r2,4
  14f1f8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  14f1fc:	003f8f06 	br	14f03c <altera_avalon_jtag_uart_irq+0x24>
  14f200:	003f8e06 	br	14f03c <altera_avalon_jtag_uart_irq+0x24>
}
  14f204:	e037883a 	mov	sp,fp
  14f208:	df000017 	ldw	fp,0(sp)
  14f20c:	dec00104 	addi	sp,sp,4
  14f210:	f800283a 	ret

0014f214 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  14f214:	defff804 	addi	sp,sp,-32
  14f218:	df000715 	stw	fp,28(sp)
  14f21c:	df000704 	addi	fp,sp,28
  14f220:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  14f224:	e0bffb17 	ldw	r2,-20(fp)
  14f228:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  14f22c:	e0bff917 	ldw	r2,-28(fp)
  14f230:	10800017 	ldw	r2,0(r2)
  14f234:	10800104 	addi	r2,r2,4
  14f238:	10800037 	ldwio	r2,0(r2)
  14f23c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  14f240:	e0bffa17 	ldw	r2,-24(fp)
  14f244:	1081000c 	andi	r2,r2,1024
  14f248:	10000a26 	beq	r2,zero,14f274 <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  14f24c:	e0bff917 	ldw	r2,-28(fp)
  14f250:	10800017 	ldw	r2,0(r2)
  14f254:	10800104 	addi	r2,r2,4
  14f258:	e0fff917 	ldw	r3,-28(fp)
  14f25c:	18c00817 	ldw	r3,32(r3)
  14f260:	18c10014 	ori	r3,r3,1024
  14f264:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
  14f268:	e0bff917 	ldw	r2,-28(fp)
  14f26c:	10000915 	stw	zero,36(r2)
  14f270:	00000a06 	br	14f29c <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  14f274:	e0bff917 	ldw	r2,-28(fp)
  14f278:	10800917 	ldw	r2,36(r2)
  14f27c:	00e00034 	movhi	r3,32768
  14f280:	18ffff04 	addi	r3,r3,-4
  14f284:	18800536 	bltu	r3,r2,14f29c <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
  14f288:	e0bff917 	ldw	r2,-28(fp)
  14f28c:	10800917 	ldw	r2,36(r2)
  14f290:	10c00044 	addi	r3,r2,1
  14f294:	e0bff917 	ldw	r2,-28(fp)
  14f298:	10c00915 	stw	r3,36(r2)
  14f29c:	00800574 	movhi	r2,21
  14f2a0:	108bc704 	addi	r2,r2,12060
  14f2a4:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  14f2a8:	e037883a 	mov	sp,fp
  14f2ac:	df000017 	ldw	fp,0(sp)
  14f2b0:	dec00104 	addi	sp,sp,4
  14f2b4:	f800283a 	ret

0014f2b8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  14f2b8:	defffd04 	addi	sp,sp,-12
  14f2bc:	df000215 	stw	fp,8(sp)
  14f2c0:	df000204 	addi	fp,sp,8
  14f2c4:	e13ffe15 	stw	r4,-8(fp)
  14f2c8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  14f2cc:	00000506 	br	14f2e4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  14f2d0:	e0bfff17 	ldw	r2,-4(fp)
  14f2d4:	1090000c 	andi	r2,r2,16384
  14f2d8:	10000226 	beq	r2,zero,14f2e4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  14f2dc:	00bffd44 	movi	r2,-11
  14f2e0:	00000b06 	br	14f310 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  14f2e4:	e0bffe17 	ldw	r2,-8(fp)
  14f2e8:	10c00d17 	ldw	r3,52(r2)
  14f2ec:	e0bffe17 	ldw	r2,-8(fp)
  14f2f0:	10800c17 	ldw	r2,48(r2)
  14f2f4:	18800526 	beq	r3,r2,14f30c <altera_avalon_jtag_uart_close+0x54>
  14f2f8:	e0bffe17 	ldw	r2,-8(fp)
  14f2fc:	10c00917 	ldw	r3,36(r2)
  14f300:	e0bffe17 	ldw	r2,-8(fp)
  14f304:	10800117 	ldw	r2,4(r2)
  14f308:	18bff136 	bltu	r3,r2,14f2d0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  14f30c:	0005883a 	mov	r2,zero
}
  14f310:	e037883a 	mov	sp,fp
  14f314:	df000017 	ldw	fp,0(sp)
  14f318:	dec00104 	addi	sp,sp,4
  14f31c:	f800283a 	ret

0014f320 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  14f320:	defffa04 	addi	sp,sp,-24
  14f324:	df000515 	stw	fp,20(sp)
  14f328:	df000504 	addi	fp,sp,20
  14f32c:	e13ffd15 	stw	r4,-12(fp)
  14f330:	e17ffe15 	stw	r5,-8(fp)
  14f334:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  14f338:	00bff9c4 	movi	r2,-25
  14f33c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  14f340:	e0bffe17 	ldw	r2,-8(fp)
  14f344:	10da8060 	cmpeqi	r3,r2,27137
  14f348:	1800031e 	bne	r3,zero,14f358 <altera_avalon_jtag_uart_ioctl+0x38>
  14f34c:	109a80a0 	cmpeqi	r2,r2,27138
  14f350:	1000191e 	bne	r2,zero,14f3b8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  14f354:	00002806 	br	14f3f8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  14f358:	e0bffd17 	ldw	r2,-12(fp)
  14f35c:	10c00117 	ldw	r3,4(r2)
  14f360:	00a00034 	movhi	r2,32768
  14f364:	10bfffc4 	addi	r2,r2,-1
  14f368:	18801226 	beq	r3,r2,14f3b4 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
  14f36c:	e0bfff17 	ldw	r2,-4(fp)
  14f370:	10800017 	ldw	r2,0(r2)
  14f374:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  14f378:	e0bffc17 	ldw	r2,-16(fp)
  14f37c:	10800090 	cmplti	r2,r2,2
  14f380:	1000061e 	bne	r2,zero,14f39c <altera_avalon_jtag_uart_ioctl+0x7c>
  14f384:	e0fffc17 	ldw	r3,-16(fp)
  14f388:	00a00034 	movhi	r2,32768
  14f38c:	10bfffc4 	addi	r2,r2,-1
  14f390:	18800226 	beq	r3,r2,14f39c <altera_avalon_jtag_uart_ioctl+0x7c>
  14f394:	e0bffc17 	ldw	r2,-16(fp)
  14f398:	00000206 	br	14f3a4 <altera_avalon_jtag_uart_ioctl+0x84>
  14f39c:	00a00034 	movhi	r2,32768
  14f3a0:	10bfff84 	addi	r2,r2,-2
  14f3a4:	e0fffd17 	ldw	r3,-12(fp)
  14f3a8:	18800115 	stw	r2,4(r3)
      rc = 0;
  14f3ac:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  14f3b0:	00001106 	br	14f3f8 <altera_avalon_jtag_uart_ioctl+0xd8>
  14f3b4:	00001006 	br	14f3f8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  14f3b8:	e0bffd17 	ldw	r2,-12(fp)
  14f3bc:	10c00117 	ldw	r3,4(r2)
  14f3c0:	00a00034 	movhi	r2,32768
  14f3c4:	10bfffc4 	addi	r2,r2,-1
  14f3c8:	18800a26 	beq	r3,r2,14f3f4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  14f3cc:	e0bffd17 	ldw	r2,-12(fp)
  14f3d0:	10c00917 	ldw	r3,36(r2)
  14f3d4:	e0bffd17 	ldw	r2,-12(fp)
  14f3d8:	10800117 	ldw	r2,4(r2)
  14f3dc:	1885803a 	cmpltu	r2,r3,r2
  14f3e0:	10c03fcc 	andi	r3,r2,255
  14f3e4:	e0bfff17 	ldw	r2,-4(fp)
  14f3e8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  14f3ec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  14f3f0:	00000006 	br	14f3f4 <altera_avalon_jtag_uart_ioctl+0xd4>
  14f3f4:	0001883a 	nop

  default:
    break;
  }

  return rc;
  14f3f8:	e0bffb17 	ldw	r2,-20(fp)
}
  14f3fc:	e037883a 	mov	sp,fp
  14f400:	df000017 	ldw	fp,0(sp)
  14f404:	dec00104 	addi	sp,sp,4
  14f408:	f800283a 	ret

0014f40c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  14f40c:	defff304 	addi	sp,sp,-52
  14f410:	dfc00c15 	stw	ra,48(sp)
  14f414:	df000b15 	stw	fp,44(sp)
  14f418:	df000b04 	addi	fp,sp,44
  14f41c:	e13ffc15 	stw	r4,-16(fp)
  14f420:	e17ffd15 	stw	r5,-12(fp)
  14f424:	e1bffe15 	stw	r6,-8(fp)
  14f428:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  14f42c:	e0bffd17 	ldw	r2,-12(fp)
  14f430:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  14f434:	00004906 	br	14f55c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  14f438:	e0bffc17 	ldw	r2,-16(fp)
  14f43c:	10800a17 	ldw	r2,40(r2)
  14f440:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  14f444:	e0bffc17 	ldw	r2,-16(fp)
  14f448:	10800b17 	ldw	r2,44(r2)
  14f44c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  14f450:	e0fff717 	ldw	r3,-36(fp)
  14f454:	e0bff817 	ldw	r2,-32(fp)
  14f458:	18800536 	bltu	r3,r2,14f470 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  14f45c:	e0fff717 	ldw	r3,-36(fp)
  14f460:	e0bff817 	ldw	r2,-32(fp)
  14f464:	1885c83a 	sub	r2,r3,r2
  14f468:	e0bff615 	stw	r2,-40(fp)
  14f46c:	00000406 	br	14f480 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  14f470:	00c20004 	movi	r3,2048
  14f474:	e0bff817 	ldw	r2,-32(fp)
  14f478:	1885c83a 	sub	r2,r3,r2
  14f47c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  14f480:	e0bff617 	ldw	r2,-40(fp)
  14f484:	1000011e 	bne	r2,zero,14f48c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
  14f488:	00001d06 	br	14f500 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
  14f48c:	e0fffe17 	ldw	r3,-8(fp)
  14f490:	e0bff617 	ldw	r2,-40(fp)
  14f494:	1880022e 	bgeu	r3,r2,14f4a0 <altera_avalon_jtag_uart_read+0x94>
        n = space;
  14f498:	e0bffe17 	ldw	r2,-8(fp)
  14f49c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  14f4a0:	e0bff817 	ldw	r2,-32(fp)
  14f4a4:	10800e04 	addi	r2,r2,56
  14f4a8:	e0fffc17 	ldw	r3,-16(fp)
  14f4ac:	1885883a 	add	r2,r3,r2
  14f4b0:	e13ff517 	ldw	r4,-44(fp)
  14f4b4:	100b883a 	mov	r5,r2
  14f4b8:	e1bff617 	ldw	r6,-40(fp)
  14f4bc:	01422440 	call	142244 <memcpy>
      ptr   += n;
  14f4c0:	e0fff517 	ldw	r3,-44(fp)
  14f4c4:	e0bff617 	ldw	r2,-40(fp)
  14f4c8:	1885883a 	add	r2,r3,r2
  14f4cc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  14f4d0:	e0fffe17 	ldw	r3,-8(fp)
  14f4d4:	e0bff617 	ldw	r2,-40(fp)
  14f4d8:	1885c83a 	sub	r2,r3,r2
  14f4dc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  14f4e0:	e0fff817 	ldw	r3,-32(fp)
  14f4e4:	e0bff617 	ldw	r2,-40(fp)
  14f4e8:	1885883a 	add	r2,r3,r2
  14f4ec:	10c1ffcc 	andi	r3,r2,2047
  14f4f0:	e0bffc17 	ldw	r2,-16(fp)
  14f4f4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  14f4f8:	e0bffe17 	ldw	r2,-8(fp)
  14f4fc:	00bfce16 	blt	zero,r2,14f438 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
  14f500:	e0fff517 	ldw	r3,-44(fp)
  14f504:	e0bffd17 	ldw	r2,-12(fp)
  14f508:	18800126 	beq	r3,r2,14f510 <altera_avalon_jtag_uart_read+0x104>
      break;
  14f50c:	00001506 	br	14f564 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  14f510:	e0bfff17 	ldw	r2,-4(fp)
  14f514:	1090000c 	andi	r2,r2,16384
  14f518:	10000126 	beq	r2,zero,14f520 <altera_avalon_jtag_uart_read+0x114>
      break;
  14f51c:	00001106 	br	14f564 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  14f520:	0001883a 	nop
  14f524:	e0bffc17 	ldw	r2,-16(fp)
  14f528:	10c00a17 	ldw	r3,40(r2)
  14f52c:	e0bff717 	ldw	r2,-36(fp)
  14f530:	1880051e 	bne	r3,r2,14f548 <altera_avalon_jtag_uart_read+0x13c>
  14f534:	e0bffc17 	ldw	r2,-16(fp)
  14f538:	10c00917 	ldw	r3,36(r2)
  14f53c:	e0bffc17 	ldw	r2,-16(fp)
  14f540:	10800117 	ldw	r2,4(r2)
  14f544:	18bff736 	bltu	r3,r2,14f524 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  14f548:	e0bffc17 	ldw	r2,-16(fp)
  14f54c:	10c00a17 	ldw	r3,40(r2)
  14f550:	e0bff717 	ldw	r2,-36(fp)
  14f554:	1880011e 	bne	r3,r2,14f55c <altera_avalon_jtag_uart_read+0x150>
      break;
  14f558:	00000206 	br	14f564 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  14f55c:	e0bffe17 	ldw	r2,-8(fp)
  14f560:	00bfb516 	blt	zero,r2,14f438 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  14f564:	e0fff517 	ldw	r3,-44(fp)
  14f568:	e0bffd17 	ldw	r2,-12(fp)
  14f56c:	18801726 	beq	r3,r2,14f5cc <altera_avalon_jtag_uart_read+0x1c0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14f570:	0005303a 	rdctl	r2,status
  14f574:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14f578:	e0fffa17 	ldw	r3,-24(fp)
  14f57c:	00bfff84 	movi	r2,-2
  14f580:	1884703a 	and	r2,r3,r2
  14f584:	1001703a 	wrctl	status,r2
  
  return context;
  14f588:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  14f58c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  14f590:	e0bffc17 	ldw	r2,-16(fp)
  14f594:	10800817 	ldw	r2,32(r2)
  14f598:	10c00054 	ori	r3,r2,1
  14f59c:	e0bffc17 	ldw	r2,-16(fp)
  14f5a0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  14f5a4:	e0bffc17 	ldw	r2,-16(fp)
  14f5a8:	10800017 	ldw	r2,0(r2)
  14f5ac:	10800104 	addi	r2,r2,4
  14f5b0:	e0fffc17 	ldw	r3,-16(fp)
  14f5b4:	18c00817 	ldw	r3,32(r3)
  14f5b8:	10c00035 	stwio	r3,0(r2)
  14f5bc:	e0bff917 	ldw	r2,-28(fp)
  14f5c0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14f5c4:	e0bffb17 	ldw	r2,-20(fp)
  14f5c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  14f5cc:	e0fff517 	ldw	r3,-44(fp)
  14f5d0:	e0bffd17 	ldw	r2,-12(fp)
  14f5d4:	18800426 	beq	r3,r2,14f5e8 <altera_avalon_jtag_uart_read+0x1dc>
    return ptr - buffer;
  14f5d8:	e0fff517 	ldw	r3,-44(fp)
  14f5dc:	e0bffd17 	ldw	r2,-12(fp)
  14f5e0:	1885c83a 	sub	r2,r3,r2
  14f5e4:	00000606 	br	14f600 <altera_avalon_jtag_uart_read+0x1f4>
  else if (flags & O_NONBLOCK)
  14f5e8:	e0bfff17 	ldw	r2,-4(fp)
  14f5ec:	1090000c 	andi	r2,r2,16384
  14f5f0:	10000226 	beq	r2,zero,14f5fc <altera_avalon_jtag_uart_read+0x1f0>
    return -EWOULDBLOCK;
  14f5f4:	00bffd44 	movi	r2,-11
  14f5f8:	00000106 	br	14f600 <altera_avalon_jtag_uart_read+0x1f4>
  else
    return -EIO;
  14f5fc:	00bffec4 	movi	r2,-5
}
  14f600:	e037883a 	mov	sp,fp
  14f604:	dfc00117 	ldw	ra,4(sp)
  14f608:	df000017 	ldw	fp,0(sp)
  14f60c:	dec00204 	addi	sp,sp,8
  14f610:	f800283a 	ret

0014f614 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  14f614:	defff304 	addi	sp,sp,-52
  14f618:	dfc00c15 	stw	ra,48(sp)
  14f61c:	df000b15 	stw	fp,44(sp)
  14f620:	df000b04 	addi	fp,sp,44
  14f624:	e13ffc15 	stw	r4,-16(fp)
  14f628:	e17ffd15 	stw	r5,-12(fp)
  14f62c:	e1bffe15 	stw	r6,-8(fp)
  14f630:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  14f634:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  14f638:	e0bffd17 	ldw	r2,-12(fp)
  14f63c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  14f640:	00003906 	br	14f728 <altera_avalon_jtag_uart_write+0x114>
  14f644:	00003806 	br	14f728 <altera_avalon_jtag_uart_write+0x114>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  14f648:	e0bffc17 	ldw	r2,-16(fp)
  14f64c:	10800c17 	ldw	r2,48(r2)
  14f650:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
  14f654:	e0bffc17 	ldw	r2,-16(fp)
  14f658:	10800d17 	ldw	r2,52(r2)
  14f65c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  14f660:	e0fff817 	ldw	r3,-32(fp)
  14f664:	e0bff517 	ldw	r2,-44(fp)
  14f668:	1880062e 	bgeu	r3,r2,14f684 <altera_avalon_jtag_uart_write+0x70>
        n = out - 1 - in;
  14f66c:	e0fff517 	ldw	r3,-44(fp)
  14f670:	e0bff817 	ldw	r2,-32(fp)
  14f674:	1885c83a 	sub	r2,r3,r2
  14f678:	10bfffc4 	addi	r2,r2,-1
  14f67c:	e0bff615 	stw	r2,-40(fp)
  14f680:	00000b06 	br	14f6b0 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
  14f684:	e0bff517 	ldw	r2,-44(fp)
  14f688:	10000526 	beq	r2,zero,14f6a0 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  14f68c:	00c20004 	movi	r3,2048
  14f690:	e0bff817 	ldw	r2,-32(fp)
  14f694:	1885c83a 	sub	r2,r3,r2
  14f698:	e0bff615 	stw	r2,-40(fp)
  14f69c:	00000406 	br	14f6b0 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  14f6a0:	00c1ffc4 	movi	r3,2047
  14f6a4:	e0bff817 	ldw	r2,-32(fp)
  14f6a8:	1885c83a 	sub	r2,r3,r2
  14f6ac:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  14f6b0:	e0bff617 	ldw	r2,-40(fp)
  14f6b4:	1000011e 	bne	r2,zero,14f6bc <altera_avalon_jtag_uart_write+0xa8>
        break;
  14f6b8:	00001d06 	br	14f730 <altera_avalon_jtag_uart_write+0x11c>

      if (n > count)
  14f6bc:	e0fffe17 	ldw	r3,-8(fp)
  14f6c0:	e0bff617 	ldw	r2,-40(fp)
  14f6c4:	1880022e 	bgeu	r3,r2,14f6d0 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
  14f6c8:	e0bffe17 	ldw	r2,-8(fp)
  14f6cc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  14f6d0:	e0bff817 	ldw	r2,-32(fp)
  14f6d4:	10820e04 	addi	r2,r2,2104
  14f6d8:	e0fffc17 	ldw	r3,-16(fp)
  14f6dc:	1885883a 	add	r2,r3,r2
  14f6e0:	1009883a 	mov	r4,r2
  14f6e4:	e17ffd17 	ldw	r5,-12(fp)
  14f6e8:	e1bff617 	ldw	r6,-40(fp)
  14f6ec:	01422440 	call	142244 <memcpy>
      ptr   += n;
  14f6f0:	e0fffd17 	ldw	r3,-12(fp)
  14f6f4:	e0bff617 	ldw	r2,-40(fp)
  14f6f8:	1885883a 	add	r2,r3,r2
  14f6fc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  14f700:	e0fffe17 	ldw	r3,-8(fp)
  14f704:	e0bff617 	ldw	r2,-40(fp)
  14f708:	1885c83a 	sub	r2,r3,r2
  14f70c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  14f710:	e0fff817 	ldw	r3,-32(fp)
  14f714:	e0bff617 	ldw	r2,-40(fp)
  14f718:	1885883a 	add	r2,r3,r2
  14f71c:	10c1ffcc 	andi	r3,r2,2047
  14f720:	e0bffc17 	ldw	r2,-16(fp)
  14f724:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  14f728:	e0bffe17 	ldw	r2,-8(fp)
  14f72c:	00bfc616 	blt	zero,r2,14f648 <altera_avalon_jtag_uart_write+0x34>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14f730:	0005303a 	rdctl	r2,status
  14f734:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14f738:	e0fffa17 	ldw	r3,-24(fp)
  14f73c:	00bfff84 	movi	r2,-2
  14f740:	1884703a 	and	r2,r3,r2
  14f744:	1001703a 	wrctl	status,r2
  
  return context;
  14f748:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  14f74c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  14f750:	e0bffc17 	ldw	r2,-16(fp)
  14f754:	10800817 	ldw	r2,32(r2)
  14f758:	10c00094 	ori	r3,r2,2
  14f75c:	e0bffc17 	ldw	r2,-16(fp)
  14f760:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  14f764:	e0bffc17 	ldw	r2,-16(fp)
  14f768:	10800017 	ldw	r2,0(r2)
  14f76c:	10800104 	addi	r2,r2,4
  14f770:	e0fffc17 	ldw	r3,-16(fp)
  14f774:	18c00817 	ldw	r3,32(r3)
  14f778:	10c00035 	stwio	r3,0(r2)
  14f77c:	e0bff917 	ldw	r2,-28(fp)
  14f780:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14f784:	e0bffb17 	ldw	r2,-20(fp)
  14f788:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  14f78c:	e0bffe17 	ldw	r2,-8(fp)
  14f790:	0080120e 	bge	zero,r2,14f7dc <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  14f794:	e0bfff17 	ldw	r2,-4(fp)
  14f798:	1090000c 	andi	r2,r2,16384
  14f79c:	10000126 	beq	r2,zero,14f7a4 <altera_avalon_jtag_uart_write+0x190>
        break;
  14f7a0:	00001006 	br	14f7e4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  14f7a4:	0001883a 	nop
  14f7a8:	e0bffc17 	ldw	r2,-16(fp)
  14f7ac:	10c00d17 	ldw	r3,52(r2)
  14f7b0:	e0bff517 	ldw	r2,-44(fp)
  14f7b4:	1880051e 	bne	r3,r2,14f7cc <altera_avalon_jtag_uart_write+0x1b8>
  14f7b8:	e0bffc17 	ldw	r2,-16(fp)
  14f7bc:	10c00917 	ldw	r3,36(r2)
  14f7c0:	e0bffc17 	ldw	r2,-16(fp)
  14f7c4:	10800117 	ldw	r2,4(r2)
  14f7c8:	18bff736 	bltu	r3,r2,14f7a8 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  14f7cc:	e0bffc17 	ldw	r2,-16(fp)
  14f7d0:	10800917 	ldw	r2,36(r2)
  14f7d4:	10000126 	beq	r2,zero,14f7dc <altera_avalon_jtag_uart_write+0x1c8>
         break;
  14f7d8:	00000206 	br	14f7e4 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
  14f7dc:	e0bffe17 	ldw	r2,-8(fp)
  14f7e0:	00bf9816 	blt	zero,r2,14f644 <altera_avalon_jtag_uart_write+0x30>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  14f7e4:	e0fffd17 	ldw	r3,-12(fp)
  14f7e8:	e0bff717 	ldw	r2,-36(fp)
  14f7ec:	18800426 	beq	r3,r2,14f800 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
  14f7f0:	e0fffd17 	ldw	r3,-12(fp)
  14f7f4:	e0bff717 	ldw	r2,-36(fp)
  14f7f8:	1885c83a 	sub	r2,r3,r2
  14f7fc:	00000606 	br	14f818 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
  14f800:	e0bfff17 	ldw	r2,-4(fp)
  14f804:	1090000c 	andi	r2,r2,16384
  14f808:	10000226 	beq	r2,zero,14f814 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
  14f80c:	00bffd44 	movi	r2,-11
  14f810:	00000106 	br	14f818 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  14f814:	00bffec4 	movi	r2,-5
}
  14f818:	e037883a 	mov	sp,fp
  14f81c:	dfc00117 	ldw	ra,4(sp)
  14f820:	df000017 	ldw	fp,0(sp)
  14f824:	dec00204 	addi	sp,sp,8
  14f828:	f800283a 	ret

0014f82c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  14f82c:	defffa04 	addi	sp,sp,-24
  14f830:	dfc00515 	stw	ra,20(sp)
  14f834:	df000415 	stw	fp,16(sp)
  14f838:	df000404 	addi	fp,sp,16
  14f83c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  14f840:	0007883a 	mov	r3,zero
  14f844:	e0bfff17 	ldw	r2,-4(fp)
  14f848:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  14f84c:	e0bfff17 	ldw	r2,-4(fp)
  14f850:	10800104 	addi	r2,r2,4
  14f854:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14f858:	0005303a 	rdctl	r2,status
  14f85c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14f860:	e0fffd17 	ldw	r3,-12(fp)
  14f864:	00bfff84 	movi	r2,-2
  14f868:	1884703a 	and	r2,r3,r2
  14f86c:	1001703a 	wrctl	status,r2
  
  return context;
  14f870:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  14f874:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  14f878:	01505940 	call	150594 <alt_tick>
  14f87c:	e0bffc17 	ldw	r2,-16(fp)
  14f880:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14f884:	e0bffe17 	ldw	r2,-8(fp)
  14f888:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  14f88c:	e037883a 	mov	sp,fp
  14f890:	dfc00117 	ldw	ra,4(sp)
  14f894:	df000017 	ldw	fp,0(sp)
  14f898:	dec00204 	addi	sp,sp,8
  14f89c:	f800283a 	ret

0014f8a0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  14f8a0:	defff804 	addi	sp,sp,-32
  14f8a4:	dfc00715 	stw	ra,28(sp)
  14f8a8:	df000615 	stw	fp,24(sp)
  14f8ac:	df000604 	addi	fp,sp,24
  14f8b0:	e13ffc15 	stw	r4,-16(fp)
  14f8b4:	e17ffd15 	stw	r5,-12(fp)
  14f8b8:	e1bffe15 	stw	r6,-8(fp)
  14f8bc:	e1ffff15 	stw	r7,-4(fp)
  14f8c0:	e0bfff17 	ldw	r2,-4(fp)
  14f8c4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  14f8c8:	00800574 	movhi	r2,21
  14f8cc:	108bc704 	addi	r2,r2,12060
  14f8d0:	10800017 	ldw	r2,0(r2)
  14f8d4:	1000041e 	bne	r2,zero,14f8e8 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
  14f8d8:	00800574 	movhi	r2,21
  14f8dc:	108bc704 	addi	r2,r2,12060
  14f8e0:	e0fffb17 	ldw	r3,-20(fp)
  14f8e4:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  14f8e8:	e0bffc17 	ldw	r2,-16(fp)
  14f8ec:	10800104 	addi	r2,r2,4
  14f8f0:	00c001c4 	movi	r3,7
  14f8f4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  14f8f8:	d8000015 	stw	zero,0(sp)
  14f8fc:	e13ffd17 	ldw	r4,-12(fp)
  14f900:	e17ffe17 	ldw	r5,-8(fp)
  14f904:	01800574 	movhi	r6,21
  14f908:	31be0b04 	addi	r6,r6,-2004
  14f90c:	e1fffc17 	ldw	r7,-16(fp)
  14f910:	014fe8c0 	call	14fe8c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  14f914:	e037883a 	mov	sp,fp
  14f918:	dfc00117 	ldw	ra,4(sp)
  14f91c:	df000017 	ldw	fp,0(sp)
  14f920:	dec00204 	addi	sp,sp,8
  14f924:	f800283a 	ret

0014f928 <perf_print_formatted_report>:
  14f928:	deffe504 	addi	sp,sp,-108
  14f92c:	dfc01915 	stw	ra,100(sp)
  14f930:	df001815 	stw	fp,96(sp)
  14f934:	dcc01715 	stw	r19,92(sp)
  14f938:	dc801615 	stw	r18,88(sp)
  14f93c:	dc401515 	stw	r17,84(sp)
  14f940:	dc001415 	stw	r16,80(sp)
  14f944:	df001804 	addi	fp,sp,96
  14f948:	e13ff915 	stw	r4,-28(fp)
  14f94c:	e17ffa15 	stw	r5,-24(fp)
  14f950:	e1c00215 	stw	r7,8(fp)
  14f954:	e1bffb15 	stw	r6,-20(fp)
  14f958:	00800044 	movi	r2,1
  14f95c:	e0bfef15 	stw	r2,-68(fp)
  14f960:	00800574 	movhi	r2,21
  14f964:	1084bf04 	addi	r2,r2,4860
  14f968:	e0bff015 	stw	r2,-64(fp)
  14f96c:	00800574 	movhi	r2,21
  14f970:	1084d004 	addi	r2,r2,4928
  14f974:	e0bff115 	stw	r2,-60(fp)
  14f978:	0007883a 	mov	r3,zero
  14f97c:	e0bff917 	ldw	r2,-28(fp)
  14f980:	10c00035 	stwio	r3,0(r2)
  14f984:	e0800204 	addi	r2,fp,8
  14f988:	e0bff815 	stw	r2,-32(fp)
  14f98c:	e13ff917 	ldw	r4,-28(fp)
  14f990:	015076c0 	call	15076c <perf_get_total_time>
  14f994:	e0bff215 	stw	r2,-56(fp)
  14f998:	e0fff315 	stw	r3,-52(fp)
  14f99c:	e13ff217 	ldw	r4,-56(fp)
  14f9a0:	e17ff317 	ldw	r5,-52(fp)
  14f9a4:	0150e180 	call	150e18 <__floatundidf>
  14f9a8:	1021883a 	mov	r16,r2
  14f9ac:	1823883a 	mov	r17,r3
  14f9b0:	e13ffa17 	ldw	r4,-24(fp)
  14f9b4:	014e3c00 	call	14e3c0 <__floatunsidf>
  14f9b8:	100f883a 	mov	r7,r2
  14f9bc:	1811883a 	mov	r8,r3
  14f9c0:	8009883a 	mov	r4,r16
  14f9c4:	880b883a 	mov	r5,r17
  14f9c8:	380d883a 	mov	r6,r7
  14f9cc:	400f883a 	mov	r7,r8
  14f9d0:	014c7e00 	call	14c7e0 <__divdf3>
  14f9d4:	1009883a 	mov	r4,r2
  14f9d8:	180b883a 	mov	r5,r3
  14f9dc:	e13ff415 	stw	r4,-48(fp)
  14f9e0:	e17ff515 	stw	r5,-44(fp)
  14f9e4:	e0bff017 	ldw	r2,-64(fp)
  14f9e8:	d8800115 	stw	r2,4(sp)
  14f9ec:	e0bff117 	ldw	r2,-60(fp)
  14f9f0:	d8800215 	stw	r2,8(sp)
  14f9f4:	e0bff017 	ldw	r2,-64(fp)
  14f9f8:	d8800315 	stw	r2,12(sp)
  14f9fc:	e0bff317 	ldw	r2,-52(fp)
  14fa00:	d8800015 	stw	r2,0(sp)
  14fa04:	e1fff217 	ldw	r7,-56(fp)
  14fa08:	01000574 	movhi	r4,21
  14fa0c:	2104e104 	addi	r4,r4,4996
  14fa10:	e17ff417 	ldw	r5,-48(fp)
  14fa14:	e1bff517 	ldw	r6,-44(fp)
  14fa18:	014237c0 	call	14237c <printf>
  14fa1c:	e0bff817 	ldw	r2,-32(fp)
  14fa20:	10c00104 	addi	r3,r2,4
  14fa24:	e0fff815 	stw	r3,-32(fp)
  14fa28:	10800017 	ldw	r2,0(r2)
  14fa2c:	e0bfee15 	stw	r2,-72(fp)
  14fa30:	00800044 	movi	r2,1
  14fa34:	e0bfef15 	stw	r2,-68(fp)
  14fa38:	00004d06 	br	14fb70 <perf_print_formatted_report+0x248>
  14fa3c:	e13ff917 	ldw	r4,-28(fp)
  14fa40:	e17fef17 	ldw	r5,-68(fp)
  14fa44:	01506b80 	call	1506b8 <perf_get_section_time>
  14fa48:	e0bff615 	stw	r2,-40(fp)
  14fa4c:	e0fff715 	stw	r3,-36(fp)
  14fa50:	e13ff617 	ldw	r4,-40(fp)
  14fa54:	e17ff717 	ldw	r5,-36(fp)
  14fa58:	0150e180 	call	150e18 <__floatundidf>
  14fa5c:	100b883a 	mov	r5,r2
  14fa60:	180d883a 	mov	r6,r3
  14fa64:	2809883a 	mov	r4,r5
  14fa68:	300b883a 	mov	r5,r6
  14fa6c:	000d883a 	mov	r6,zero
  14fa70:	01d01674 	movhi	r7,16473
  14fa74:	014d2fc0 	call	14d2fc <__muldf3>
  14fa78:	1009883a 	mov	r4,r2
  14fa7c:	180b883a 	mov	r5,r3
  14fa80:	2021883a 	mov	r16,r4
  14fa84:	2823883a 	mov	r17,r5
  14fa88:	e13ff217 	ldw	r4,-56(fp)
  14fa8c:	e17ff317 	ldw	r5,-52(fp)
  14fa90:	0150e180 	call	150e18 <__floatundidf>
  14fa94:	100f883a 	mov	r7,r2
  14fa98:	1811883a 	mov	r8,r3
  14fa9c:	8009883a 	mov	r4,r16
  14faa0:	880b883a 	mov	r5,r17
  14faa4:	380d883a 	mov	r6,r7
  14faa8:	400f883a 	mov	r7,r8
  14faac:	014c7e00 	call	14c7e0 <__divdf3>
  14fab0:	1009883a 	mov	r4,r2
  14fab4:	180b883a 	mov	r5,r3
  14fab8:	2021883a 	mov	r16,r4
  14fabc:	2823883a 	mov	r17,r5
  14fac0:	e13ff617 	ldw	r4,-40(fp)
  14fac4:	e17ff717 	ldw	r5,-36(fp)
  14fac8:	0150e180 	call	150e18 <__floatundidf>
  14facc:	1025883a 	mov	r18,r2
  14fad0:	1827883a 	mov	r19,r3
  14fad4:	e13ffa17 	ldw	r4,-24(fp)
  14fad8:	014e3c00 	call	14e3c0 <__floatunsidf>
  14fadc:	100f883a 	mov	r7,r2
  14fae0:	1811883a 	mov	r8,r3
  14fae4:	9009883a 	mov	r4,r18
  14fae8:	980b883a 	mov	r5,r19
  14faec:	380d883a 	mov	r6,r7
  14faf0:	400f883a 	mov	r7,r8
  14faf4:	014c7e00 	call	14c7e0 <__divdf3>
  14faf8:	1009883a 	mov	r4,r2
  14fafc:	180b883a 	mov	r5,r3
  14fb00:	2025883a 	mov	r18,r4
  14fb04:	2827883a 	mov	r19,r5
  14fb08:	e13ff917 	ldw	r4,-28(fp)
  14fb0c:	e17fef17 	ldw	r5,-68(fp)
  14fb10:	01507b80 	call	1507b8 <perf_get_num_starts>
  14fb14:	dc800015 	stw	r18,0(sp)
  14fb18:	dcc00115 	stw	r19,4(sp)
  14fb1c:	e0fff617 	ldw	r3,-40(fp)
  14fb20:	d8c00215 	stw	r3,8(sp)
  14fb24:	e0fff717 	ldw	r3,-36(fp)
  14fb28:	d8c00315 	stw	r3,12(sp)
  14fb2c:	d8800415 	stw	r2,16(sp)
  14fb30:	e0bff017 	ldw	r2,-64(fp)
  14fb34:	d8800515 	stw	r2,20(sp)
  14fb38:	01000574 	movhi	r4,21
  14fb3c:	2104f604 	addi	r4,r4,5080
  14fb40:	e17fee17 	ldw	r5,-72(fp)
  14fb44:	800d883a 	mov	r6,r16
  14fb48:	880f883a 	mov	r7,r17
  14fb4c:	014237c0 	call	14237c <printf>
  14fb50:	e0bff817 	ldw	r2,-32(fp)
  14fb54:	10c00104 	addi	r3,r2,4
  14fb58:	e0fff815 	stw	r3,-32(fp)
  14fb5c:	10800017 	ldw	r2,0(r2)
  14fb60:	e0bfee15 	stw	r2,-72(fp)
  14fb64:	e0bfef17 	ldw	r2,-68(fp)
  14fb68:	10800044 	addi	r2,r2,1
  14fb6c:	e0bfef15 	stw	r2,-68(fp)
  14fb70:	e0bfef17 	ldw	r2,-68(fp)
  14fb74:	e0fffb17 	ldw	r3,-20(fp)
  14fb78:	18bfb00e 	bge	r3,r2,14fa3c <perf_print_formatted_report+0x114>
  14fb7c:	0005883a 	mov	r2,zero
  14fb80:	e6fffc04 	addi	sp,fp,-16
  14fb84:	dfc00517 	ldw	ra,20(sp)
  14fb88:	df000417 	ldw	fp,16(sp)
  14fb8c:	dcc00317 	ldw	r19,12(sp)
  14fb90:	dc800217 	ldw	r18,8(sp)
  14fb94:	dc400117 	ldw	r17,4(sp)
  14fb98:	dc000017 	ldw	r16,0(sp)
  14fb9c:	dec00704 	addi	sp,sp,28
  14fba0:	f800283a 	ret

0014fba4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  14fba4:	defff504 	addi	sp,sp,-44
  14fba8:	df000a15 	stw	fp,40(sp)
  14fbac:	df000a04 	addi	fp,sp,40
  14fbb0:	e13ffc15 	stw	r4,-16(fp)
  14fbb4:	e17ffd15 	stw	r5,-12(fp)
  14fbb8:	e1bffe15 	stw	r6,-8(fp)
  14fbbc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  14fbc0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  14fbc4:	00800574 	movhi	r2,21
  14fbc8:	108bc704 	addi	r2,r2,12060
  14fbcc:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  14fbd0:	10003f26 	beq	r2,zero,14fcd0 <alt_alarm_start+0x12c>
  {
    if (alarm)
  14fbd4:	e0bffc17 	ldw	r2,-16(fp)
  14fbd8:	10003b26 	beq	r2,zero,14fcc8 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
  14fbdc:	e0bffc17 	ldw	r2,-16(fp)
  14fbe0:	e0fffe17 	ldw	r3,-8(fp)
  14fbe4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  14fbe8:	e0bffc17 	ldw	r2,-16(fp)
  14fbec:	e0ffff17 	ldw	r3,-4(fp)
  14fbf0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14fbf4:	0005303a 	rdctl	r2,status
  14fbf8:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14fbfc:	e0fff817 	ldw	r3,-32(fp)
  14fc00:	00bfff84 	movi	r2,-2
  14fc04:	1884703a 	and	r2,r3,r2
  14fc08:	1001703a 	wrctl	status,r2
  
  return context;
  14fc0c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  14fc10:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  14fc14:	00800574 	movhi	r2,21
  14fc18:	108bc804 	addi	r2,r2,12064
  14fc1c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  14fc20:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  14fc24:	e0fffd17 	ldw	r3,-12(fp)
  14fc28:	e0bff617 	ldw	r2,-40(fp)
  14fc2c:	1885883a 	add	r2,r3,r2
  14fc30:	10c00044 	addi	r3,r2,1
  14fc34:	e0bffc17 	ldw	r2,-16(fp)
  14fc38:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  14fc3c:	e0bffc17 	ldw	r2,-16(fp)
  14fc40:	10c00217 	ldw	r3,8(r2)
  14fc44:	e0bff617 	ldw	r2,-40(fp)
  14fc48:	1880042e 	bgeu	r3,r2,14fc5c <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
  14fc4c:	e0bffc17 	ldw	r2,-16(fp)
  14fc50:	00c00044 	movi	r3,1
  14fc54:	10c00405 	stb	r3,16(r2)
  14fc58:	00000206 	br	14fc64 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
  14fc5c:	e0bffc17 	ldw	r2,-16(fp)
  14fc60:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  14fc64:	e0bffc17 	ldw	r2,-16(fp)
  14fc68:	00c00574 	movhi	r3,21
  14fc6c:	18cbb804 	addi	r3,r3,12000
  14fc70:	e0fff915 	stw	r3,-28(fp)
  14fc74:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  14fc78:	e0bffa17 	ldw	r2,-24(fp)
  14fc7c:	e0fff917 	ldw	r3,-28(fp)
  14fc80:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  14fc84:	e0bff917 	ldw	r2,-28(fp)
  14fc88:	10c00017 	ldw	r3,0(r2)
  14fc8c:	e0bffa17 	ldw	r2,-24(fp)
  14fc90:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  14fc94:	e0bff917 	ldw	r2,-28(fp)
  14fc98:	10800017 	ldw	r2,0(r2)
  14fc9c:	e0fffa17 	ldw	r3,-24(fp)
  14fca0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  14fca4:	e0bff917 	ldw	r2,-28(fp)
  14fca8:	e0fffa17 	ldw	r3,-24(fp)
  14fcac:	10c00015 	stw	r3,0(r2)
  14fcb0:	e0bff717 	ldw	r2,-36(fp)
  14fcb4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14fcb8:	e0bffb17 	ldw	r2,-20(fp)
  14fcbc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  14fcc0:	0005883a 	mov	r2,zero
  14fcc4:	00000306 	br	14fcd4 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
  14fcc8:	00bffa84 	movi	r2,-22
  14fccc:	00000106 	br	14fcd4 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
  14fcd0:	00bfde84 	movi	r2,-134
  }
}
  14fcd4:	e037883a 	mov	sp,fp
  14fcd8:	df000017 	ldw	fp,0(sp)
  14fcdc:	dec00104 	addi	sp,sp,4
  14fce0:	f800283a 	ret

0014fce4 <alt_get_errno>:
  14fce4:	defffe04 	addi	sp,sp,-8
  14fce8:	dfc00115 	stw	ra,4(sp)
  14fcec:	df000015 	stw	fp,0(sp)
  14fcf0:	d839883a 	mov	fp,sp
  14fcf4:	00800574 	movhi	r2,21
  14fcf8:	108bb504 	addi	r2,r2,11988
  14fcfc:	10800017 	ldw	r2,0(r2)
  14fd00:	10000526 	beq	r2,zero,14fd18 <alt_get_errno+0x34>
  14fd04:	00800574 	movhi	r2,21
  14fd08:	108bb504 	addi	r2,r2,11988
  14fd0c:	10800017 	ldw	r2,0(r2)
  14fd10:	103ee83a 	callr	r2
  14fd14:	00000206 	br	14fd20 <alt_get_errno+0x3c>
  14fd18:	00800574 	movhi	r2,21
  14fd1c:	108bc004 	addi	r2,r2,12032
  14fd20:	e037883a 	mov	sp,fp
  14fd24:	dfc00117 	ldw	ra,4(sp)
  14fd28:	df000017 	ldw	fp,0(sp)
  14fd2c:	dec00204 	addi	sp,sp,8
  14fd30:	f800283a 	ret

0014fd34 <alt_dev_llist_insert>:
  14fd34:	defffa04 	addi	sp,sp,-24
  14fd38:	dfc00515 	stw	ra,20(sp)
  14fd3c:	df000415 	stw	fp,16(sp)
  14fd40:	df000404 	addi	fp,sp,16
  14fd44:	e13ffe15 	stw	r4,-8(fp)
  14fd48:	e17fff15 	stw	r5,-4(fp)
  14fd4c:	e0bffe17 	ldw	r2,-8(fp)
  14fd50:	10000326 	beq	r2,zero,14fd60 <alt_dev_llist_insert+0x2c>
  14fd54:	e0bffe17 	ldw	r2,-8(fp)
  14fd58:	10800217 	ldw	r2,8(r2)
  14fd5c:	1000051e 	bne	r2,zero,14fd74 <alt_dev_llist_insert+0x40>
  14fd60:	014fce40 	call	14fce4 <alt_get_errno>
  14fd64:	00c00584 	movi	r3,22
  14fd68:	10c00015 	stw	r3,0(r2)
  14fd6c:	00bffa84 	movi	r2,-22
  14fd70:	00001306 	br	14fdc0 <alt_dev_llist_insert+0x8c>
  14fd74:	e0bffe17 	ldw	r2,-8(fp)
  14fd78:	e0ffff17 	ldw	r3,-4(fp)
  14fd7c:	e0fffc15 	stw	r3,-16(fp)
  14fd80:	e0bffd15 	stw	r2,-12(fp)
  14fd84:	e0bffd17 	ldw	r2,-12(fp)
  14fd88:	e0fffc17 	ldw	r3,-16(fp)
  14fd8c:	10c00115 	stw	r3,4(r2)
  14fd90:	e0bffc17 	ldw	r2,-16(fp)
  14fd94:	10c00017 	ldw	r3,0(r2)
  14fd98:	e0bffd17 	ldw	r2,-12(fp)
  14fd9c:	10c00015 	stw	r3,0(r2)
  14fda0:	e0bffc17 	ldw	r2,-16(fp)
  14fda4:	10800017 	ldw	r2,0(r2)
  14fda8:	e0fffd17 	ldw	r3,-12(fp)
  14fdac:	10c00115 	stw	r3,4(r2)
  14fdb0:	e0bffc17 	ldw	r2,-16(fp)
  14fdb4:	e0fffd17 	ldw	r3,-12(fp)
  14fdb8:	10c00015 	stw	r3,0(r2)
  14fdbc:	0005883a 	mov	r2,zero
  14fdc0:	e037883a 	mov	sp,fp
  14fdc4:	dfc00117 	ldw	ra,4(sp)
  14fdc8:	df000017 	ldw	fp,0(sp)
  14fdcc:	dec00204 	addi	sp,sp,8
  14fdd0:	f800283a 	ret

0014fdd4 <_do_ctors>:
  14fdd4:	defffd04 	addi	sp,sp,-12
  14fdd8:	dfc00215 	stw	ra,8(sp)
  14fddc:	df000115 	stw	fp,4(sp)
  14fde0:	df000104 	addi	fp,sp,4
  14fde4:	00800574 	movhi	r2,21
  14fde8:	1083ae04 	addi	r2,r2,3768
  14fdec:	e0bfff15 	stw	r2,-4(fp)
  14fdf0:	00000606 	br	14fe0c <_do_ctors+0x38>
  14fdf4:	e0bfff17 	ldw	r2,-4(fp)
  14fdf8:	10800017 	ldw	r2,0(r2)
  14fdfc:	103ee83a 	callr	r2
  14fe00:	e0bfff17 	ldw	r2,-4(fp)
  14fe04:	10bfff04 	addi	r2,r2,-4
  14fe08:	e0bfff15 	stw	r2,-4(fp)
  14fe0c:	e0ffff17 	ldw	r3,-4(fp)
  14fe10:	00800574 	movhi	r2,21
  14fe14:	1083af04 	addi	r2,r2,3772
  14fe18:	18bff62e 	bgeu	r3,r2,14fdf4 <_do_ctors+0x20>
  14fe1c:	e037883a 	mov	sp,fp
  14fe20:	dfc00117 	ldw	ra,4(sp)
  14fe24:	df000017 	ldw	fp,0(sp)
  14fe28:	dec00204 	addi	sp,sp,8
  14fe2c:	f800283a 	ret

0014fe30 <_do_dtors>:
  14fe30:	defffd04 	addi	sp,sp,-12
  14fe34:	dfc00215 	stw	ra,8(sp)
  14fe38:	df000115 	stw	fp,4(sp)
  14fe3c:	df000104 	addi	fp,sp,4
  14fe40:	00800574 	movhi	r2,21
  14fe44:	1083ae04 	addi	r2,r2,3768
  14fe48:	e0bfff15 	stw	r2,-4(fp)
  14fe4c:	00000606 	br	14fe68 <_do_dtors+0x38>
  14fe50:	e0bfff17 	ldw	r2,-4(fp)
  14fe54:	10800017 	ldw	r2,0(r2)
  14fe58:	103ee83a 	callr	r2
  14fe5c:	e0bfff17 	ldw	r2,-4(fp)
  14fe60:	10bfff04 	addi	r2,r2,-4
  14fe64:	e0bfff15 	stw	r2,-4(fp)
  14fe68:	e0ffff17 	ldw	r3,-4(fp)
  14fe6c:	00800574 	movhi	r2,21
  14fe70:	1083af04 	addi	r2,r2,3772
  14fe74:	18bff62e 	bgeu	r3,r2,14fe50 <_do_dtors+0x20>
  14fe78:	e037883a 	mov	sp,fp
  14fe7c:	dfc00117 	ldw	ra,4(sp)
  14fe80:	df000017 	ldw	fp,0(sp)
  14fe84:	dec00204 	addi	sp,sp,8
  14fe88:	f800283a 	ret

0014fe8c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  14fe8c:	defff904 	addi	sp,sp,-28
  14fe90:	dfc00615 	stw	ra,24(sp)
  14fe94:	df000515 	stw	fp,20(sp)
  14fe98:	df000504 	addi	fp,sp,20
  14fe9c:	e13ffc15 	stw	r4,-16(fp)
  14fea0:	e17ffd15 	stw	r5,-12(fp)
  14fea4:	e1bffe15 	stw	r6,-8(fp)
  14fea8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  14feac:	e0800217 	ldw	r2,8(fp)
  14feb0:	d8800015 	stw	r2,0(sp)
  14feb4:	e13ffc17 	ldw	r4,-16(fp)
  14feb8:	e17ffd17 	ldw	r5,-12(fp)
  14febc:	e1bffe17 	ldw	r6,-8(fp)
  14fec0:	e1ffff17 	ldw	r7,-4(fp)
  14fec4:	01500640 	call	150064 <alt_iic_isr_register>
}  
  14fec8:	e037883a 	mov	sp,fp
  14fecc:	dfc00117 	ldw	ra,4(sp)
  14fed0:	df000017 	ldw	fp,0(sp)
  14fed4:	dec00204 	addi	sp,sp,8
  14fed8:	f800283a 	ret

0014fedc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  14fedc:	defff904 	addi	sp,sp,-28
  14fee0:	df000615 	stw	fp,24(sp)
  14fee4:	df000604 	addi	fp,sp,24
  14fee8:	e13ffe15 	stw	r4,-8(fp)
  14feec:	e17fff15 	stw	r5,-4(fp)
  14fef0:	e0bfff17 	ldw	r2,-4(fp)
  14fef4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14fef8:	0005303a 	rdctl	r2,status
  14fefc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14ff00:	e0fffb17 	ldw	r3,-20(fp)
  14ff04:	00bfff84 	movi	r2,-2
  14ff08:	1884703a 	and	r2,r3,r2
  14ff0c:	1001703a 	wrctl	status,r2
  
  return context;
  14ff10:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  14ff14:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  14ff18:	e0bffa17 	ldw	r2,-24(fp)
  14ff1c:	00c00044 	movi	r3,1
  14ff20:	1884983a 	sll	r2,r3,r2
  14ff24:	1007883a 	mov	r3,r2
  14ff28:	00800574 	movhi	r2,21
  14ff2c:	108bc604 	addi	r2,r2,12056
  14ff30:	10800017 	ldw	r2,0(r2)
  14ff34:	1886b03a 	or	r3,r3,r2
  14ff38:	00800574 	movhi	r2,21
  14ff3c:	108bc604 	addi	r2,r2,12056
  14ff40:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  14ff44:	00800574 	movhi	r2,21
  14ff48:	108bc604 	addi	r2,r2,12056
  14ff4c:	10800017 	ldw	r2,0(r2)
  14ff50:	100170fa 	wrctl	ienable,r2
  14ff54:	e0bffc17 	ldw	r2,-16(fp)
  14ff58:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14ff5c:	e0bffd17 	ldw	r2,-12(fp)
  14ff60:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  14ff64:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  14ff68:	e037883a 	mov	sp,fp
  14ff6c:	df000017 	ldw	fp,0(sp)
  14ff70:	dec00104 	addi	sp,sp,4
  14ff74:	f800283a 	ret

0014ff78 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  14ff78:	defff904 	addi	sp,sp,-28
  14ff7c:	df000615 	stw	fp,24(sp)
  14ff80:	df000604 	addi	fp,sp,24
  14ff84:	e13ffe15 	stw	r4,-8(fp)
  14ff88:	e17fff15 	stw	r5,-4(fp)
  14ff8c:	e0bfff17 	ldw	r2,-4(fp)
  14ff90:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  14ff94:	0005303a 	rdctl	r2,status
  14ff98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  14ff9c:	e0fffb17 	ldw	r3,-20(fp)
  14ffa0:	00bfff84 	movi	r2,-2
  14ffa4:	1884703a 	and	r2,r3,r2
  14ffa8:	1001703a 	wrctl	status,r2
  
  return context;
  14ffac:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  14ffb0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  14ffb4:	e0bffa17 	ldw	r2,-24(fp)
  14ffb8:	00c00044 	movi	r3,1
  14ffbc:	1884983a 	sll	r2,r3,r2
  14ffc0:	0084303a 	nor	r2,zero,r2
  14ffc4:	1007883a 	mov	r3,r2
  14ffc8:	00800574 	movhi	r2,21
  14ffcc:	108bc604 	addi	r2,r2,12056
  14ffd0:	10800017 	ldw	r2,0(r2)
  14ffd4:	1886703a 	and	r3,r3,r2
  14ffd8:	00800574 	movhi	r2,21
  14ffdc:	108bc604 	addi	r2,r2,12056
  14ffe0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  14ffe4:	00800574 	movhi	r2,21
  14ffe8:	108bc604 	addi	r2,r2,12056
  14ffec:	10800017 	ldw	r2,0(r2)
  14fff0:	100170fa 	wrctl	ienable,r2
  14fff4:	e0bffc17 	ldw	r2,-16(fp)
  14fff8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  14fffc:	e0bffd17 	ldw	r2,-12(fp)
  150000:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  150004:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  150008:	e037883a 	mov	sp,fp
  15000c:	df000017 	ldw	fp,0(sp)
  150010:	dec00104 	addi	sp,sp,4
  150014:	f800283a 	ret

00150018 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  150018:	defffc04 	addi	sp,sp,-16
  15001c:	df000315 	stw	fp,12(sp)
  150020:	df000304 	addi	fp,sp,12
  150024:	e13ffe15 	stw	r4,-8(fp)
  150028:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  15002c:	000530fa 	rdctl	r2,ienable
  150030:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  150034:	e0bfff17 	ldw	r2,-4(fp)
  150038:	00c00044 	movi	r3,1
  15003c:	1884983a 	sll	r2,r3,r2
  150040:	1007883a 	mov	r3,r2
  150044:	e0bffd17 	ldw	r2,-12(fp)
  150048:	1884703a 	and	r2,r3,r2
  15004c:	1004c03a 	cmpne	r2,r2,zero
  150050:	10803fcc 	andi	r2,r2,255
}
  150054:	e037883a 	mov	sp,fp
  150058:	df000017 	ldw	fp,0(sp)
  15005c:	dec00104 	addi	sp,sp,4
  150060:	f800283a 	ret

00150064 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  150064:	defff504 	addi	sp,sp,-44
  150068:	dfc00a15 	stw	ra,40(sp)
  15006c:	df000915 	stw	fp,36(sp)
  150070:	df000904 	addi	fp,sp,36
  150074:	e13ffc15 	stw	r4,-16(fp)
  150078:	e17ffd15 	stw	r5,-12(fp)
  15007c:	e1bffe15 	stw	r6,-8(fp)
  150080:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  150084:	00bffa84 	movi	r2,-22
  150088:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  15008c:	e0bffd17 	ldw	r2,-12(fp)
  150090:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  150094:	e0bff817 	ldw	r2,-32(fp)
  150098:	10800808 	cmpgei	r2,r2,32
  15009c:	1000271e 	bne	r2,zero,15013c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  1500a0:	0005303a 	rdctl	r2,status
  1500a4:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  1500a8:	e0fffa17 	ldw	r3,-24(fp)
  1500ac:	00bfff84 	movi	r2,-2
  1500b0:	1884703a 	and	r2,r3,r2
  1500b4:	1001703a 	wrctl	status,r2
  
  return context;
  1500b8:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  1500bc:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
  1500c0:	00c00574 	movhi	r3,21
  1500c4:	18cbd304 	addi	r3,r3,12108
  1500c8:	e0bff817 	ldw	r2,-32(fp)
  1500cc:	100490fa 	slli	r2,r2,3
  1500d0:	1885883a 	add	r2,r3,r2
  1500d4:	e0fffe17 	ldw	r3,-8(fp)
  1500d8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  1500dc:	00c00574 	movhi	r3,21
  1500e0:	18cbd304 	addi	r3,r3,12108
  1500e4:	e0bff817 	ldw	r2,-32(fp)
  1500e8:	100490fa 	slli	r2,r2,3
  1500ec:	1885883a 	add	r2,r3,r2
  1500f0:	10800104 	addi	r2,r2,4
  1500f4:	e0ffff17 	ldw	r3,-4(fp)
  1500f8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  1500fc:	e0bffe17 	ldw	r2,-8(fp)
  150100:	10000526 	beq	r2,zero,150118 <alt_iic_isr_register+0xb4>
  150104:	e0bff817 	ldw	r2,-32(fp)
  150108:	e13ffc17 	ldw	r4,-16(fp)
  15010c:	100b883a 	mov	r5,r2
  150110:	014fedc0 	call	14fedc <alt_ic_irq_enable>
  150114:	00000406 	br	150128 <alt_iic_isr_register+0xc4>
  150118:	e0bff817 	ldw	r2,-32(fp)
  15011c:	e13ffc17 	ldw	r4,-16(fp)
  150120:	100b883a 	mov	r5,r2
  150124:	014ff780 	call	14ff78 <alt_ic_irq_disable>
  150128:	e0bff715 	stw	r2,-36(fp)
  15012c:	e0bff917 	ldw	r2,-28(fp)
  150130:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  150134:	e0bffb17 	ldw	r2,-20(fp)
  150138:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  15013c:	e0bff717 	ldw	r2,-36(fp)
}
  150140:	e037883a 	mov	sp,fp
  150144:	dfc00117 	ldw	ra,4(sp)
  150148:	df000017 	ldw	fp,0(sp)
  15014c:	dec00204 	addi	sp,sp,8
  150150:	f800283a 	ret

00150154 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  150154:	defff904 	addi	sp,sp,-28
  150158:	dfc00615 	stw	ra,24(sp)
  15015c:	df000515 	stw	fp,20(sp)
  150160:	df000504 	addi	fp,sp,20
  150164:	e13ffc15 	stw	r4,-16(fp)
  150168:	e17ffd15 	stw	r5,-12(fp)
  15016c:	e1bffe15 	stw	r6,-8(fp)
  150170:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  150174:	e13ffd17 	ldw	r4,-12(fp)
  150178:	e17ffe17 	ldw	r5,-8(fp)
  15017c:	e1bfff17 	ldw	r6,-4(fp)
  150180:	01503a80 	call	1503a8 <open>
  150184:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  150188:	e0bffb17 	ldw	r2,-20(fp)
  15018c:	10001c16 	blt	r2,zero,150200 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  150190:	00c00574 	movhi	r3,21
  150194:	18c73204 	addi	r3,r3,7368
  150198:	e0bffb17 	ldw	r2,-20(fp)
  15019c:	10800324 	muli	r2,r2,12
  1501a0:	1885883a 	add	r2,r3,r2
  1501a4:	10c00017 	ldw	r3,0(r2)
  1501a8:	e0bffc17 	ldw	r2,-16(fp)
  1501ac:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  1501b0:	00c00574 	movhi	r3,21
  1501b4:	18c73204 	addi	r3,r3,7368
  1501b8:	e0bffb17 	ldw	r2,-20(fp)
  1501bc:	10800324 	muli	r2,r2,12
  1501c0:	1885883a 	add	r2,r3,r2
  1501c4:	10800104 	addi	r2,r2,4
  1501c8:	10c00017 	ldw	r3,0(r2)
  1501cc:	e0bffc17 	ldw	r2,-16(fp)
  1501d0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  1501d4:	00c00574 	movhi	r3,21
  1501d8:	18c73204 	addi	r3,r3,7368
  1501dc:	e0bffb17 	ldw	r2,-20(fp)
  1501e0:	10800324 	muli	r2,r2,12
  1501e4:	1885883a 	add	r2,r3,r2
  1501e8:	10800204 	addi	r2,r2,8
  1501ec:	10c00017 	ldw	r3,0(r2)
  1501f0:	e0bffc17 	ldw	r2,-16(fp)
  1501f4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  1501f8:	e13ffb17 	ldw	r4,-20(fp)
  1501fc:	014eaa80 	call	14eaa8 <alt_release_fd>
  }
} 
  150200:	e037883a 	mov	sp,fp
  150204:	dfc00117 	ldw	ra,4(sp)
  150208:	df000017 	ldw	fp,0(sp)
  15020c:	dec00204 	addi	sp,sp,8
  150210:	f800283a 	ret

00150214 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  150214:	defffb04 	addi	sp,sp,-20
  150218:	dfc00415 	stw	ra,16(sp)
  15021c:	df000315 	stw	fp,12(sp)
  150220:	df000304 	addi	fp,sp,12
  150224:	e13ffd15 	stw	r4,-12(fp)
  150228:	e17ffe15 	stw	r5,-8(fp)
  15022c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  150230:	01000574 	movhi	r4,21
  150234:	21073504 	addi	r4,r4,7380
  150238:	e17ffd17 	ldw	r5,-12(fp)
  15023c:	01800044 	movi	r6,1
  150240:	01c07fc4 	movi	r7,511
  150244:	01501540 	call	150154 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  150248:	01000574 	movhi	r4,21
  15024c:	21073204 	addi	r4,r4,7368
  150250:	e17ffe17 	ldw	r5,-8(fp)
  150254:	000d883a 	mov	r6,zero
  150258:	01c07fc4 	movi	r7,511
  15025c:	01501540 	call	150154 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  150260:	01000574 	movhi	r4,21
  150264:	21073804 	addi	r4,r4,7392
  150268:	e17fff17 	ldw	r5,-4(fp)
  15026c:	01800044 	movi	r6,1
  150270:	01c07fc4 	movi	r7,511
  150274:	01501540 	call	150154 <alt_open_fd>
}  
  150278:	e037883a 	mov	sp,fp
  15027c:	dfc00117 	ldw	ra,4(sp)
  150280:	df000017 	ldw	fp,0(sp)
  150284:	dec00204 	addi	sp,sp,8
  150288:	f800283a 	ret

0015028c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  15028c:	defffe04 	addi	sp,sp,-8
  150290:	dfc00115 	stw	ra,4(sp)
  150294:	df000015 	stw	fp,0(sp)
  150298:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  15029c:	00800574 	movhi	r2,21
  1502a0:	108bb504 	addi	r2,r2,11988
  1502a4:	10800017 	ldw	r2,0(r2)
  1502a8:	10000526 	beq	r2,zero,1502c0 <alt_get_errno+0x34>
  1502ac:	00800574 	movhi	r2,21
  1502b0:	108bb504 	addi	r2,r2,11988
  1502b4:	10800017 	ldw	r2,0(r2)
  1502b8:	103ee83a 	callr	r2
  1502bc:	00000206 	br	1502c8 <alt_get_errno+0x3c>
  1502c0:	00800574 	movhi	r2,21
  1502c4:	108bc004 	addi	r2,r2,12032
}
  1502c8:	e037883a 	mov	sp,fp
  1502cc:	dfc00117 	ldw	ra,4(sp)
  1502d0:	df000017 	ldw	fp,0(sp)
  1502d4:	dec00204 	addi	sp,sp,8
  1502d8:	f800283a 	ret

001502dc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  1502dc:	defffd04 	addi	sp,sp,-12
  1502e0:	df000215 	stw	fp,8(sp)
  1502e4:	df000204 	addi	fp,sp,8
  1502e8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  1502ec:	e0bfff17 	ldw	r2,-4(fp)
  1502f0:	10800217 	ldw	r2,8(r2)
  1502f4:	10d00034 	orhi	r3,r2,16384
  1502f8:	e0bfff17 	ldw	r2,-4(fp)
  1502fc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  150300:	e03ffe15 	stw	zero,-8(fp)
  150304:	00001d06 	br	15037c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  150308:	00c00574 	movhi	r3,21
  15030c:	18c73204 	addi	r3,r3,7368
  150310:	e0bffe17 	ldw	r2,-8(fp)
  150314:	10800324 	muli	r2,r2,12
  150318:	1885883a 	add	r2,r3,r2
  15031c:	10c00017 	ldw	r3,0(r2)
  150320:	e0bfff17 	ldw	r2,-4(fp)
  150324:	10800017 	ldw	r2,0(r2)
  150328:	1880111e 	bne	r3,r2,150370 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  15032c:	00c00574 	movhi	r3,21
  150330:	18c73204 	addi	r3,r3,7368
  150334:	e0bffe17 	ldw	r2,-8(fp)
  150338:	10800324 	muli	r2,r2,12
  15033c:	1885883a 	add	r2,r3,r2
  150340:	10800204 	addi	r2,r2,8
  150344:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  150348:	1000090e 	bge	r2,zero,150370 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  15034c:	e0bffe17 	ldw	r2,-8(fp)
  150350:	10c00324 	muli	r3,r2,12
  150354:	00800574 	movhi	r2,21
  150358:	10873204 	addi	r2,r2,7368
  15035c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  150360:	e0bfff17 	ldw	r2,-4(fp)
  150364:	18800226 	beq	r3,r2,150370 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  150368:	00bffcc4 	movi	r2,-13
  15036c:	00000a06 	br	150398 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  150370:	e0bffe17 	ldw	r2,-8(fp)
  150374:	10800044 	addi	r2,r2,1
  150378:	e0bffe15 	stw	r2,-8(fp)
  15037c:	00800574 	movhi	r2,21
  150380:	108bb404 	addi	r2,r2,11984
  150384:	10800017 	ldw	r2,0(r2)
  150388:	1007883a 	mov	r3,r2
  15038c:	e0bffe17 	ldw	r2,-8(fp)
  150390:	18bfdd2e 	bgeu	r3,r2,150308 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  150394:	0005883a 	mov	r2,zero
}
  150398:	e037883a 	mov	sp,fp
  15039c:	df000017 	ldw	fp,0(sp)
  1503a0:	dec00104 	addi	sp,sp,4
  1503a4:	f800283a 	ret

001503a8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  1503a8:	defff604 	addi	sp,sp,-40
  1503ac:	dfc00915 	stw	ra,36(sp)
  1503b0:	df000815 	stw	fp,32(sp)
  1503b4:	df000804 	addi	fp,sp,32
  1503b8:	e13ffd15 	stw	r4,-12(fp)
  1503bc:	e17ffe15 	stw	r5,-8(fp)
  1503c0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  1503c4:	00bfffc4 	movi	r2,-1
  1503c8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  1503cc:	00bffb44 	movi	r2,-19
  1503d0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  1503d4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  1503d8:	e13ffd17 	ldw	r4,-12(fp)
  1503dc:	01400574 	movhi	r5,21
  1503e0:	294bb204 	addi	r5,r5,11976
  1503e4:	01508380 	call	150838 <alt_find_dev>
  1503e8:	e0bff815 	stw	r2,-32(fp)
  1503ec:	e0bff817 	ldw	r2,-32(fp)
  1503f0:	1000051e 	bne	r2,zero,150408 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  1503f4:	e13ffd17 	ldw	r4,-12(fp)
  1503f8:	01508c80 	call	1508c8 <alt_find_file>
  1503fc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  150400:	00800044 	movi	r2,1
  150404:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  150408:	e0bff817 	ldw	r2,-32(fp)
  15040c:	10002926 	beq	r2,zero,1504b4 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
  150410:	e13ff817 	ldw	r4,-32(fp)
  150414:	01509dc0 	call	1509dc <alt_get_fd>
  150418:	e0bff915 	stw	r2,-28(fp)
  15041c:	e0bff917 	ldw	r2,-28(fp)
  150420:	1000030e 	bge	r2,zero,150430 <open+0x88>
    {
      status = index;
  150424:	e0bff917 	ldw	r2,-28(fp)
  150428:	e0bffa15 	stw	r2,-24(fp)
  15042c:	00002306 	br	1504bc <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
  150430:	e0bff917 	ldw	r2,-28(fp)
  150434:	10c00324 	muli	r3,r2,12
  150438:	00800574 	movhi	r2,21
  15043c:	10873204 	addi	r2,r2,7368
  150440:	1885883a 	add	r2,r3,r2
  150444:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  150448:	e0fffe17 	ldw	r3,-8(fp)
  15044c:	00900034 	movhi	r2,16384
  150450:	10bfffc4 	addi	r2,r2,-1
  150454:	1886703a 	and	r3,r3,r2
  150458:	e0bffc17 	ldw	r2,-16(fp)
  15045c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  150460:	e0bffb17 	ldw	r2,-20(fp)
  150464:	1000051e 	bne	r2,zero,15047c <open+0xd4>
  150468:	e13ffc17 	ldw	r4,-16(fp)
  15046c:	01502dc0 	call	1502dc <alt_file_locked>
  150470:	e0bffa15 	stw	r2,-24(fp)
  150474:	e0bffa17 	ldw	r2,-24(fp)
  150478:	10001016 	blt	r2,zero,1504bc <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  15047c:	e0bff817 	ldw	r2,-32(fp)
  150480:	10800317 	ldw	r2,12(r2)
  150484:	10000826 	beq	r2,zero,1504a8 <open+0x100>
  150488:	e0bff817 	ldw	r2,-32(fp)
  15048c:	10800317 	ldw	r2,12(r2)
  150490:	e13ffc17 	ldw	r4,-16(fp)
  150494:	e17ffd17 	ldw	r5,-12(fp)
  150498:	e1bffe17 	ldw	r6,-8(fp)
  15049c:	e1ffff17 	ldw	r7,-4(fp)
  1504a0:	103ee83a 	callr	r2
  1504a4:	00000106 	br	1504ac <open+0x104>
  1504a8:	0005883a 	mov	r2,zero
  1504ac:	e0bffa15 	stw	r2,-24(fp)
  1504b0:	00000206 	br	1504bc <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
  1504b4:	00bffb44 	movi	r2,-19
  1504b8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  1504bc:	e0bffa17 	ldw	r2,-24(fp)
  1504c0:	1000080e 	bge	r2,zero,1504e4 <open+0x13c>
  {
    alt_release_fd (index);  
  1504c4:	e13ff917 	ldw	r4,-28(fp)
  1504c8:	014eaa80 	call	14eaa8 <alt_release_fd>
    ALT_ERRNO = -status;
  1504cc:	015028c0 	call	15028c <alt_get_errno>
  1504d0:	e0fffa17 	ldw	r3,-24(fp)
  1504d4:	00c7c83a 	sub	r3,zero,r3
  1504d8:	10c00015 	stw	r3,0(r2)
    return -1;
  1504dc:	00bfffc4 	movi	r2,-1
  1504e0:	00000106 	br	1504e8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  1504e4:	e0bff917 	ldw	r2,-28(fp)
}
  1504e8:	e037883a 	mov	sp,fp
  1504ec:	dfc00117 	ldw	ra,4(sp)
  1504f0:	df000017 	ldw	fp,0(sp)
  1504f4:	dec00204 	addi	sp,sp,8
  1504f8:	f800283a 	ret

001504fc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  1504fc:	defffa04 	addi	sp,sp,-24
  150500:	df000515 	stw	fp,20(sp)
  150504:	df000504 	addi	fp,sp,20
  150508:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  15050c:	0005303a 	rdctl	r2,status
  150510:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  150514:	e0fffc17 	ldw	r3,-16(fp)
  150518:	00bfff84 	movi	r2,-2
  15051c:	1884703a 	and	r2,r3,r2
  150520:	1001703a 	wrctl	status,r2
  
  return context;
  150524:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  150528:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  15052c:	e0bfff17 	ldw	r2,-4(fp)
  150530:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  150534:	e0bffd17 	ldw	r2,-12(fp)
  150538:	10800017 	ldw	r2,0(r2)
  15053c:	e0fffd17 	ldw	r3,-12(fp)
  150540:	18c00117 	ldw	r3,4(r3)
  150544:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  150548:	e0bffd17 	ldw	r2,-12(fp)
  15054c:	10800117 	ldw	r2,4(r2)
  150550:	e0fffd17 	ldw	r3,-12(fp)
  150554:	18c00017 	ldw	r3,0(r3)
  150558:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  15055c:	e0bffd17 	ldw	r2,-12(fp)
  150560:	e0fffd17 	ldw	r3,-12(fp)
  150564:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  150568:	e0bffd17 	ldw	r2,-12(fp)
  15056c:	e0fffd17 	ldw	r3,-12(fp)
  150570:	10c00015 	stw	r3,0(r2)
  150574:	e0bffb17 	ldw	r2,-20(fp)
  150578:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  15057c:	e0bffe17 	ldw	r2,-8(fp)
  150580:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  150584:	e037883a 	mov	sp,fp
  150588:	df000017 	ldw	fp,0(sp)
  15058c:	dec00104 	addi	sp,sp,4
  150590:	f800283a 	ret

00150594 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  150594:	defffb04 	addi	sp,sp,-20
  150598:	dfc00415 	stw	ra,16(sp)
  15059c:	df000315 	stw	fp,12(sp)
  1505a0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  1505a4:	d0a00e17 	ldw	r2,-32712(gp)
  1505a8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  1505ac:	d0a01e17 	ldw	r2,-32648(gp)
  1505b0:	10800044 	addi	r2,r2,1
  1505b4:	d0a01e15 	stw	r2,-32648(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  1505b8:	00002e06 	br	150674 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  1505bc:	e0bffd17 	ldw	r2,-12(fp)
  1505c0:	10800017 	ldw	r2,0(r2)
  1505c4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  1505c8:	e0bffd17 	ldw	r2,-12(fp)
  1505cc:	10800403 	ldbu	r2,16(r2)
  1505d0:	10803fcc 	andi	r2,r2,255
  1505d4:	10000426 	beq	r2,zero,1505e8 <alt_tick+0x54>
  1505d8:	d0a01e17 	ldw	r2,-32648(gp)
  1505dc:	1000021e 	bne	r2,zero,1505e8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  1505e0:	e0bffd17 	ldw	r2,-12(fp)
  1505e4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  1505e8:	e0bffd17 	ldw	r2,-12(fp)
  1505ec:	10800217 	ldw	r2,8(r2)
  1505f0:	d0e01e17 	ldw	r3,-32648(gp)
  1505f4:	18801d36 	bltu	r3,r2,15066c <alt_tick+0xd8>
  1505f8:	e0bffd17 	ldw	r2,-12(fp)
  1505fc:	10800403 	ldbu	r2,16(r2)
  150600:	10803fcc 	andi	r2,r2,255
  150604:	1000191e 	bne	r2,zero,15066c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  150608:	e0bffd17 	ldw	r2,-12(fp)
  15060c:	10800317 	ldw	r2,12(r2)
  150610:	e0fffd17 	ldw	r3,-12(fp)
  150614:	18c00517 	ldw	r3,20(r3)
  150618:	1809883a 	mov	r4,r3
  15061c:	103ee83a 	callr	r2
  150620:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  150624:	e0bfff17 	ldw	r2,-4(fp)
  150628:	1000031e 	bne	r2,zero,150638 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  15062c:	e13ffd17 	ldw	r4,-12(fp)
  150630:	01504fc0 	call	1504fc <alt_alarm_stop>
  150634:	00000d06 	br	15066c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  150638:	e0bffd17 	ldw	r2,-12(fp)
  15063c:	10c00217 	ldw	r3,8(r2)
  150640:	e0bfff17 	ldw	r2,-4(fp)
  150644:	1887883a 	add	r3,r3,r2
  150648:	e0bffd17 	ldw	r2,-12(fp)
  15064c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  150650:	e0bffd17 	ldw	r2,-12(fp)
  150654:	10c00217 	ldw	r3,8(r2)
  150658:	d0a01e17 	ldw	r2,-32648(gp)
  15065c:	1880032e 	bgeu	r3,r2,15066c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  150660:	e0bffd17 	ldw	r2,-12(fp)
  150664:	00c00044 	movi	r3,1
  150668:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  15066c:	e0bffe17 	ldw	r2,-8(fp)
  150670:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  150674:	e0fffd17 	ldw	r3,-12(fp)
  150678:	d0a00e04 	addi	r2,gp,-32712
  15067c:	18bfcf1e 	bne	r3,r2,1505bc <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  150680:	0001883a 	nop
}
  150684:	e037883a 	mov	sp,fp
  150688:	dfc00117 	ldw	ra,4(sp)
  15068c:	df000017 	ldw	fp,0(sp)
  150690:	dec00204 	addi	sp,sp,8
  150694:	f800283a 	ret

00150698 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  150698:	deffff04 	addi	sp,sp,-4
  15069c:	df000015 	stw	fp,0(sp)
  1506a0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  1506a4:	000170fa 	wrctl	ienable,zero
}
  1506a8:	e037883a 	mov	sp,fp
  1506ac:	df000017 	ldw	fp,0(sp)
  1506b0:	dec00104 	addi	sp,sp,4
  1506b4:	f800283a 	ret

001506b8 <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
  1506b8:	defff904 	addi	sp,sp,-28
  1506bc:	df000615 	stw	fp,24(sp)
  1506c0:	df000604 	addi	fp,sp,24
  1506c4:	e13ffe15 	stw	r4,-8(fp)
  1506c8:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
  1506cc:	e03ffa15 	stw	zero,-24(fp)
  1506d0:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
  1506d4:	000b883a 	mov	r5,zero
  1506d8:	e13ffe17 	ldw	r4,-8(fp)
  1506dc:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
  1506e0:	e13fff17 	ldw	r4,-4(fp)
  1506e4:	2008913a 	slli	r4,r4,4
  1506e8:	e17ffe17 	ldw	r5,-8(fp)
  1506ec:	2909883a 	add	r4,r5,r4
  1506f0:	21000037 	ldwio	r4,0(r4)
  1506f4:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
  1506f8:	e13fff17 	ldw	r4,-4(fp)
  1506fc:	2008913a 	slli	r4,r4,4
  150700:	21000104 	addi	r4,r4,4
  150704:	e17ffe17 	ldw	r5,-8(fp)
  150708:	2909883a 	add	r4,r5,r4
  15070c:	21000037 	ldwio	r4,0(r4)
  150710:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
  150714:	e13ffd17 	ldw	r4,-12(fp)
  150718:	2011883a 	mov	r8,r4
  15071c:	0013883a 	mov	r9,zero
  150720:	400e983a 	sll	r7,r8,zero
  150724:	000d883a 	mov	r6,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  150728:	e13ffc17 	ldw	r4,-16(fp)
  15072c:	2005883a 	mov	r2,r4
  150730:	0007883a 	mov	r3,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
  150734:	3088b03a 	or	r4,r6,r2
  150738:	e13ffa15 	stw	r4,-24(fp)
  15073c:	38c4b03a 	or	r2,r7,r3
  150740:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
  150744:	e17ffa17 	ldw	r5,-24(fp)
  150748:	e1bffb17 	ldw	r6,-20(fp)
  15074c:	2807883a 	mov	r3,r5
  150750:	3009883a 	mov	r4,r6
}
  150754:	1805883a 	mov	r2,r3
  150758:	2007883a 	mov	r3,r4
  15075c:	e037883a 	mov	sp,fp
  150760:	df000017 	ldw	fp,0(sp)
  150764:	dec00104 	addi	sp,sp,4
  150768:	f800283a 	ret

0015076c <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
  15076c:	defffd04 	addi	sp,sp,-12
  150770:	dfc00215 	stw	ra,8(sp)
  150774:	df000115 	stw	fp,4(sp)
  150778:	df000104 	addi	fp,sp,4
  15077c:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
  150780:	e13fff17 	ldw	r4,-4(fp)
  150784:	000b883a 	mov	r5,zero
  150788:	01506b80 	call	1506b8 <perf_get_section_time>
  15078c:	100b883a 	mov	r5,r2
  150790:	180d883a 	mov	r6,r3
  150794:	2807883a 	mov	r3,r5
  150798:	3009883a 	mov	r4,r6
}
  15079c:	1805883a 	mov	r2,r3
  1507a0:	2007883a 	mov	r3,r4
  1507a4:	e037883a 	mov	sp,fp
  1507a8:	dfc00117 	ldw	ra,4(sp)
  1507ac:	df000017 	ldw	fp,0(sp)
  1507b0:	dec00204 	addi	sp,sp,8
  1507b4:	f800283a 	ret

001507b8 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
  1507b8:	defffd04 	addi	sp,sp,-12
  1507bc:	df000215 	stw	fp,8(sp)
  1507c0:	df000204 	addi	fp,sp,8
  1507c4:	e13ffe15 	stw	r4,-8(fp)
  1507c8:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
  1507cc:	e0bfff17 	ldw	r2,-4(fp)
  1507d0:	1004913a 	slli	r2,r2,4
  1507d4:	10800204 	addi	r2,r2,8
  1507d8:	e0fffe17 	ldw	r3,-8(fp)
  1507dc:	1885883a 	add	r2,r3,r2
  1507e0:	10800037 	ldwio	r2,0(r2)
}
  1507e4:	e037883a 	mov	sp,fp
  1507e8:	df000017 	ldw	fp,0(sp)
  1507ec:	dec00104 	addi	sp,sp,4
  1507f0:	f800283a 	ret

001507f4 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
  1507f4:	deffff04 	addi	sp,sp,-4
  1507f8:	df000015 	stw	fp,0(sp)
  1507fc:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
#else
    return (void*)0;
  150800:	0005883a 	mov	r2,zero
#endif
}
  150804:	e037883a 	mov	sp,fp
  150808:	df000017 	ldw	fp,0(sp)
  15080c:	dec00104 	addi	sp,sp,4
  150810:	f800283a 	ret

00150814 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
  150814:	deffff04 	addi	sp,sp,-4
  150818:	df000015 	stw	fp,0(sp)
  15081c:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
  150820:	00805f74 	movhi	r2,381
  150824:	109e1004 	addi	r2,r2,30784
}
  150828:	e037883a 	mov	sp,fp
  15082c:	df000017 	ldw	fp,0(sp)
  150830:	dec00104 	addi	sp,sp,4
  150834:	f800283a 	ret

00150838 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  150838:	defffa04 	addi	sp,sp,-24
  15083c:	dfc00515 	stw	ra,20(sp)
  150840:	df000415 	stw	fp,16(sp)
  150844:	df000404 	addi	fp,sp,16
  150848:	e13ffe15 	stw	r4,-8(fp)
  15084c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  150850:	e0bfff17 	ldw	r2,-4(fp)
  150854:	10800017 	ldw	r2,0(r2)
  150858:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  15085c:	e13ffe17 	ldw	r4,-8(fp)
  150860:	01424a80 	call	1424a8 <strlen>
  150864:	10800044 	addi	r2,r2,1
  150868:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  15086c:	00000d06 	br	1508a4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  150870:	e0bffc17 	ldw	r2,-16(fp)
  150874:	10c00217 	ldw	r3,8(r2)
  150878:	e0bffd17 	ldw	r2,-12(fp)
  15087c:	1809883a 	mov	r4,r3
  150880:	e17ffe17 	ldw	r5,-8(fp)
  150884:	100d883a 	mov	r6,r2
  150888:	0150adc0 	call	150adc <memcmp>
  15088c:	1000021e 	bne	r2,zero,150898 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  150890:	e0bffc17 	ldw	r2,-16(fp)
  150894:	00000706 	br	1508b4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  150898:	e0bffc17 	ldw	r2,-16(fp)
  15089c:	10800017 	ldw	r2,0(r2)
  1508a0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  1508a4:	e0fffc17 	ldw	r3,-16(fp)
  1508a8:	e0bfff17 	ldw	r2,-4(fp)
  1508ac:	18bff01e 	bne	r3,r2,150870 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  1508b0:	0005883a 	mov	r2,zero
}
  1508b4:	e037883a 	mov	sp,fp
  1508b8:	dfc00117 	ldw	ra,4(sp)
  1508bc:	df000017 	ldw	fp,0(sp)
  1508c0:	dec00204 	addi	sp,sp,8
  1508c4:	f800283a 	ret

001508c8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  1508c8:	defffb04 	addi	sp,sp,-20
  1508cc:	dfc00415 	stw	ra,16(sp)
  1508d0:	df000315 	stw	fp,12(sp)
  1508d4:	df000304 	addi	fp,sp,12
  1508d8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  1508dc:	00800574 	movhi	r2,21
  1508e0:	108bb004 	addi	r2,r2,11968
  1508e4:	10800017 	ldw	r2,0(r2)
  1508e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  1508ec:	00003106 	br	1509b4 <alt_find_file+0xec>
  {
    len = strlen(next->name);
  1508f0:	e0bffd17 	ldw	r2,-12(fp)
  1508f4:	10800217 	ldw	r2,8(r2)
  1508f8:	1009883a 	mov	r4,r2
  1508fc:	01424a80 	call	1424a8 <strlen>
  150900:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  150904:	e0bffd17 	ldw	r2,-12(fp)
  150908:	10c00217 	ldw	r3,8(r2)
  15090c:	e0bffe17 	ldw	r2,-8(fp)
  150910:	10bfffc4 	addi	r2,r2,-1
  150914:	1885883a 	add	r2,r3,r2
  150918:	10800003 	ldbu	r2,0(r2)
  15091c:	10803fcc 	andi	r2,r2,255
  150920:	1080201c 	xori	r2,r2,128
  150924:	10bfe004 	addi	r2,r2,-128
  150928:	10800bd8 	cmpnei	r2,r2,47
  15092c:	1000031e 	bne	r2,zero,15093c <alt_find_file+0x74>
    {
      len -= 1;
  150930:	e0bffe17 	ldw	r2,-8(fp)
  150934:	10bfffc4 	addi	r2,r2,-1
  150938:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  15093c:	e0bffe17 	ldw	r2,-8(fp)
  150940:	e0ffff17 	ldw	r3,-4(fp)
  150944:	1885883a 	add	r2,r3,r2
  150948:	10800003 	ldbu	r2,0(r2)
  15094c:	10803fcc 	andi	r2,r2,255
  150950:	1080201c 	xori	r2,r2,128
  150954:	10bfe004 	addi	r2,r2,-128
  150958:	10800be0 	cmpeqi	r2,r2,47
  15095c:	1000081e 	bne	r2,zero,150980 <alt_find_file+0xb8>
  150960:	e0bffe17 	ldw	r2,-8(fp)
  150964:	e0ffff17 	ldw	r3,-4(fp)
  150968:	1885883a 	add	r2,r3,r2
  15096c:	10800003 	ldbu	r2,0(r2)
  150970:	10803fcc 	andi	r2,r2,255
  150974:	1080201c 	xori	r2,r2,128
  150978:	10bfe004 	addi	r2,r2,-128
  15097c:	10000a1e 	bne	r2,zero,1509a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
  150980:	e0bffd17 	ldw	r2,-12(fp)
  150984:	10c00217 	ldw	r3,8(r2)
  150988:	e0bffe17 	ldw	r2,-8(fp)
  15098c:	1809883a 	mov	r4,r3
  150990:	e17fff17 	ldw	r5,-4(fp)
  150994:	100d883a 	mov	r6,r2
  150998:	0150adc0 	call	150adc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  15099c:	1000021e 	bne	r2,zero,1509a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  1509a0:	e0bffd17 	ldw	r2,-12(fp)
  1509a4:	00000806 	br	1509c8 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
  1509a8:	e0bffd17 	ldw	r2,-12(fp)
  1509ac:	10800017 	ldw	r2,0(r2)
  1509b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  1509b4:	e0fffd17 	ldw	r3,-12(fp)
  1509b8:	00800574 	movhi	r2,21
  1509bc:	108bb004 	addi	r2,r2,11968
  1509c0:	18bfcb1e 	bne	r3,r2,1508f0 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  1509c4:	0005883a 	mov	r2,zero
}
  1509c8:	e037883a 	mov	sp,fp
  1509cc:	dfc00117 	ldw	ra,4(sp)
  1509d0:	df000017 	ldw	fp,0(sp)
  1509d4:	dec00204 	addi	sp,sp,8
  1509d8:	f800283a 	ret

001509dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  1509dc:	defffc04 	addi	sp,sp,-16
  1509e0:	df000315 	stw	fp,12(sp)
  1509e4:	df000304 	addi	fp,sp,12
  1509e8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  1509ec:	00bffa04 	movi	r2,-24
  1509f0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  1509f4:	e03ffd15 	stw	zero,-12(fp)
  1509f8:	00001d06 	br	150a70 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  1509fc:	00c00574 	movhi	r3,21
  150a00:	18c73204 	addi	r3,r3,7368
  150a04:	e0bffd17 	ldw	r2,-12(fp)
  150a08:	10800324 	muli	r2,r2,12
  150a0c:	1885883a 	add	r2,r3,r2
  150a10:	10800017 	ldw	r2,0(r2)
  150a14:	1000131e 	bne	r2,zero,150a64 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  150a18:	00c00574 	movhi	r3,21
  150a1c:	18c73204 	addi	r3,r3,7368
  150a20:	e0bffd17 	ldw	r2,-12(fp)
  150a24:	10800324 	muli	r2,r2,12
  150a28:	1885883a 	add	r2,r3,r2
  150a2c:	e0ffff17 	ldw	r3,-4(fp)
  150a30:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  150a34:	00800574 	movhi	r2,21
  150a38:	108bb404 	addi	r2,r2,11984
  150a3c:	10c00017 	ldw	r3,0(r2)
  150a40:	e0bffd17 	ldw	r2,-12(fp)
  150a44:	1880040e 	bge	r3,r2,150a58 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  150a48:	00800574 	movhi	r2,21
  150a4c:	108bb404 	addi	r2,r2,11984
  150a50:	e0fffd17 	ldw	r3,-12(fp)
  150a54:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
  150a58:	e0bffd17 	ldw	r2,-12(fp)
  150a5c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  150a60:	00000606 	br	150a7c <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  150a64:	e0bffd17 	ldw	r2,-12(fp)
  150a68:	10800044 	addi	r2,r2,1
  150a6c:	e0bffd15 	stw	r2,-12(fp)
  150a70:	e0bffd17 	ldw	r2,-12(fp)
  150a74:	10800810 	cmplti	r2,r2,32
  150a78:	103fe01e 	bne	r2,zero,1509fc <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  150a7c:	e0bffe17 	ldw	r2,-8(fp)
}
  150a80:	e037883a 	mov	sp,fp
  150a84:	df000017 	ldw	fp,0(sp)
  150a88:	dec00104 	addi	sp,sp,4
  150a8c:	f800283a 	ret

00150a90 <atexit>:
  150a90:	200b883a 	mov	r5,r4
  150a94:	000d883a 	mov	r6,zero
  150a98:	0009883a 	mov	r4,zero
  150a9c:	000f883a 	mov	r7,zero
  150aa0:	0150b581 	jmpi	150b58 <__register_exitproc>

00150aa4 <exit>:
  150aa4:	defffe04 	addi	sp,sp,-8
  150aa8:	000b883a 	mov	r5,zero
  150aac:	dc000015 	stw	r16,0(sp)
  150ab0:	dfc00115 	stw	ra,4(sp)
  150ab4:	2021883a 	mov	r16,r4
  150ab8:	0150c740 	call	150c74 <__call_exitprocs>
  150abc:	00800574 	movhi	r2,21
  150ac0:	108baa04 	addi	r2,r2,11944
  150ac4:	11000017 	ldw	r4,0(r2)
  150ac8:	20800f17 	ldw	r2,60(r4)
  150acc:	10000126 	beq	r2,zero,150ad4 <exit+0x30>
  150ad0:	103ee83a 	callr	r2
  150ad4:	8009883a 	mov	r4,r16
  150ad8:	0150e880 	call	150e88 <_exit>

00150adc <memcmp>:
  150adc:	01c000c4 	movi	r7,3
  150ae0:	3980192e 	bgeu	r7,r6,150b48 <memcmp+0x6c>
  150ae4:	2144b03a 	or	r2,r4,r5
  150ae8:	11c4703a 	and	r2,r2,r7
  150aec:	10000f26 	beq	r2,zero,150b2c <memcmp+0x50>
  150af0:	21c00003 	ldbu	r7,0(r4)
  150af4:	28800003 	ldbu	r2,0(r5)
  150af8:	3880151e 	bne	r7,r2,150b50 <memcmp+0x74>
  150afc:	30ffff84 	addi	r3,r6,-2
  150b00:	01bfffc4 	movi	r6,-1
  150b04:	00000406 	br	150b18 <memcmp+0x3c>
  150b08:	21c00003 	ldbu	r7,0(r4)
  150b0c:	28800003 	ldbu	r2,0(r5)
  150b10:	18ffffc4 	addi	r3,r3,-1
  150b14:	38800e1e 	bne	r7,r2,150b50 <memcmp+0x74>
  150b18:	21000044 	addi	r4,r4,1
  150b1c:	29400044 	addi	r5,r5,1
  150b20:	19bff91e 	bne	r3,r6,150b08 <memcmp+0x2c>
  150b24:	0005883a 	mov	r2,zero
  150b28:	f800283a 	ret
  150b2c:	20c00017 	ldw	r3,0(r4)
  150b30:	28800017 	ldw	r2,0(r5)
  150b34:	1880041e 	bne	r3,r2,150b48 <memcmp+0x6c>
  150b38:	31bfff04 	addi	r6,r6,-4
  150b3c:	21000104 	addi	r4,r4,4
  150b40:	29400104 	addi	r5,r5,4
  150b44:	39bff936 	bltu	r7,r6,150b2c <memcmp+0x50>
  150b48:	303fe91e 	bne	r6,zero,150af0 <memcmp+0x14>
  150b4c:	003ff506 	br	150b24 <memcmp+0x48>
  150b50:	3885c83a 	sub	r2,r7,r2
  150b54:	f800283a 	ret

00150b58 <__register_exitproc>:
  150b58:	defffa04 	addi	sp,sp,-24
  150b5c:	00800574 	movhi	r2,21
  150b60:	108baa04 	addi	r2,r2,11944
  150b64:	dc000315 	stw	r16,12(sp)
  150b68:	14000017 	ldw	r16,0(r2)
  150b6c:	dc400415 	stw	r17,16(sp)
  150b70:	dfc00515 	stw	ra,20(sp)
  150b74:	80805217 	ldw	r2,328(r16)
  150b78:	2023883a 	mov	r17,r4
  150b7c:	10003a26 	beq	r2,zero,150c68 <__register_exitproc+0x110>
  150b80:	10c00117 	ldw	r3,4(r2)
  150b84:	020007c4 	movi	r8,31
  150b88:	40c0190e 	bge	r8,r3,150bf0 <__register_exitproc+0x98>
  150b8c:	00800034 	movhi	r2,0
  150b90:	10800004 	addi	r2,r2,0
  150b94:	1000061e 	bne	r2,zero,150bb0 <__register_exitproc+0x58>
  150b98:	00bfffc4 	movi	r2,-1
  150b9c:	dfc00517 	ldw	ra,20(sp)
  150ba0:	dc400417 	ldw	r17,16(sp)
  150ba4:	dc000317 	ldw	r16,12(sp)
  150ba8:	dec00604 	addi	sp,sp,24
  150bac:	f800283a 	ret
  150bb0:	01006404 	movi	r4,400
  150bb4:	d9400015 	stw	r5,0(sp)
  150bb8:	d9800115 	stw	r6,4(sp)
  150bbc:	d9c00215 	stw	r7,8(sp)
  150bc0:	00000000 	call	0 <__alt_mem_onchip_memory2-0x140000>
  150bc4:	d9400017 	ldw	r5,0(sp)
  150bc8:	d9800117 	ldw	r6,4(sp)
  150bcc:	d9c00217 	ldw	r7,8(sp)
  150bd0:	103ff126 	beq	r2,zero,150b98 <__register_exitproc+0x40>
  150bd4:	81005217 	ldw	r4,328(r16)
  150bd8:	10000115 	stw	zero,4(r2)
  150bdc:	0007883a 	mov	r3,zero
  150be0:	11000015 	stw	r4,0(r2)
  150be4:	80805215 	stw	r2,328(r16)
  150be8:	10006215 	stw	zero,392(r2)
  150bec:	10006315 	stw	zero,396(r2)
  150bf0:	88000d1e 	bne	r17,zero,150c28 <__register_exitproc+0xd0>
  150bf4:	19000084 	addi	r4,r3,2
  150bf8:	2109883a 	add	r4,r4,r4
  150bfc:	18c00044 	addi	r3,r3,1
  150c00:	2109883a 	add	r4,r4,r4
  150c04:	10c00115 	stw	r3,4(r2)
  150c08:	1105883a 	add	r2,r2,r4
  150c0c:	11400015 	stw	r5,0(r2)
  150c10:	0005883a 	mov	r2,zero
  150c14:	dfc00517 	ldw	ra,20(sp)
  150c18:	dc400417 	ldw	r17,16(sp)
  150c1c:	dc000317 	ldw	r16,12(sp)
  150c20:	dec00604 	addi	sp,sp,24
  150c24:	f800283a 	ret
  150c28:	18c9883a 	add	r4,r3,r3
  150c2c:	2109883a 	add	r4,r4,r4
  150c30:	1109883a 	add	r4,r2,r4
  150c34:	21802215 	stw	r6,136(r4)
  150c38:	01800044 	movi	r6,1
  150c3c:	12006217 	ldw	r8,392(r2)
  150c40:	30cc983a 	sll	r6,r6,r3
  150c44:	4190b03a 	or	r8,r8,r6
  150c48:	12006215 	stw	r8,392(r2)
  150c4c:	21c04215 	stw	r7,264(r4)
  150c50:	01000084 	movi	r4,2
  150c54:	893fe71e 	bne	r17,r4,150bf4 <__register_exitproc+0x9c>
  150c58:	11006317 	ldw	r4,396(r2)
  150c5c:	218cb03a 	or	r6,r4,r6
  150c60:	11806315 	stw	r6,396(r2)
  150c64:	003fe306 	br	150bf4 <__register_exitproc+0x9c>
  150c68:	80805304 	addi	r2,r16,332
  150c6c:	80805215 	stw	r2,328(r16)
  150c70:	003fc306 	br	150b80 <__register_exitproc+0x28>

00150c74 <__call_exitprocs>:
  150c74:	00800574 	movhi	r2,21
  150c78:	108baa04 	addi	r2,r2,11944
  150c7c:	10800017 	ldw	r2,0(r2)
  150c80:	defff304 	addi	sp,sp,-52
  150c84:	df000b15 	stw	fp,44(sp)
  150c88:	d8800015 	stw	r2,0(sp)
  150c8c:	10805204 	addi	r2,r2,328
  150c90:	dd400815 	stw	r21,32(sp)
  150c94:	dfc00c15 	stw	ra,48(sp)
  150c98:	ddc00a15 	stw	r23,40(sp)
  150c9c:	dd800915 	stw	r22,36(sp)
  150ca0:	dd000715 	stw	r20,28(sp)
  150ca4:	dcc00615 	stw	r19,24(sp)
  150ca8:	dc800515 	stw	r18,20(sp)
  150cac:	dc400415 	stw	r17,16(sp)
  150cb0:	dc000315 	stw	r16,12(sp)
  150cb4:	d9000115 	stw	r4,4(sp)
  150cb8:	2839883a 	mov	fp,r5
  150cbc:	d8800215 	stw	r2,8(sp)
  150cc0:	057fffc4 	movi	r21,-1
  150cc4:	d8800017 	ldw	r2,0(sp)
  150cc8:	14805217 	ldw	r18,328(r2)
  150ccc:	90001826 	beq	r18,zero,150d30 <__call_exitprocs+0xbc>
  150cd0:	ddc00217 	ldw	r23,8(sp)
  150cd4:	90c00117 	ldw	r3,4(r18)
  150cd8:	1c3fffc4 	addi	r16,r3,-1
  150cdc:	80001116 	blt	r16,zero,150d24 <__call_exitprocs+0xb0>
  150ce0:	18c00044 	addi	r3,r3,1
  150ce4:	8427883a 	add	r19,r16,r16
  150ce8:	18c7883a 	add	r3,r3,r3
  150cec:	95802204 	addi	r22,r18,136
  150cf0:	9ce7883a 	add	r19,r19,r19
  150cf4:	18c7883a 	add	r3,r3,r3
  150cf8:	b4e7883a 	add	r19,r22,r19
  150cfc:	90e3883a 	add	r17,r18,r3
  150d00:	e0001726 	beq	fp,zero,150d60 <__call_exitprocs+0xec>
  150d04:	8c87c83a 	sub	r3,r17,r18
  150d08:	b0c7883a 	add	r3,r22,r3
  150d0c:	18c01e17 	ldw	r3,120(r3)
  150d10:	1f001326 	beq	r3,fp,150d60 <__call_exitprocs+0xec>
  150d14:	843fffc4 	addi	r16,r16,-1
  150d18:	9cffff04 	addi	r19,r19,-4
  150d1c:	8c7fff04 	addi	r17,r17,-4
  150d20:	857ff71e 	bne	r16,r21,150d00 <__call_exitprocs+0x8c>
  150d24:	00800034 	movhi	r2,0
  150d28:	10800004 	addi	r2,r2,0
  150d2c:	10002a1e 	bne	r2,zero,150dd8 <__call_exitprocs+0x164>
  150d30:	dfc00c17 	ldw	ra,48(sp)
  150d34:	df000b17 	ldw	fp,44(sp)
  150d38:	ddc00a17 	ldw	r23,40(sp)
  150d3c:	dd800917 	ldw	r22,36(sp)
  150d40:	dd400817 	ldw	r21,32(sp)
  150d44:	dd000717 	ldw	r20,28(sp)
  150d48:	dcc00617 	ldw	r19,24(sp)
  150d4c:	dc800517 	ldw	r18,20(sp)
  150d50:	dc400417 	ldw	r17,16(sp)
  150d54:	dc000317 	ldw	r16,12(sp)
  150d58:	dec00d04 	addi	sp,sp,52
  150d5c:	f800283a 	ret
  150d60:	91000117 	ldw	r4,4(r18)
  150d64:	88c00017 	ldw	r3,0(r17)
  150d68:	213fffc4 	addi	r4,r4,-1
  150d6c:	24001526 	beq	r4,r16,150dc4 <__call_exitprocs+0x150>
  150d70:	88000015 	stw	zero,0(r17)
  150d74:	183fe726 	beq	r3,zero,150d14 <__call_exitprocs+0xa0>
  150d78:	00800044 	movi	r2,1
  150d7c:	1408983a 	sll	r4,r2,r16
  150d80:	91406217 	ldw	r5,392(r18)
  150d84:	95000117 	ldw	r20,4(r18)
  150d88:	214a703a 	and	r5,r4,r5
  150d8c:	28000b26 	beq	r5,zero,150dbc <__call_exitprocs+0x148>
  150d90:	91406317 	ldw	r5,396(r18)
  150d94:	2148703a 	and	r4,r4,r5
  150d98:	20000c1e 	bne	r4,zero,150dcc <__call_exitprocs+0x158>
  150d9c:	99400017 	ldw	r5,0(r19)
  150da0:	d9000117 	ldw	r4,4(sp)
  150da4:	183ee83a 	callr	r3
  150da8:	90c00117 	ldw	r3,4(r18)
  150dac:	1d3fc51e 	bne	r3,r20,150cc4 <__call_exitprocs+0x50>
  150db0:	b8c00017 	ldw	r3,0(r23)
  150db4:	1cbfd726 	beq	r3,r18,150d14 <__call_exitprocs+0xa0>
  150db8:	003fc206 	br	150cc4 <__call_exitprocs+0x50>
  150dbc:	183ee83a 	callr	r3
  150dc0:	003ff906 	br	150da8 <__call_exitprocs+0x134>
  150dc4:	94000115 	stw	r16,4(r18)
  150dc8:	003fea06 	br	150d74 <__call_exitprocs+0x100>
  150dcc:	99000017 	ldw	r4,0(r19)
  150dd0:	183ee83a 	callr	r3
  150dd4:	003ff406 	br	150da8 <__call_exitprocs+0x134>
  150dd8:	90c00117 	ldw	r3,4(r18)
  150ddc:	1800081e 	bne	r3,zero,150e00 <__call_exitprocs+0x18c>
  150de0:	90c00017 	ldw	r3,0(r18)
  150de4:	18000a26 	beq	r3,zero,150e10 <__call_exitprocs+0x19c>
  150de8:	9009883a 	mov	r4,r18
  150dec:	b8c00015 	stw	r3,0(r23)
  150df0:	00000000 	call	0 <__alt_mem_onchip_memory2-0x140000>
  150df4:	bc800017 	ldw	r18,0(r23)
  150df8:	903fb61e 	bne	r18,zero,150cd4 <__call_exitprocs+0x60>
  150dfc:	003fcc06 	br	150d30 <__call_exitprocs+0xbc>
  150e00:	90c00017 	ldw	r3,0(r18)
  150e04:	902f883a 	mov	r23,r18
  150e08:	1825883a 	mov	r18,r3
  150e0c:	003ffa06 	br	150df8 <__call_exitprocs+0x184>
  150e10:	0007883a 	mov	r3,zero
  150e14:	003ffb06 	br	150e04 <__call_exitprocs+0x190>

00150e18 <__floatundidf>:
  150e18:	defffc04 	addi	sp,sp,-16
  150e1c:	dc000015 	stw	r16,0(sp)
  150e20:	2021883a 	mov	r16,r4
  150e24:	2809883a 	mov	r4,r5
  150e28:	dfc00315 	stw	ra,12(sp)
  150e2c:	dc800215 	stw	r18,8(sp)
  150e30:	dc400115 	stw	r17,4(sp)
  150e34:	014e3c00 	call	14e3c0 <__floatunsidf>
  150e38:	180b883a 	mov	r5,r3
  150e3c:	000d883a 	mov	r6,zero
  150e40:	01d07c34 	movhi	r7,16880
  150e44:	1009883a 	mov	r4,r2
  150e48:	014d2fc0 	call	14d2fc <__muldf3>
  150e4c:	8009883a 	mov	r4,r16
  150e50:	1025883a 	mov	r18,r2
  150e54:	1823883a 	mov	r17,r3
  150e58:	014e3c00 	call	14e3c0 <__floatunsidf>
  150e5c:	1009883a 	mov	r4,r2
  150e60:	180b883a 	mov	r5,r3
  150e64:	900d883a 	mov	r6,r18
  150e68:	880f883a 	mov	r7,r17
  150e6c:	014bf640 	call	14bf64 <__adddf3>
  150e70:	dfc00317 	ldw	ra,12(sp)
  150e74:	dc800217 	ldw	r18,8(sp)
  150e78:	dc400117 	ldw	r17,4(sp)
  150e7c:	dc000017 	ldw	r16,0(sp)
  150e80:	dec00404 	addi	sp,sp,16
  150e84:	f800283a 	ret

00150e88 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  150e88:	defffd04 	addi	sp,sp,-12
  150e8c:	df000215 	stw	fp,8(sp)
  150e90:	df000204 	addi	fp,sp,8
  150e94:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  150e98:	0001883a 	nop
  150e9c:	e0bfff17 	ldw	r2,-4(fp)
  150ea0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  150ea4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  150ea8:	10000226 	beq	r2,zero,150eb4 <_exit+0x2c>
    ALT_SIM_FAIL();
  150eac:	002af070 	cmpltui	zero,zero,43969
  150eb0:	00000106 	br	150eb8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  150eb4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  150eb8:	003fff06 	br	150eb8 <_exit+0x30>
